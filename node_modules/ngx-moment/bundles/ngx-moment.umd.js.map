{"version":3,"file":"ngx-moment.umd.js.map","sources":["ng://ngx-moment/add.pipe.ts","ng://ngx-moment/calendar.pipe.ts","ng://ngx-moment/date-format.pipe.ts","ng://ngx-moment/difference.pipe.ts","ng://ngx-moment/duration.pipe.ts","ng://ngx-moment/from-unix.pipe.ts","ng://ngx-moment/parse.pipe.ts","ng://ngx-moment/subtract.pipe.ts","ng://ngx-moment/time-ago.pipe.ts","ng://ngx-moment/utc.pipe.ts","ng://ngx-moment/from-utc.pipe.ts","ng://ngx-moment/local.pipe.ts","ng://ngx-moment/locale.pipe.ts","ng://ngx-moment/parse-zone.pipe.ts","ng://ngx-moment/moment.module.ts"],"sourcesContent":["/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amAdd' })\r\nexport class AddPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('AddPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).add(amount, unit);\r\n    }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport { Pipe, ChangeDetectorRef, PipeTransform, EventEmitter, OnDestroy, NgZone } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amCalendar', pure: false })\r\nexport class CalendarPipe implements PipeTransform, OnDestroy {\r\n\r\n  /**\r\n   * Internal reference counter, so we can clean up when no instances are in use\r\n   */\r\n  private static refs = 0;\r\n\r\n  private static timer: number | null = null;\r\n  private static midnight: EventEmitter<Date> | null = null;\r\n\r\n  private midnightSub: Subscription;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n    // using a single static timer for all instances of this pipe for performance reasons\r\n    CalendarPipe.initTimer(ngZone);\r\n\r\n    CalendarPipe.refs++;\r\n\r\n    // values such as Today will need to be replaced with Yesterday after midnight,\r\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\r\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\r\n      this.ngZone.run(() => this.cdRef.markForCheck());\r\n    });\r\n  }\r\n\r\n  transform(value: Date | moment.Moment, ...args: any[]): any {\r\n    let formats: any = null;\r\n    let referenceTime: any = null;\r\n\r\n    for (let i = 0, len = args.length; i < len; i++) {\r\n      if (args[i] !== null) {\r\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\r\n          formats = args[i];\r\n        } else {\r\n          referenceTime = momentConstructor(args[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return momentConstructor(value).calendar(referenceTime, formats);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (CalendarPipe.refs > 0) {\r\n      CalendarPipe.refs--;\r\n    }\r\n\r\n    if (CalendarPipe.refs === 0) {\r\n      CalendarPipe.removeTimer();\r\n    }\r\n\r\n    this.midnightSub.unsubscribe();\r\n  }\r\n\r\n  private static initTimer(ngZone: NgZone) {\r\n    // initialize the timer\r\n    if (!CalendarPipe.midnight) {\r\n      CalendarPipe.midnight = new EventEmitter<Date>();\r\n      if (typeof window !== 'undefined') {\r\n        const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\r\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\r\n          return window.setTimeout(() => {\r\n            // emit the current date\r\n            CalendarPipe.midnight.emit(new Date());\r\n\r\n            // refresh the timer\r\n            CalendarPipe.removeTimer();\r\n            CalendarPipe.initTimer(ngZone);\r\n          }, timeToUpdate);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private static removeTimer() {\r\n    if (CalendarPipe.timer) {\r\n      window.clearTimeout(CalendarPipe.timer);\r\n      CalendarPipe.timer = null;\r\n      CalendarPipe.midnight = null;\r\n    }\r\n  }\r\n\r\n  private static _getMillisecondsUntilUpdate() {\r\n    const now = momentConstructor();\r\n    const tomorrow = momentConstructor().startOf('day').add(1, 'days');\r\n    const timeToMidnight = tomorrow.valueOf() - now.valueOf();\r\n    return timeToMidnight + 1000; // 1 second after midnight\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDateFormat' })\r\nexport class DateFormatPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number, ...args: any[]): string {\r\n    if (!value) { return ''; }\r\n    return momentConstructor(value).format(args[0]);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDifference' })\r\nexport class DifferencePipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment,\r\n            otherValue: Date | moment.Moment,\r\n            unit?: moment.unitOfTime.Diff,\r\n            precision?: boolean): number {\r\n\r\n    const date = momentConstructor(value);\r\n    const date2 = (otherValue !== null) ? momentConstructor(otherValue) : momentConstructor();\r\n\r\n    return date.diff(date2, unit, precision);\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amDuration' })\r\nexport class DurationPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): string {\r\n    if (typeof args === 'undefined' || args.length !== 1) {\r\n      throw new Error('DurationPipe: missing required time unit argument');\r\n    }\r\n    return moment.duration(value, args[0] as moment.unitOfTime.DurationConstructor).humanize();\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUnix' })\r\nexport class FromUnixPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): any {\r\n    if (typeof value === 'string') {\r\n      value = +value;\r\n    }\r\n    return moment.unix(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amParse' })\r\nexport class ParsePipe implements PipeTransform {\r\n  transform(value: string, format: string): moment.Moment {\r\n    return momentConstructor(value, format);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amSubtract' })\r\nexport class SubtractPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('SubtractPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).subtract(amount, unit);\r\n    }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform, OnDestroy, NgZone} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({name: 'amTimeAgo', pure: false})\r\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\r\n  private currentTimer: number | null;\r\n\r\n  private lastTime: Number;\r\n  private lastValue: moment.MomentInput;\r\n  private lastOmitSuffix: boolean;\r\n  private lastLocale?: string;\r\n  private lastText: string;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n  }\r\n\r\n  transform(value: moment.MomentInput, omitSuffix?: boolean): string {\r\n    if (this.hasChanged(value, omitSuffix)) {\r\n      this.lastTime = this.getTime(value);\r\n      this.lastValue = value;\r\n      this.lastOmitSuffix = omitSuffix;\r\n      this.lastLocale = this.getLocale(value);\r\n      this.removeTimer();\r\n      this.createTimer();\r\n      this.lastText = momentConstructor(value).from(momentConstructor(), omitSuffix);\r\n\r\n    } else {\r\n      this.createTimer();\r\n    }\r\n\r\n    return this.lastText;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.removeTimer();\r\n  }\r\n\r\n  private createTimer() {\r\n    if (this.currentTimer) {\r\n      return;\r\n    }\r\n\r\n    const momentInstance = momentConstructor(this.lastValue);\r\n    const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\r\n\r\n    this.currentTimer = this.ngZone.runOutsideAngular(() => {\r\n      if (typeof window !== 'undefined') {\r\n        return window.setTimeout(() => {\r\n          this.lastText = momentConstructor(this.lastValue).from(momentConstructor(), this.lastOmitSuffix);\r\n\r\n          this.currentTimer = null;\r\n          this.ngZone.run(() => this.cdRef.markForCheck());\r\n        }, timeToUpdate);\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  private removeTimer() {\r\n    if (this.currentTimer) {\r\n      window.clearTimeout(this.currentTimer);\r\n      this.currentTimer = null;\r\n    }\r\n  }\r\n\r\n  private getSecondsUntilUpdate(momentInstance: moment.Moment) {\r\n    const howOld = Math.abs(momentConstructor().diff(momentInstance, 'minute'));\r\n    if (howOld < 1) {\r\n      return 1;\r\n    } else if (howOld < 60) {\r\n      return 30;\r\n    } else if (howOld < 180) {\r\n      return 300;\r\n    } else {\r\n      return 3600;\r\n    }\r\n  }\r\n\r\n  private hasChanged(value: moment.MomentInput, omitSuffix?: boolean): boolean {\r\n    return this.getTime(value) !== this.lastTime\r\n      || this.getLocale(value) !== this.lastLocale\r\n      || omitSuffix !== this.lastOmitSuffix;\r\n  }\r\n\r\n  private getTime(value: moment.MomentInput): number {\r\n    if (moment.isDate(value)) {\r\n      return value.getTime();\r\n    } else if (moment.isMoment(value)) {\r\n      return value.valueOf();\r\n    } else {\r\n      return momentConstructor(value).valueOf();\r\n    }\r\n  }\r\n\r\n  private getLocale(value: moment.MomentInput): string | null {\r\n    return moment.isMoment(value) ? value.locale() : null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amUtc' })\r\nexport class UtcPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n    return momentConstructor(value).utc();\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUtc' })\r\nexport class FromUtcPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): any {\r\n    return moment.utc(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocal' })\r\nexport class LocalTimePipe implements PipeTransform {\r\n    transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n        return momentConstructor(value).local();\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n// under systemjs, moment is actually exported as the default export, so we account for that\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocale' })\r\nexport class LocalePipe implements PipeTransform {\r\n  transform(value: string, locale: string): moment.Moment {\r\n    return momentConstructor(value).locale(locale);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amParseZone' })\r\nexport class ParseZonePipe implements PipeTransform {\r\n  transform(value: string): moment.Moment {\r\n    return moment.parseZone(value);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AddPipe } from './add.pipe';\r\nimport { CalendarPipe } from './calendar.pipe';\r\nimport { DateFormatPipe } from './date-format.pipe';\r\nimport { DifferencePipe } from './difference.pipe';\r\nimport { DurationPipe } from './duration.pipe';\r\nimport { FromUnixPipe } from './from-unix.pipe';\r\nimport { ParsePipe } from './parse.pipe';\r\nimport { SubtractPipe } from './subtract.pipe';\r\nimport { TimeAgoPipe } from './time-ago.pipe';\r\nimport { UtcPipe } from './utc.pipe';\r\nimport { FromUtcPipe } from './from-utc.pipe';\r\nimport { LocalTimePipe } from './local.pipe';\r\nimport { LocalePipe } from './locale.pipe';\r\nimport { ParseZonePipe } from './parse-zone.pipe';\r\n\r\nconst ANGULAR_MOMENT_PIPES = [\r\n  AddPipe,\r\n  CalendarPipe,\r\n  DateFormatPipe,\r\n  DifferencePipe,\r\n  DurationPipe,\r\n  FromUnixPipe,\r\n  ParsePipe,\r\n  SubtractPipe,\r\n  TimeAgoPipe,\r\n  UtcPipe,\r\n  FromUtcPipe,\r\n  LocalTimePipe,\r\n  LocalePipe,\r\n  ParseZonePipe\r\n];\r\n\r\n@NgModule({\r\n  declarations: ANGULAR_MOMENT_PIPES,\r\n  exports: ANGULAR_MOMENT_PIPES\r\n})\r\nexport class MomentModule { }\r\n"],"names":["Pipe","momentConstructor","moment.isMoment","EventEmitter","ChangeDetectorRef","NgZone","moment.duration","moment.unix","moment.isDate","moment.utc","moment.parseZone","NgModule"],"mappings":"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"}
