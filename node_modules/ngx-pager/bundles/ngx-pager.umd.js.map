{"version":3,"file":"ngx-pager.umd.js.map","sources":["ng://ngx-pager/lib/ngx-pager.service.ts","ng://ngx-pager/lib/ngx-pager.component.ts","ng://ngx-pager/lib/ngx-pager.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxPagerService {\n\n  constructor() { }\n}\n","import { Component,  Output, Input, EventEmitter , OnChanges, SimpleChanges} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'ngx-pager',\n  templateUrl:'./ngx-pager.component.html',\n  styleUrls: ['./ngx-pager.component.scss']\n})\nexport class NgxPagerComponent implements OnChanges {\n\n  @Input() config: any = null; // set the config\n  @Input() totalrow = null;\n  // @Output('page') page = new EventEmitter();\n  pages : Array<any> = []; // get pages\n  currentPage : number = 1; // for current page no\n  displayPagesCount: number = 3; // set no of display page \n  totalPage: number = 1; // get the total page\n  simple:boolean = false; // to set only next and prev link\n  firstLastView: boolean = false; // to set that last first button will display or not\n  error : boolean = false;\n  redirectType: string = '';\n  redirectParamName: string = '';\n\n  customContent: any = {\n    \"prev\":\"&#10094;\",\n    \"next\":\"&#x276F;\",\n    \"first\":\"&#10094;&#10094;\",\n    \"last\":\"&#x276F;&#x276F;\",\n  }\n\n\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 06-03-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and defin the languages data\n\t* PARAMS : cService, modalService, translate\n\t*/\n  constructor(private route: Router, private activeRoute: ActivatedRoute) {}\n  /* Function Name : ngOnInit\n\t* Author : \n\t* Created Date : 06-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS : \n\t*/\n  ngOnInit() {\n    \n    if (localStorage.getItem('_nxp') && this.config && !this.config.redirect) {\n          \n      let localUrl = localStorage.getItem('_nxp');\n      let localUrlArr = localUrl.split(\":\");\n      if (localUrlArr[0] == this.route.url) {\n        this.currentPage = Number(localUrlArr[1]);\n      }\n      this.rendering();\n    } \n    else if (!localStorage.getItem('_nxp') && this.config && !this.config.redirect) {\n      localStorage.setItem('_nxp', this.route.url+':'+this.currentPage);\n      this.rendering();\n    }\n    else if (this.totalrow || this.totalrow == 0) {\n        this.error = true;\n    }\n    else if(this.config && this.config.redirect){\n      localStorage.removeItem(\"_nxp\");\n      if (!this.config.redirect.type) {\n        console.error(\"'type' parameter must be set with 'redirect' parameter\");\n        this.error = true;\n        return false;\n      }\n      if (!this.config.redirect.param) {\n        console.error(\"'param' parameter must be set with 'redirect' parameter\");\n        this.error = true;\n        return false;\n      }\n      if (!this.error) {\n          let activeRouteObj =  null;\n          if (this.config.redirect.type === 'q') { // query string\n            activeRouteObj = this.activeRoute.queryParams;\n            this.redirectParamName = this.config.redirect.param;\n          } else if (this.config.redirect.type === 'p') { // query parameters\n            this.redirectParamName = this.config.redirect.param.name;\n            activeRouteObj = this.activeRoute.params;\n          }\n\n          activeRouteObj.subscribe(params => {\n            if (params[this.redirectParamName]) {\n              this.currentPage = parseInt(params[this.redirectParamName]);\n            } \n            this.rendering();\n          })\n      }\n    } \n  }\n\n  ngOnChanges(changes:SimpleChanges) {\n\n    if (changes.totalrow && this.totalrow)  {\n      \n      this.settings();\n    }\n  }\n  settings() {\n    if (this.config) {\n      \n      if (this.config.firstLastView) {\n        this.firstLastView = this.config.firstLastView;\n      }\n      if (this.config.simple) {\n        this.simple = this.config.simple;\n      }\n      if (this.config.displayPageCount) {\n        this.displayPagesCount = this.config.displayPageCount;\n      }\n\n      if (this.config.customContent) {\n        if (this.config.customContent.prev) {\n          this.customContent.prev = this.config.customContent.prev;\n        }\n        if (this.config.customContent.next) {\n          this.customContent.next = this.config.customContent.next;\n        }\n        if (this.config.customContent.first) {\n          this.customContent.first = this.config.customContent.first;\n        }\n        if (this.config.customContent.last) {\n          this.customContent.last = this.config.customContent.last;\n        }\n      }\n      \n      if (this.error === false && this.totalrow && this.config.perPage) {\n        this.totalPage = this.totalrow/this.config.perPage;\n        if (this.totalPage%1 != 0) {\n          this.totalPage +=1;\n          this.totalPage = Math.floor(this.totalPage);\n        }\n      } else {\n        if (!this.totalrow) {\n          console.error(\"'totalrow' parameter must be set\");\n          this.error = true;\n          // return false;\n        }\n        if (!this.config.perPage) {\n          console.error(\"'perPage' parameter must be set\");\n          this.error = true;\n          // return false;\n        }\n      }\n      \n      if (this.error === false && this.displayPagesCount > this.totalPage) {\n        this.displayPagesCount = this.totalPage;\n      }\n      if (this.error === false) {\n        this.redefinePager();\n      }\n     \n      \n    } else {\n      console.error(\"define 'config' parameters of ngx-pager\");\n      this.error = true;\n      return false;\n    }\n  }\n  /* Function Name : pageClick\n\t* Author : \n\t* Created Date : 06-03-2019 \n\t* Modified Date : *\n\t* Purpose : event for click on page\n\t* PARAMS : pageNo\n\t*/\n  pageClick(event, pageNo) {\n    this.currentPage = pageNo;\n    // console.log(this.currentPage);\n    this.redefinePager();\n    if (!this.config.redirect) {\n      localStorage.setItem('_nxp', this.route.url+':'+this.currentPage);\n      this.rendering();\n      \n    } else {\n      let navigateConfig = {\n        relativeTo: this.activeRoute\n      }\n      if (this.config.redirect.type === 'q') {\n        navigateConfig['queryParams'] = {};\n        navigateConfig['queryParams'][this.redirectParamName] = this.currentPage;\n        navigateConfig['queryParamsHandling'] = 'merge';\n        this.route.navigate([], navigateConfig);  \n      } else if (this.config.redirect.type === 'p') {\n        if (this.config.redirect.param.path) {\n          let navigate = [this.config.redirect.param.path];\n          for (let p in this.config.redirect.param.params) {\n            if (p===this.redirectParamName) {\n              navigate.push(this.currentPage);\n            } else {\n              navigate.push(this.config.redirect.param.params[p]);\n            }\n          }\n          this.route.navigate(navigate);\n        } else {\n          console.error(\"'url' parameter must be set with 'config.redirect'\");\n          this.error = true;\n          return false;\n        }\n        \n      }\n      \n    }\n  }\n  /* Function Name : redefinePager\n\t* Author : \n\t* Created Date : 06-03-2019 \n\t* Modified Date : *\n\t* Purpose : to create pagination html\n\t* PARAMS : \n\t*/\n  redefinePager() {\n      this.pages = [];\n      this.pages.push(this.currentPage);\n      let leftCount = 0;\n      let rightCount = 0;\n      if (this.displayPagesCount%2 == 0) { // if even display number count\n        leftCount = Math.floor(this.displayPagesCount/3); // one thard in left\n        rightCount = Math.floor((this.displayPagesCount*2)/3); // two thard in right\n        if (this.displayPagesCount%6 == 0) {\n          leftCount -=1;\n        }\n      } else { // if odd display number count \n        leftCount = Math.floor((this.displayPagesCount-1)/2); // half in left\n        rightCount = Math.floor((this.displayPagesCount-1)/2); // half in right\n        \n      }\n      let leftArr=[], rightArr=[];\n      for (let p=1; p<=leftCount; p++) {\n        if ((this.currentPage-p) > 0 ) {\n          leftArr.push(this.currentPage-p);\n        }\n      }\n      if (leftArr.length < leftCount) {\n        rightCount += leftCount-leftArr.length; \n      }\n      for (let p=1; p<=rightCount; p++) {\n        if (this.currentPage+p <= this.totalPage) {\n          rightArr.push(this.currentPage+p);\n        }\n      }\n      if (rightArr.length < rightCount) {\n        leftCount += rightCount - rightArr.length  ;\n        leftArr = [];\n        for (let p=1; p<=leftCount; p++) {\n          if ((this.currentPage-p) > 0 ) {\n            leftArr.push(this.currentPage-p);\n          }\n        }\n      }\n      this.pages = this.pages.concat(leftArr);\n      this.pages = this.pages.concat(rightArr);\n      \n      this.pages.sort((a, b) => a - b);\n\n  }\n\n\n  rendering() {\n    setTimeout(()=>{\n      this.config.render(this.currentPage);\n    },5)\n  }\n}\n","import { NgModule } from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule} from '@angular/common';\nimport { NgxPagerComponent } from './ngx-pager.component';\n\n@NgModule({\n  declarations: [NgxPagerComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,  NgxPagerComponent]\n})\nexport class NgxPagerModule { }\n"],"names":["Injectable","Component","Router","ActivatedRoute","Input","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;8BAJD;KAEA;;;;;;ACFA;;;;;;;;QAqCE,2BAAoB,KAAa,EAAU,WAA2B;YAAlD,UAAK,GAAL,KAAK,CAAQ;YAAU,gBAAW,GAAX,WAAW,CAAgB;YA5B7D,WAAM,GAAQ,IAAI,CAAC;;YACnB,aAAQ,GAAG,IAAI,CAAC;;YAEzB,UAAK,GAAgB,EAAE,CAAC;;YACxB,gBAAW,GAAY,CAAC,CAAC;;YACzB,sBAAiB,GAAW,CAAC,CAAC;;YAC9B,cAAS,GAAW,CAAC,CAAC;;YACtB,WAAM,GAAW,KAAK,CAAC;;YACvB,kBAAa,GAAY,KAAK,CAAC;;YAC/B,UAAK,GAAa,KAAK,CAAC;YACxB,iBAAY,GAAW,EAAE,CAAC;YAC1B,sBAAiB,GAAW,EAAE,CAAC;YAE/B,kBAAa,GAAQ;gBACnB,MAAM,EAAC,UAAU;gBACjB,MAAM,EAAC,UAAU;gBACjB,OAAO,EAAC,kBAAkB;gBAC1B,MAAM,EAAC,kBAAkB;aAC1B,CAAA;SAUyE;;;;;;;;;;;;;;;;;;QAQ1E,oCAAQ;;;;;;;;;;YAAR;gBAAA,iBAgDC;gBA9CC,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;;wBAEpE,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;;wBACvC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;oBACrC,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;wBACpC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC3C;oBACD,IAAI,CAAC,SAAS,EAAE,CAAC;iBAClB;qBACI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;oBAC9E,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,GAAG,GAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAClE,IAAI,CAAC,SAAS,EAAE,CAAC;iBAClB;qBACI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;oBAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;iBACrB;qBACI,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAC;oBAC1C,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;wBAC9B,OAAO,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;wBACxE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBAClB,OAAO,KAAK,CAAC;qBACd;oBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE;wBAC/B,OAAO,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;wBACzE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBAClB,OAAO,KAAK,CAAC;qBACd;oBACD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;;4BACT,cAAc,GAAI,IAAI;wBAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,EAAE;4BACrC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;4BAC9C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;yBACrD;6BAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,EAAE;4BAC5C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;4BACzD,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;yBAC1C;wBAED,cAAc,CAAC,SAAS;;;2BAAC,UAAA,MAAM;4BAC7B,IAAI,MAAM,CAAC,KAAI,CAAC,iBAAiB,CAAC,EAAE;gCAClC,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;6BAC7D;4BACD,KAAI,CAAC,SAAS,EAAE,CAAC;yBAClB,EAAC,CAAA;qBACL;iBACF;aACF;;;;;QAED,uCAAW;;;;YAAX,UAAY,OAAqB;gBAE/B,IAAI,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAG;oBAEtC,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;aACF;;;;QACD,oCAAQ;;;YAAR;gBACE,IAAI,IAAI,CAAC,MAAM,EAAE;oBAEf,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;wBAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;qBAChD;oBACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;wBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;qBAClC;oBACD,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;wBAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;qBACvD;oBAED,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;wBAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE;4BAClC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;yBAC1D;wBACD,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE;4BAClC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;yBAC1D;wBACD,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE;4BACnC,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;yBAC5D;wBACD,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE;4BAClC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;yBAC1D;qBACF;oBAED,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;wBAChE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;wBACnD,IAAI,IAAI,CAAC,SAAS,GAAC,CAAC,IAAI,CAAC,EAAE;4BACzB,IAAI,CAAC,SAAS,IAAG,CAAC,CAAC;4BACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;yBAC7C;qBACF;yBAAM;wBACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BAClB,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;4BAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;yBAEnB;wBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;4BACxB,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;4BACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;yBAEnB;qBACF;oBAED,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,EAAE;wBACnE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;qBACzC;oBACD,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;wBACxB,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtB;iBAGF;qBAAM;oBACL,OAAO,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;oBACzD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,OAAO,KAAK,CAAC;iBACd;aACF;;;;;;;;;;;;;;;;;;;;QAQD,qCAAS;;;;;;;;;;;;YAAT,UAAU,KAAK,EAAE,MAAM;gBACrB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;;gBAE1B,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;oBACzB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,GAAG,GAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAClE,IAAI,CAAC,SAAS,EAAE,CAAC;iBAElB;qBAAM;;wBACD,cAAc,GAAG;wBACnB,UAAU,EAAE,IAAI,CAAC,WAAW;qBAC7B;oBACD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,EAAE;wBACrC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;wBACnC,cAAc,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;wBACzE,cAAc,CAAC,qBAAqB,CAAC,GAAG,OAAO,CAAC;wBAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;qBACzC;yBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,GAAG,EAAE;wBAC5C,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;;gCAC/B,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;4BAChD,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;gCAC/C,IAAI,CAAC,KAAG,IAAI,CAAC,iBAAiB,EAAE;oCAC9B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iCACjC;qCAAM;oCACL,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iCACrD;6BACF;4BACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;yBAC/B;6BAAM;4BACL,OAAO,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;4BACpE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;4BAClB,OAAO,KAAK,CAAC;yBACd;qBAEF;iBAEF;aACF;;;;;;;;;;;;;;;;;;QAQD,yCAAa;;;;;;;;;;YAAb;gBACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;oBAC9B,SAAS,GAAG,CAAC;;oBACb,UAAU,GAAG,CAAC;gBAClB,IAAI,IAAI,CAAC,iBAAiB,GAAC,CAAC,IAAI,CAAC,EAAE;oBACjC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,GAAC,CAAC,CAAC,CAAC;oBACjD,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAC,CAAC,IAAE,CAAC,CAAC,CAAC;oBACtD,IAAI,IAAI,CAAC,iBAAiB,GAAC,CAAC,IAAI,CAAC,EAAE;wBACjC,SAAS,IAAG,CAAC,CAAC;qBACf;iBACF;qBAAM;oBACL,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAC,CAAC,IAAE,CAAC,CAAC,CAAC;oBACrD,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAC,CAAC,IAAE,CAAC,CAAC,CAAC;iBAEvD;;oBACG,OAAO,GAAC,EAAE;;oBAAE,QAAQ,GAAC,EAAE;gBAC3B,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,IAAE,SAAS,EAAE,CAAC,EAAE,EAAE;oBAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAC,CAAC,IAAI,CAAC,EAAG;wBAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAC,CAAC,CAAC,CAAC;qBAClC;iBACF;gBACD,IAAI,OAAO,CAAC,MAAM,GAAG,SAAS,EAAE;oBAC9B,UAAU,IAAI,SAAS,GAAC,OAAO,CAAC,MAAM,CAAC;iBACxC;gBACD,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,IAAE,UAAU,EAAE,CAAC,EAAE,EAAE;oBAChC,IAAI,IAAI,CAAC,WAAW,GAAC,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;wBACxC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAC,CAAC,CAAC,CAAC;qBACnC;iBACF;gBACD,IAAI,QAAQ,CAAC,MAAM,GAAG,UAAU,EAAE;oBAChC,SAAS,IAAI,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAG;oBAC5C,OAAO,GAAG,EAAE,CAAC;oBACb,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,IAAE,SAAS,EAAE,CAAC,EAAE,EAAE;wBAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAC,CAAC,IAAI,CAAC,EAAG;4BAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAC,CAAC,CAAC,CAAC;yBAClC;qBACF;iBACF;gBACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAEzC,IAAI,CAAC,KAAK,CAAC,IAAI;;;;mBAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;aAEpC;;;;QAGD,qCAAS;;;YAAT;gBAAA,iBAIC;gBAHC,UAAU;;mBAAC;oBACT,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;iBACtC,GAAC,CAAC,CAAC,CAAA;aACL;;oBAxQFC,YAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;wBACrB,yoCAAwC;;qBAEzC;;;;;wBALQC,aAAM;wBAAEC,qBAAc;;;;6BAQ5BC,QAAK;+BACLA,QAAK;;QAiQR,wBAAC;KAzQD;;;;;;ACFA;QAKA;SAQ+B;;oBAR9BC,WAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;wBACjC,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,OAAO,EAAE;4BACPA,mBAAY,EAAG,iBAAiB;yBAAC;qBACpC;;QAC6B,qBAAC;KAR/B;;;;;;;;;;;;;;;;;;;;;;;;"}
