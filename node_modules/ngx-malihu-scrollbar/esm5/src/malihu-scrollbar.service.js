/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable, NgZone } from '@angular/core';
var MalihuScrollbarService = /** @class */ (function () {
    function MalihuScrollbarService(zone) {
        this.zone = zone;
    }
    /**
     * @param {?} element
     * @param {?} options
     * @return {?}
     */
    MalihuScrollbarService.prototype.initScrollbar = /**
     * @param {?} element
     * @param {?} options
     * @return {?}
     */
    function (element, options) {
        /** @type {?} */
        var jQueryElement = this.getElement(element);
        this.zone.runOutsideAngular(function () { return jQueryElement.mCustomScrollbar(options); });
        if (jQueryElement.length > 0 && jQueryElement[0].tagName === 'BODY') {
            jQueryElement[0].style.position = 'absolute';
            jQueryElement[0].style.overflow = 'auto';
            jQueryElement[0].style.height = '100vh';
            jQueryElement[0].style.width = '100vw';
        }
    };
    /**
     * @param {?} element
     * @param {?} parameter
     * @param {?} options
     * @return {?}
     */
    MalihuScrollbarService.prototype.scrollTo = /**
     * @param {?} element
     * @param {?} parameter
     * @param {?} options
     * @return {?}
     */
    function (element, parameter, options) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('scrollTo', parameter, options); });
    };
    /**
     * @param {?} element
     * @return {?}
     */
    MalihuScrollbarService.prototype.update = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('update'); });
    };
    /**
     * @param {?} element
     * @return {?}
     */
    MalihuScrollbarService.prototype.stop = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('stop'); });
    };
    /**
     * @param {?} element
     * @param {?=} reset
     * @return {?}
     */
    MalihuScrollbarService.prototype.disable = /**
     * @param {?} element
     * @param {?=} reset
     * @return {?}
     */
    function (element, reset) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('disable', !!reset); });
    };
    /**
     * @param {?} element
     * @return {?}
     */
    MalihuScrollbarService.prototype.destroy = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('destroy'); });
    };
    /**
     * @param {?} element
     * @return {?}
     */
    MalihuScrollbarService.prototype.getElement = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        if (typeof element === 'string') {
            return $(element);
        }
        if (typeof element === 'object' && element instanceof HTMLElement) {
            return $(element);
        }
        if (element instanceof jQuery || 'jquery' in Object(element)) {
            return element;
        }
        throw Error("Unsupported element type in MalihuScrollbarService: " + element);
    };
    MalihuScrollbarService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    MalihuScrollbarService.ctorParameters = function () { return [
        { type: NgZone }
    ]; };
    return MalihuScrollbarService;
}());
export { MalihuScrollbarService };
if (false) {
    /** @type {?} */
    MalihuScrollbarService.prototype.zone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFsaWh1LXNjcm9sbGJhci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW1hbGlodS1zY3JvbGxiYXIvIiwic291cmNlcyI6WyJzcmMvbWFsaWh1LXNjcm9sbGJhci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUluRDtJQUdFLGdDQUNVLElBQVk7UUFBWixTQUFJLEdBQUosSUFBSSxDQUFRO0lBQ2xCLENBQUM7Ozs7OztJQUVMLDhDQUFhOzs7OztJQUFiLFVBQWMsT0FBc0IsRUFBRSxPQUFnRDs7WUFDOUUsYUFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO1FBRTlDLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsY0FBTSxPQUFBLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsRUFBdkMsQ0FBdUMsQ0FBQyxDQUFDO1FBRTNFLElBQUksYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUU7WUFDbkUsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDO1lBQzdDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQztZQUN6QyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUM7WUFDeEMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDO1NBQ3hDO0lBQ0gsQ0FBQzs7Ozs7OztJQUVELHlDQUFROzs7Ozs7SUFBUixVQUFTLE9BQXNCLEVBQUUsU0FBYyxFQUFFLE9BQWtEO1FBQW5HLGlCQUVDO1FBREMsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxFQUF6RSxDQUF5RSxDQUFDLENBQUM7SUFDL0csQ0FBQzs7Ozs7SUFFRCx1Q0FBTTs7OztJQUFOLFVBQU8sT0FBc0I7UUFBN0IsaUJBRUM7UUFEQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUFuRCxDQUFtRCxDQUFDLENBQUM7SUFDekYsQ0FBQzs7Ozs7SUFFRCxxQ0FBSTs7OztJQUFKLFVBQUssT0FBc0I7UUFBM0IsaUJBRUM7UUFEQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxFQUFqRCxDQUFpRCxDQUFDLENBQUM7SUFDdkYsQ0FBQzs7Ozs7O0lBRUQsd0NBQU87Ozs7O0lBQVAsVUFBUSxPQUFzQixFQUFFLEtBQWU7UUFBL0MsaUJBRUM7UUFEQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQTdELENBQTZELENBQUMsQ0FBQztJQUNuRyxDQUFDOzs7OztJQUVELHdDQUFPOzs7O0lBQVAsVUFBUSxPQUFzQjtRQUE5QixpQkFFQztRQURDLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLEVBQXBELENBQW9ELENBQUMsQ0FBQztJQUMxRixDQUFDOzs7OztJQUVPLDJDQUFVOzs7O0lBQWxCLFVBQW1CLE9BQXNCO1FBQ3ZDLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQy9CLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ25CO1FBQ0QsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLElBQUksT0FBTyxZQUFZLFdBQVcsRUFBRTtZQUNqRSxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNuQjtRQUNELElBQUksT0FBTyxZQUFZLE1BQU0sSUFBSSxRQUFRLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQzVELE9BQU8sT0FBTyxDQUFDO1NBQ2hCO1FBQ0QsTUFBTSxLQUFLLENBQUMseURBQXVELE9BQVMsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7O2dCQW5ERixVQUFVOzs7O2dCQUpVLE1BQU07O0lBd0QzQiw2QkFBQztDQUFBLEFBcERELElBb0RDO1NBbkRZLHNCQUFzQjs7O0lBRy9CLHNDQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuZXhwb3J0IHR5cGUgU2Nyb2xsRWxlbWVudCA9IHN0cmluZyB8IEpRdWVyeSB8IEhUTUxFbGVtZW50O1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTWFsaWh1U2Nyb2xsYmFyU2VydmljZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSB6b25lOiBOZ1pvbmUsXHJcbiAgKSB7IH1cclxuXHJcbiAgaW5pdFNjcm9sbGJhcihlbGVtZW50OiBTY3JvbGxFbGVtZW50LCBvcHRpb25zOiBNQ3VzdG9tU2Nyb2xsYmFyLkN1c3RvbVNjcm9sbGJhck9wdGlvbnMpIHtcclxuICAgIGNvbnN0IGpRdWVyeUVsZW1lbnQgPSB0aGlzLmdldEVsZW1lbnQoZWxlbWVudCk7XHJcblxyXG4gICAgdGhpcy56b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IGpRdWVyeUVsZW1lbnQubUN1c3RvbVNjcm9sbGJhcihvcHRpb25zKSk7XHJcblxyXG4gICAgaWYgKGpRdWVyeUVsZW1lbnQubGVuZ3RoID4gMCAmJiBqUXVlcnlFbGVtZW50WzBdLnRhZ05hbWUgPT09ICdCT0RZJykge1xyXG4gICAgICBqUXVlcnlFbGVtZW50WzBdLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuICAgICAgalF1ZXJ5RWxlbWVudFswXS5zdHlsZS5vdmVyZmxvdyA9ICdhdXRvJztcclxuICAgICAgalF1ZXJ5RWxlbWVudFswXS5zdHlsZS5oZWlnaHQgPSAnMTAwdmgnO1xyXG4gICAgICBqUXVlcnlFbGVtZW50WzBdLnN0eWxlLndpZHRoID0gJzEwMHZ3JztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNjcm9sbFRvKGVsZW1lbnQ6IFNjcm9sbEVsZW1lbnQsIHBhcmFtZXRlcjogYW55LCBvcHRpb25zOiBNQ3VzdG9tU2Nyb2xsYmFyLlNjcm9sbFRvUGFyYW1ldGVyT3B0aW9ucykge1xyXG4gICAgdGhpcy56b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50KS5tQ3VzdG9tU2Nyb2xsYmFyKCdzY3JvbGxUbycsIHBhcmFtZXRlciwgb3B0aW9ucykpO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGVsZW1lbnQ6IFNjcm9sbEVsZW1lbnQpIHtcclxuICAgIHRoaXMuem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB0aGlzLmdldEVsZW1lbnQoZWxlbWVudCkubUN1c3RvbVNjcm9sbGJhcigndXBkYXRlJykpO1xyXG4gIH1cclxuXHJcbiAgc3RvcChlbGVtZW50OiBTY3JvbGxFbGVtZW50KSB7XHJcbiAgICB0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4gdGhpcy5nZXRFbGVtZW50KGVsZW1lbnQpLm1DdXN0b21TY3JvbGxiYXIoJ3N0b3AnKSk7XHJcbiAgfVxyXG5cclxuICBkaXNhYmxlKGVsZW1lbnQ6IFNjcm9sbEVsZW1lbnQsIHJlc2V0PzogYm9vbGVhbikge1xyXG4gICAgdGhpcy56b25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHRoaXMuZ2V0RWxlbWVudChlbGVtZW50KS5tQ3VzdG9tU2Nyb2xsYmFyKCdkaXNhYmxlJywgISFyZXNldCkpO1xyXG4gIH1cclxuXHJcbiAgZGVzdHJveShlbGVtZW50OiBTY3JvbGxFbGVtZW50KSB7XHJcbiAgICB0aGlzLnpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4gdGhpcy5nZXRFbGVtZW50KGVsZW1lbnQpLm1DdXN0b21TY3JvbGxiYXIoJ2Rlc3Ryb3knKSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGdldEVsZW1lbnQoZWxlbWVudDogU2Nyb2xsRWxlbWVudCk6IEpRdWVyeSB7XHJcbiAgICBpZiAodHlwZW9mIGVsZW1lbnQgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHJldHVybiAkKGVsZW1lbnQpO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBlbGVtZW50ID09PSAnb2JqZWN0JyAmJiBlbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcclxuICAgICAgcmV0dXJuICQoZWxlbWVudCk7XHJcbiAgICB9XHJcbiAgICBpZiAoZWxlbWVudCBpbnN0YW5jZW9mIGpRdWVyeSB8fCAnanF1ZXJ5JyBpbiBPYmplY3QoZWxlbWVudCkpIHtcclxuICAgICAgcmV0dXJuIGVsZW1lbnQ7XHJcbiAgICB9XHJcbiAgICB0aHJvdyBFcnJvcihgVW5zdXBwb3J0ZWQgZWxlbWVudCB0eXBlIGluIE1hbGlodVNjcm9sbGJhclNlcnZpY2U6ICR7ZWxlbWVudH1gKTtcclxuICB9XHJcbn1cclxuIl19