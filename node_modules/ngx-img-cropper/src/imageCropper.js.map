{"version":3,"file":"imageCropper.js","sourceRoot":"","sources":["../../src/imageCropper.ts"],"names":[],"mappings":"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","sourcesContent":["import {Bounds} from './model/bounds';\r\nimport {CornerMarker} from './model/cornerMarker';\r\nimport {CropTouch} from './model/cropTouch';\r\nimport {CropperSettings} from './cropperSettings';\r\nimport {DragMarker} from './model/dragMarker';\r\nimport {ImageCropperModel} from './model/imageCropperModel';\r\nimport {ImageCropperDataShare} from './imageCropperDataShare';\r\nimport {PointPool} from './model/pointPool';\r\nimport {Point} from './model/point';\r\nimport {ICornerMarker} from './model/cornerMarker';\r\n\r\nexport class ImageCropper extends ImageCropperModel {\r\n\r\n    private crop:ImageCropper;\r\n    private cropperSettings:CropperSettings;\r\n    private previousDistance:number;\r\n\r\n    constructor(cropperSettings:CropperSettings) {\r\n        super();\r\n\r\n        let x:number = 0;\r\n        let y:number = 0;\r\n        let width:number = cropperSettings.width;\r\n        let height:number = cropperSettings.height;\r\n        let keepAspect:boolean = cropperSettings.keepAspect;\r\n        let touchRadius:number = cropperSettings.touchRadius;\r\n        let centerTouchRadius:number = cropperSettings.centerTouchRadius;\r\n        let minWidth:number = cropperSettings.minWidth;\r\n        let minHeight:number = cropperSettings.minHeight;\r\n        let croppedWidth:number = cropperSettings.croppedWidth;\r\n        let croppedHeight:number = cropperSettings.croppedHeight;\r\n\r\n        this.cropperSettings = cropperSettings;\r\n\r\n        this.crop = this;\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.canvasHeight = cropperSettings.canvasHeight;\r\n        this.canvasWidth = cropperSettings.canvasWidth;\r\n\r\n        this.width = width;\r\n        if (width === void 0) {\r\n            this.width = 100;\r\n        }\r\n        this.height = height;\r\n        if (height === void 0) {\r\n            this.height = 50;\r\n        }\r\n        this.keepAspect = keepAspect;\r\n        if (keepAspect === void 0) {\r\n            this.keepAspect = true;\r\n        }\r\n        this.touchRadius = touchRadius;\r\n        if (touchRadius === void 0) {\r\n            this.touchRadius = 20;\r\n        }\r\n        this.minWidth = minWidth;\r\n        this.minHeight = minHeight;\r\n        this.aspectRatio = 0;\r\n        this.currentDragTouches = [];\r\n        this.isMouseDown = false;\r\n        this.ratioW = 1;\r\n        this.ratioH = 1;\r\n        this.fileType = cropperSettings.fileType;\r\n        this.imageSet = false;\r\n        this.pointPool = new PointPool(200);\r\n\r\n        this.tl = new CornerMarker(x, y, touchRadius, this.cropperSettings);\r\n        this.tr = new CornerMarker(x + width, y, touchRadius, this.cropperSettings);\r\n        this.bl = new CornerMarker(x, y + height, touchRadius, this.cropperSettings);\r\n        this.br = new CornerMarker(x + width, y + height, touchRadius, this.cropperSettings);\r\n\r\n        this.tl.addHorizontalNeighbour(this.tr);\r\n        this.tl.addVerticalNeighbour(this.bl);\r\n        this.tr.addHorizontalNeighbour(this.tl);\r\n        this.tr.addVerticalNeighbour(this.br);\r\n        this.bl.addHorizontalNeighbour(this.br);\r\n        this.bl.addVerticalNeighbour(this.tl);\r\n        this.br.addHorizontalNeighbour(this.bl);\r\n        this.br.addVerticalNeighbour(this.tr);\r\n        this.markers = [this.tl, this.tr, this.bl, this.br];\r\n\r\n        this.center = new DragMarker(x + (width / 2), y + (height / 2), centerTouchRadius, this.cropperSettings);\r\n        this.aspectRatio = height / width;\r\n        this.croppedImage = new Image();\r\n        this.currentlyInteracting = false;\r\n        this.cropWidth = croppedWidth;\r\n        this.cropHeight = croppedHeight;\r\n    }\r\n\r\n    private static sign(x:number):number {\r\n        if (+x === x) {\r\n            return (x === 0) ? x : (x > 0) ? 1 : -1;\r\n        }\r\n        return NaN;\r\n    }\r\n\r\n    private static getMousePos(canvas:HTMLCanvasElement, evt:MouseEvent):Point {\r\n        let rect = canvas.getBoundingClientRect();\r\n        return PointPool.instance.borrow(evt.clientX - rect.left, evt.clientY - rect.top);\r\n    }\r\n\r\n    private static getTouchPos(canvas:HTMLCanvasElement, touch:Touch):Point {\r\n        let rect = canvas.getBoundingClientRect();\r\n        return PointPool.instance.borrow(touch.clientX - rect.left, touch.clientY - rect.top);\r\n    }\r\n\r\n    private static detectVerticalSquash(img:HTMLImageElement | HTMLCanvasElement | HTMLVideoElement) {\r\n        let ih = img.height;\r\n        let canvas = document.createElement('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = ih;\r\n        let ctx = <CanvasRenderingContext2D> canvas.getContext('2d');\r\n        ctx.drawImage(img, 0, 0);\r\n        let imageData:any = ctx.getImageData(0, 0, 1, ih)\r\n        if (imageData) {\r\n            let data = imageData.data;\r\n            // search image edge pixel position in case it is squashed vertically.\r\n            let sy = 0;\r\n            let ey = ih;\r\n            let py = ih;\r\n            while (py > sy) {\r\n                let alpha = data[(py - 1) * 4 + 3];\r\n                if (alpha === 0) {\r\n                    ey = py;\r\n                } else {\r\n                    sy = py;\r\n                }\r\n                py = (ey + sy) >> 1;\r\n            }\r\n            let ratio = (py / ih);\r\n            return (ratio === 0) ? 1 : ratio;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    private getDataUriMimeType(dataUri:string) {\r\n        // Get a substring because the regex does not perform well on very large strings. Cater for optional charset. Length 50 shoould be enough.\r\n        let dataUriSubstring = dataUri.substring(0, 50);\r\n        let mimeType = 'image/png';\r\n        // data-uri scheme\r\n        // data:[<media type>][;charset=<character set>][;base64],<data>\r\n        let regEx = RegExp(/^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi);\r\n        let matches = regEx.exec(dataUriSubstring);\r\n        if (matches && matches[2]) {\r\n            mimeType = matches[2];\r\n            if (mimeType == 'image/jpg') {\r\n                mimeType = 'image/jpeg';\r\n            }\r\n        }\r\n        return mimeType;\r\n    }\r\n\r\n    public prepare(canvas:HTMLCanvasElement) {\r\n        this.buffer = document.createElement('canvas');\r\n        this.cropCanvas = document.createElement('canvas');\r\n\r\n        // todo get more reliable parent width value.\r\n        let responsiveWidth:number = canvas.parentElement ? canvas.parentElement.clientWidth : 0;\r\n        if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\r\n            this.cropCanvas.width = responsiveWidth;\r\n            this.buffer.width = responsiveWidth;\r\n            canvas.width = responsiveWidth;\r\n        } else {\r\n            this.cropCanvas.width = this.cropWidth;\r\n            this.buffer.width = canvas.width;\r\n        }\r\n\r\n        this.cropCanvas.height = this.cropHeight;\r\n        this.buffer.height = canvas.height;\r\n        this.canvas = canvas;\r\n        this.ctx = <CanvasRenderingContext2D> this.canvas.getContext('2d');\r\n\r\n        this.draw(this.ctx);\r\n    }\r\n\r\n    public updateSettings(cropperSettings: CropperSettings) {\r\n      this.cropperSettings = cropperSettings;\r\n    }\r\n\r\n    public resizeCanvas(width:number, height:number, setImage:boolean = false):void {\r\n        this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\r\n        this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\r\n        if (setImage) {\r\n            this.setImage(this.srcImage);\r\n        }\r\n    }\r\n\r\n    public reset():void {\r\n        this.setImage(undefined);\r\n    }\r\n\r\n    public draw(ctx:CanvasRenderingContext2D):void {\r\n        let bounds:Bounds = this.getBounds();\r\n        if (this.srcImage) {\r\n            ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n            let sourceAspect:number = this.srcImage.height / this.srcImage.width;\r\n            let canvasAspect:number = this.canvasHeight / this.canvasWidth;\r\n            let w:number = this.canvasWidth;\r\n            let h:number = this.canvasHeight;\r\n            if (canvasAspect > sourceAspect) {\r\n                w = this.canvasWidth;\r\n                h = this.canvasWidth * sourceAspect;\r\n            } else {\r\n                h = this.canvasHeight;\r\n                w = this.canvasHeight / sourceAspect;\r\n            }\r\n            this.ratioW = w / this.srcImage.width;\r\n            this.ratioH = h / this.srcImage.height;\r\n            if (canvasAspect < sourceAspect) {\r\n                this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height,\r\n                    this.buffer.width / 2 - w / 2, 0, w, h);\r\n            } else {\r\n                this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0,\r\n                    this.buffer.height / 2 - h / 2, w, h);\r\n            }\r\n            (<CanvasRenderingContext2D> this.buffer.getContext('2d'))\r\n                .drawImage(this.canvas, 0, 0, this.canvasWidth, this.canvasHeight);\r\n\r\n            ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n            ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor; // 'rgba(255,228,0,1)';\r\n\r\n            ctx.fillStyle =  'rgba(0, 0, 0, 0.6)';\r\n            if (!this.cropperSettings.rounded) {\r\n                ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n                ctx.drawImage(this.buffer, bounds.left, bounds.top, Math.max(bounds.width, 1), Math.max(bounds.height, 1), bounds.left, bounds.top, bounds.width, bounds.height);\r\n                ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\r\n            }\r\n            else {\r\n                ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n                ctx.save();\r\n                ctx.beginPath();\r\n                ctx.arc(bounds.left + bounds.width / 2, bounds.top + bounds.height / 2,  bounds.width / 2, 0, 2 * Math.PI);\r\n                ctx.clip();\r\n                if (canvasAspect < sourceAspect) {\r\n                    this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height,\r\n                        this.buffer.width / 2 - w / 2, 0, w, h);\r\n                } else {\r\n                    this.drawImageIOSFix(ctx, this.srcImage, 0, 0, this.srcImage.width, this.srcImage.height, 0,\r\n                        this.buffer.height / 2 - h / 2, w, h);\r\n                }\r\n                ctx.restore();\r\n            }\r\n\r\n            let marker:CornerMarker;\r\n\r\n            for (let i = 0; i < this.markers.length; i++) {\r\n                marker = this.markers[i];\r\n                marker.draw(ctx);\r\n            }\r\n            this.center.draw(ctx);\r\n        } else {\r\n            ctx.fillStyle = 'rgba(192,192,192,1)';\r\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n    }\r\n\r\n    public dragCenter(x:number, y:number, marker:DragMarker) {\r\n        let bounds = this.getBounds();\r\n        let left = x - (bounds.width / 2);\r\n        let right = x + (bounds.width / 2);\r\n        let top = y - (bounds.height / 2);\r\n        let bottom = y + (bounds.height / 2);\r\n        if (right >= this.maxXClamp) {\r\n            x = this.maxXClamp - bounds.width / 2;\r\n        }\r\n        if (left <= this.minXClamp) {\r\n            x = bounds.width / 2 + this.minXClamp;\r\n        }\r\n        if (top < this.minYClamp) {\r\n            y = bounds.height / 2 + this.minYClamp;\r\n        }\r\n        if (bottom >= this.maxYClamp) {\r\n            y = this.maxYClamp - bounds.height / 2;\r\n        }\r\n        this.tl.moveX(x - (bounds.width / 2));\r\n        this.tl.moveY(y - (bounds.height / 2));\r\n        this.tr.moveX(x + (bounds.width / 2));\r\n        this.tr.moveY(y - (bounds.height / 2));\r\n        this.bl.moveX(x - (bounds.width / 2));\r\n        this.bl.moveY(y + (bounds.height / 2));\r\n        this.br.moveX(x + (bounds.width / 2));\r\n        this.br.moveY(y + (bounds.height / 2));\r\n        marker.setPosition(x, y);\r\n    }\r\n\r\n    public enforceMinSize(x:number, y:number, marker:CornerMarker) {\r\n\r\n        let xLength = x - marker.getHorizontalNeighbour().position.x;\r\n        let yLength = y - marker.getVerticalNeighbour().position.y;\r\n        let xOver = this.minWidth - Math.abs(xLength);\r\n        let yOver = this.minHeight - Math.abs(yLength);\r\n\r\n        if (xLength === 0 || yLength === 0) {\r\n            x = marker.position.x;\r\n            y = marker.position.y;\r\n\r\n            return PointPool.instance.borrow(x, y);\r\n        }\r\n\r\n        if (this.keepAspect) {\r\n            if (xOver > 0 && (yOver / this.aspectRatio) > 0) {\r\n                if (xOver > (yOver / this.aspectRatio)) {\r\n                    if (xLength < 0) {\r\n                        x -= xOver;\r\n\r\n                        if (yLength < 0) {\r\n                            y -= xOver * this.aspectRatio;\r\n                        } else {\r\n                            y += xOver * this.aspectRatio;\r\n                        }\r\n                    } else {\r\n                        x += xOver;\r\n                        if (yLength < 0) {\r\n                            y -= xOver * this.aspectRatio;\r\n                        } else {\r\n                            y += xOver * this.aspectRatio;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (yLength < 0) {\r\n                        y -= yOver;\r\n\r\n                        if (xLength < 0) {\r\n                            x -= yOver / this.aspectRatio;\r\n                        } else {\r\n                            x += yOver / this.aspectRatio;\r\n                        }\r\n\r\n                    } else {\r\n                        y += yOver;\r\n                        if (xLength < 0) {\r\n                            x -= yOver / this.aspectRatio;\r\n                        } else {\r\n                            x += yOver / this.aspectRatio;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (xOver > 0) {\r\n                    if (xLength < 0) {\r\n                        x -= xOver;\r\n                        if (yLength < 0) {\r\n                            y -= xOver * this.aspectRatio;\r\n                        } else {\r\n                            y += xOver * this.aspectRatio;\r\n                        }\r\n                    } else {\r\n                        x += xOver;\r\n                        if (yLength < 0) {\r\n                            y -= xOver * this.aspectRatio;\r\n                        } else {\r\n                            y += xOver * this.aspectRatio;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (yOver > 0) {\r\n                        if (yLength < 0) {\r\n                            y -= yOver;\r\n\r\n                            if (xLength < 0) {\r\n                                x -= yOver / this.aspectRatio;\r\n                            } else {\r\n                                x += yOver / this.aspectRatio;\r\n                            }\r\n                        } else {\r\n                            y += yOver;\r\n                            if (xLength < 0) {\r\n                                x -= yOver / this.aspectRatio;\r\n                            } else {\r\n                                x += yOver / this.aspectRatio;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (xOver > 0) {\r\n                if (xLength < 0) {\r\n                    x -= xOver;\r\n                } else {\r\n                    x += xOver;\r\n                }\r\n            }\r\n            if (yOver > 0) {\r\n                if (yLength < 0) {\r\n                    y -= yOver;\r\n                } else {\r\n                    y += yOver;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (x < this.minXClamp || x > this.maxXClamp || y < this.minYClamp || y > this.maxYClamp) {\r\n            x = marker.position.x;\r\n            y = marker.position.y;\r\n        }\r\n\r\n        return PointPool.instance.borrow(x, y);\r\n    }\r\n\r\n    public dragCorner(x:number, y:number, marker:CornerMarker) {\r\n        let iX:number = 0;\r\n        let iY:number = 0;\r\n        let ax:number = 0;\r\n        let ay:number = 0;\r\n        let newHeight:number = 0;\r\n        let newWidth:number = 0;\r\n        let newY:number = 0;\r\n        let newX:number = 0;\r\n        let anchorMarker:CornerMarker;\r\n        let fold:number = 0;\r\n\r\n        if (this.keepAspect) {\r\n            anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\r\n            ax = anchorMarker.position.x;\r\n            ay = anchorMarker.position.y;\r\n            if (x <= anchorMarker.position.x) {\r\n                if (y <= anchorMarker.position.y) {\r\n                    iX = ax - (100 / this.aspectRatio);\r\n                    iY = ay - (100 / this.aspectRatio * this.aspectRatio);\r\n                    fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.position,\r\n                        PointPool.instance.borrow(x, y));\r\n                    if (fold > 0) {\r\n                        newHeight = Math.abs(anchorMarker.position.y - y);\r\n                        newWidth = newHeight / this.aspectRatio;\r\n                        newY = anchorMarker.position.y - newHeight;\r\n                        newX = anchorMarker.position.x - newWidth;\r\n                        let min = this.enforceMinSize(newX, newY, marker);\r\n                        marker.move(min.x, min.y);\r\n                        PointPool.instance.returnPoint(min);\r\n                    } else {\r\n                        if (fold < 0) {\r\n                            newWidth = Math.abs(anchorMarker.position.x - x);\r\n                            newHeight = newWidth * this.aspectRatio;\r\n                            newY = anchorMarker.position.y - newHeight;\r\n                            newX = anchorMarker.position.x - newWidth;\r\n                            let min = this.enforceMinSize(newX, newY, marker);\r\n                            marker.move(min.x, min.y);\r\n                            PointPool.instance.returnPoint(min);\r\n                        }\r\n                    }\r\n                } else {\r\n                    iX = ax - (100 / this.aspectRatio);\r\n                    iY = ay + (100 / this.aspectRatio * this.aspectRatio);\r\n                    fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.position,\r\n                        PointPool.instance.borrow(x, y));\r\n                    if (fold > 0) {\r\n                        newWidth = Math.abs(anchorMarker.position.x - x);\r\n                        newHeight = newWidth * this.aspectRatio;\r\n                        newY = anchorMarker.position.y + newHeight;\r\n                        newX = anchorMarker.position.x - newWidth;\r\n                        let min = this.enforceMinSize(newX, newY, marker);\r\n                        marker.move(min.x, min.y);\r\n                        PointPool.instance.returnPoint(min);\r\n                    } else {\r\n                        if (fold < 0) {\r\n                            newHeight = Math.abs(anchorMarker.position.y - y);\r\n                            newWidth = newHeight / this.aspectRatio;\r\n                            newY = anchorMarker.position.y + newHeight;\r\n                            newX = anchorMarker.position.x - newWidth;\r\n                            let min = this.enforceMinSize(newX, newY, marker);\r\n                            marker.move(min.x, min.y);\r\n                            PointPool.instance.returnPoint(min);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (y <= anchorMarker.position.y) {\r\n                    iX = ax + (100 / this.aspectRatio);\r\n                    iY = ay - (100 / this.aspectRatio * this.aspectRatio);\r\n                    fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.position,\r\n                        PointPool.instance.borrow(x, y));\r\n                    if (fold < 0) {\r\n                        newHeight = Math.abs(anchorMarker.position.y - y);\r\n                        newWidth = newHeight / this.aspectRatio;\r\n                        newY = anchorMarker.position.y - newHeight;\r\n                        newX = anchorMarker.position.x + newWidth;\r\n                        let min = this.enforceMinSize(newX, newY, marker);\r\n                        marker.move(min.x, min.y);\r\n                        PointPool.instance.returnPoint(min);\r\n                    } else {\r\n                        if (fold > 0) {\r\n                            newWidth = Math.abs(anchorMarker.position.x - x);\r\n                            newHeight = newWidth * this.aspectRatio;\r\n                            newY = anchorMarker.position.y - newHeight;\r\n                            newX = anchorMarker.position.x + newWidth;\r\n                            let min = this.enforceMinSize(newX, newY, marker);\r\n                            marker.move(min.x, min.y);\r\n                            PointPool.instance.returnPoint(min);\r\n                        }\r\n                    }\r\n                } else {\r\n                    iX = ax + (100 / this.aspectRatio);\r\n                    iY = ay + (100 / this.aspectRatio * this.aspectRatio);\r\n                    fold = this.getSide(PointPool.instance.borrow(iX, iY), anchorMarker.position,\r\n                        PointPool.instance.borrow(x, y));\r\n                    if (fold < 0) {\r\n                        newWidth = Math.abs(anchorMarker.position.x - x);\r\n                        newHeight = newWidth * this.aspectRatio;\r\n                        newY = anchorMarker.position.y + newHeight;\r\n                        newX = anchorMarker.position.x + newWidth;\r\n                        let min = this.enforceMinSize(newX, newY, marker);\r\n                        marker.move(min.x, min.y);\r\n                        PointPool.instance.returnPoint(min);\r\n                    } else {\r\n                        if (fold > 0) {\r\n                            newHeight = Math.abs(anchorMarker.position.y - y);\r\n                            newWidth = newHeight / this.aspectRatio;\r\n                            newY = anchorMarker.position.y + newHeight;\r\n                            newX = anchorMarker.position.x + newWidth;\r\n                            let min = this.enforceMinSize(newX, newY, marker);\r\n                            marker.move(min.x, min.y);\r\n                            PointPool.instance.returnPoint(min);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            let min = this.enforceMinSize(x, y, marker);\r\n            marker.move(min.x, min.y);\r\n            PointPool.instance.returnPoint(min);\r\n        }\r\n        this.center.recalculatePosition(this.getBounds());\r\n    }\r\n\r\n    public getSide(a:Point, b:Point, c:Point):number {\r\n        let n:number = ImageCropper.sign((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x));\r\n\r\n        // TODO move the return of the pools to outside of this function\r\n        PointPool.instance.returnPoint(a);\r\n        PointPool.instance.returnPoint(c);\r\n        return n;\r\n    }\r\n\r\n    public handleRelease(newCropTouch:CropTouch) {\r\n\r\n        if (newCropTouch == null) {\r\n            return;\r\n        }\r\n        let index = 0;\r\n        for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n            if (newCropTouch.id === this.currentDragTouches[k].id) {\r\n                this.currentDragTouches[k].dragHandle.setDrag(false);\r\n                index = k;\r\n            }\r\n        }\r\n        this.currentDragTouches.splice(index, 1);\r\n        this.draw(this.ctx);\r\n    }\r\n\r\n    public handleMove(newCropTouch:CropTouch) {\r\n        let matched = false;\r\n        for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n            if (newCropTouch.id === this.currentDragTouches[k].id && this.currentDragTouches[k].dragHandle != null) {\r\n                let dragTouch:CropTouch = this.currentDragTouches[k];\r\n                let clampedPositions = this.clampPosition(newCropTouch.x - dragTouch.dragHandle.offset.x,\r\n                    newCropTouch.y - dragTouch.dragHandle.offset.y);\r\n                newCropTouch.x = clampedPositions.x;\r\n                newCropTouch.y = clampedPositions.y;\r\n                PointPool.instance.returnPoint(clampedPositions);\r\n                if (dragTouch.dragHandle instanceof CornerMarker) {\r\n                    this.dragCorner(newCropTouch.x, newCropTouch.y, (dragTouch.dragHandle as CornerMarker));\r\n                } else {\r\n                    this.dragCenter(newCropTouch.x, newCropTouch.y, (dragTouch.dragHandle as DragMarker));\r\n                }\r\n                this.currentlyInteracting = true;\r\n                matched = true;\r\n                ImageCropperDataShare.setPressed(this.canvas);\r\n                break;\r\n            }\r\n        }\r\n        if (!matched) {\r\n            for (let i = 0; i < this.markers.length; i++) {\r\n                let marker:ICornerMarker = this.markers[i];\r\n                if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n                    newCropTouch.dragHandle = marker;\r\n                    this.currentDragTouches.push(newCropTouch);\r\n                    marker.setDrag(true);\r\n                    newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n                    newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n                    this.dragCorner(newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n                        newCropTouch.y - newCropTouch.dragHandle.offset.y, (newCropTouch.dragHandle as CornerMarker));\r\n                    break;\r\n                }\r\n            }\r\n            if (newCropTouch.dragHandle === null || typeof newCropTouch.dragHandle === 'undefined') {\r\n                if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n                    newCropTouch.dragHandle = this.center;\r\n                    this.currentDragTouches.push(newCropTouch);\r\n                    newCropTouch.dragHandle.setDrag(true);\r\n                    newCropTouch.dragHandle.offset.x = newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n                    newCropTouch.dragHandle.offset.y = newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n                    this.dragCenter(newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n                        newCropTouch.y - newCropTouch.dragHandle.offset.y, (newCropTouch.dragHandle as DragMarker));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public updateClampBounds() {\r\n        let sourceAspect = this.srcImage.height / this.srcImage.width;\r\n        let canvasAspect = this.canvas.height / this.canvas.width;\r\n        let w = this.canvas.width;\r\n        let h = this.canvas.height;\r\n        if (canvasAspect > sourceAspect) {\r\n            w = this.canvas.width;\r\n            h = this.canvas.width * sourceAspect;\r\n        } else {\r\n            h = this.canvas.height;\r\n            w = this.canvas.height / sourceAspect;\r\n        }\r\n        this.minXClamp = this.canvas.width / 2 - w / 2;\r\n        this.minYClamp = this.canvas.height / 2 - h / 2;\r\n        this.maxXClamp = this.canvas.width / 2 + w / 2;\r\n        this.maxYClamp = this.canvas.height / 2 + h / 2;\r\n    }\r\n\r\n    public getCropBounds() {\r\n        let bounds = this.getBounds();\r\n        bounds.top = Math.round(( bounds.top - this.minYClamp) / this.ratioH);\r\n        bounds.bottom = Math.round(( bounds.bottom - this.minYClamp) / this.ratioH);\r\n        bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\r\n        bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\r\n        return bounds;\r\n    }\r\n\r\n    public clampPosition(x:number, y:number) {\r\n        if (x < this.minXClamp) {\r\n            x = this.minXClamp;\r\n        }\r\n        if (x > this.maxXClamp) {\r\n            x = this.maxXClamp;\r\n        }\r\n        if (y < this.minYClamp) {\r\n            y = this.minYClamp;\r\n        }\r\n        if (y > this.maxYClamp) {\r\n            y = this.maxYClamp;\r\n        }\r\n        return PointPool.instance.borrow(x, y);\r\n    }\r\n\r\n    public isImageSet() {\r\n        return this.imageSet;\r\n    }\r\n\r\n    public setImage(img:any) {\r\n        this.srcImage = img;\r\n        if (!img) {\r\n            this.imageSet = false;\r\n            this.draw(this.ctx);\r\n        } else {\r\n            this.imageSet = true;\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            let bufferContext = <CanvasRenderingContext2D> this.buffer.getContext('2d');\r\n            bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\r\n\r\n            if (!this.cropperSettings.fileType)\r\n                this.fileType = this.getDataUriMimeType(img.src);\r\n\r\n            if (this.cropperSettings.minWithRelativeToResolution) {\r\n                this.minWidth = (this.canvas.width * this.cropperSettings.minWidth / this.srcImage.width);\r\n                this.minHeight = (this.canvas.height * this.cropperSettings.minHeight / this.srcImage.height);\r\n            }\r\n\r\n            this.updateClampBounds();\r\n            this.canvasWidth = this.canvas.width;\r\n            this.canvasHeight = this.canvas.height;\r\n\r\n            let cropPosition:Point[] = this.getCropPositionFromMarkers();\r\n            this.setCropPosition(cropPosition);\r\n        }\r\n    }\r\n\r\n    public updateCropPosition(cropBounds:Bounds):void {\r\n        let cropPosition:Point[] = this.getCropPositionFromBounds(cropBounds);\r\n        this.setCropPosition(cropPosition);\r\n    }\r\n\r\n    private setCropPosition(cropPosition:Point[]):void {\r\n        this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\r\n        this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\r\n        this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\r\n        this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\r\n        this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\r\n\r\n        for (let position of cropPosition) {\r\n            PointPool.instance.returnPoint(position);\r\n        }\r\n\r\n        this.vertSquashRatio = ImageCropper.detectVerticalSquash(this.srcImage);\r\n        this.draw(this.ctx);\r\n        this.croppedImage = this.getCroppedImageHelper(false, this.cropWidth, this.cropHeight);\r\n    }\r\n\r\n    private getCropPositionFromMarkers():Point[] {\r\n        let w:number = this.canvas.width;\r\n        let h:number = this.canvas.height;\r\n        let tlPos:Point, trPos:Point, blPos:Point, brPos:Point, center:Point;\r\n        let sourceAspect:number = this.srcImage.height / this.srcImage.width;\r\n        let cropBounds:Bounds = this.getBounds();\r\n        let cropAspect:number = cropBounds.height / cropBounds.width;\r\n        let cX:number = this.canvas.width / 2;\r\n        let cY:number = this.canvas.height / 2;\r\n\r\n        if (cropAspect > sourceAspect) {\r\n            let imageH = Math.min(w * sourceAspect, h);\r\n            let cropW = imageH / cropAspect;\r\n            tlPos = PointPool.instance.borrow(cX - cropW / 2, cY + imageH / 2);\r\n            trPos = PointPool.instance.borrow(cX + cropW / 2, cY + imageH / 2);\r\n            blPos = PointPool.instance.borrow(cX - cropW / 2, cY - imageH / 2);\r\n            brPos = PointPool.instance.borrow(cX + cropW / 2, cY - imageH / 2);\r\n        } else {\r\n            let imageW = Math.min(h / sourceAspect, w);\r\n            let cropH = imageW * cropAspect;\r\n            tlPos = PointPool.instance.borrow(cX - imageW / 2, cY + cropH / 2);\r\n            trPos = PointPool.instance.borrow(cX + imageW / 2, cY + cropH / 2);\r\n            blPos = PointPool.instance.borrow(cX - imageW / 2, cY - cropH / 2);\r\n            brPos = PointPool.instance.borrow(cX + imageW / 2, cY - cropH / 2);\r\n        }\r\n\r\n        center = PointPool.instance.borrow(cX, cY);\r\n        let positions:Point[] = [tlPos, trPos, blPos, brPos, center];\r\n        return positions;\r\n    }\r\n\r\n    private getCropPositionFromBounds(cropPosition:Bounds):Point[] {\r\n        let marginTop = 0;\r\n        let marginLeft = 0;\r\n        let canvasAspect:number = this.canvasHeight / this.canvasWidth;\r\n        let sourceAspect:number = this.srcImage.height / this.srcImage.width;\r\n\r\n        if (canvasAspect > sourceAspect) {\r\n            marginTop = this.buffer.height / 2 - (this.canvasWidth * sourceAspect) / 2;\r\n        } else {\r\n            marginLeft = this.buffer.width / 2 - (this.canvasHeight / sourceAspect) / 2;\r\n        }\r\n\r\n        let ratioW:number = (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\r\n        let ratioH:number = (this.canvasHeight - marginTop * 2) / this.srcImage.height;\r\n\r\n        let actualH:number = cropPosition.height * ratioH;\r\n        let actualW:number = cropPosition.width * ratioW;\r\n        let actualX:number = cropPosition.left * ratioW + marginLeft;\r\n        let actualY:number = cropPosition.top * ratioH + marginTop;\r\n\r\n        if (this.keepAspect) {\r\n            let scaledW:number = actualH / this.aspectRatio;\r\n            let scaledH:number = actualW * this.aspectRatio;\r\n\r\n            if (this.getCropBounds().height === cropPosition.height) { // only width changed\r\n                actualH = scaledH;\r\n            } else if (this.getCropBounds().width === cropPosition.width) { // only height changed\r\n                actualW = scaledW;\r\n            } else { // height and width changed\r\n                if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\r\n                    actualW = scaledW;\r\n                } else {\r\n                    actualH = scaledH;\r\n                }\r\n            }\r\n        }\r\n\r\n        let tlPos:Point = PointPool.instance.borrow(actualX, actualY + actualH);\r\n        let trPos:Point = PointPool.instance.borrow(actualX + actualW, actualY + actualH);\r\n        let blPos:Point = PointPool.instance.borrow(actualX, actualY);\r\n        let brPos:Point = PointPool.instance.borrow(actualX + actualW, actualY);\r\n        let center:Point = PointPool.instance.borrow(actualX + actualW / 2, actualY + actualH / 2);\r\n\r\n        let positions:Point[] = [tlPos, trPos, blPos, brPos, center];\r\n        return positions;\r\n    }\r\n\r\n    public getCroppedImageHelper(preserveSize?:boolean, fillWidth?:number, fillHeight?:number):HTMLImageElement {\r\n        if (this.cropperSettings.cropOnResize) {\r\n            return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\r\n        }\r\n        return this.croppedImage? this.croppedImage : document.createElement('img');\r\n    }\r\n\r\n    // todo: Unused parameters?\r\n    public getCroppedImage(preserveSize?:boolean, fillWidth?:number, fillHeight?:number):HTMLImageElement {\r\n        let bounds:Bounds = this.getBounds();\r\n        if (!this.srcImage) {\r\n            return document.createElement('img');\r\n        } else {\r\n            let sourceAspect:number = this.srcImage.height / this.srcImage.width;\r\n            let canvasAspect:number = this.canvas.height / this.canvas.width;\r\n            let w:number = this.canvas.width;\r\n            let h:number = this.canvas.height;\r\n            if (canvasAspect > sourceAspect) {\r\n                w = this.canvas.width;\r\n                h = this.canvas.width * sourceAspect;\r\n            } else {\r\n                if (canvasAspect < sourceAspect) {\r\n                    h = this.canvas.height;\r\n                    w = this.canvas.height / sourceAspect;\r\n                } else {\r\n                    h = this.canvas.height;\r\n                    w = this.canvas.width;\r\n                }\r\n            }\r\n            this.ratioW = w / this.srcImage.width;\r\n            this.ratioH = h / this.srcImage.height;\r\n            let offsetH:number = (this.buffer.height - h) / 2 / this.ratioH;\r\n            let offsetW:number = (this.buffer.width - w) / 2 / this.ratioW;\r\n\r\n            let ctx = <CanvasRenderingContext2D> this.cropCanvas.getContext('2d');\r\n\r\n\r\n            if (this.cropperSettings.preserveSize || preserveSize) {\r\n                var width = Math.round(bounds.right/this.ratioW - bounds.left/this.ratioW);\r\n                var height = Math.round(bounds.bottom/this.ratioH - bounds.top/this.ratioH);\r\n\r\n                this.cropCanvas.width = width;\r\n                this.cropCanvas.height = height;\r\n\r\n                this.cropperSettings.croppedWidth = this.cropCanvas.width;\r\n                this.cropperSettings.croppedHeight = this.cropCanvas.height;\r\n            } else {\r\n                this.cropCanvas.width = this.cropWidth;\r\n                this.cropCanvas.height = this.cropHeight;\r\n            }\r\n\r\n            ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\r\n            this.drawImageIOSFix(ctx, this.srcImage,\r\n                Math.max(Math.round((bounds.left) / this.ratioW - offsetW), 0),\r\n                Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0),\r\n                Math.max(Math.round(bounds.width / this.ratioW), 1), Math.max(Math.round(bounds.height / this.ratioH), 1),\r\n                0, 0, this.cropCanvas.width, this.cropCanvas.height\r\n            );\r\n\r\n            if (this.cropperSettings.resampleFn) {\r\n                this.cropperSettings.resampleFn(this.cropCanvas);\r\n            }\r\n\r\n            this.croppedImage.width = this.cropCanvas.width;\r\n            this.croppedImage.height = this.cropCanvas.height;\r\n            this.croppedImage.src = this.cropCanvas.toDataURL(this.fileType, this.cropperSettings.compressRatio);\r\n            return this.croppedImage;\r\n        }\r\n    }\r\n\r\n    public getBounds():Bounds {\r\n        let minX = Number.MAX_VALUE;\r\n        let minY = Number.MAX_VALUE;\r\n        let maxX = -Number.MAX_VALUE;\r\n        let maxY = -Number.MAX_VALUE;\r\n        for (let i = 0; i < this.markers.length; i++) {\r\n            let marker = this.markers[i];\r\n            if (marker.position.x < minX) {\r\n                minX = marker.position.x;\r\n            }\r\n            if (marker.position.x > maxX) {\r\n                maxX = marker.position.x;\r\n            }\r\n            if (marker.position.y < minY) {\r\n                minY = marker.position.y;\r\n            }\r\n            if (marker.position.y > maxY) {\r\n                maxY = marker.position.y;\r\n            }\r\n        }\r\n        let bounds:Bounds = new Bounds();\r\n        bounds.left = minX;\r\n        bounds.right = maxX;\r\n        bounds.top = minY;\r\n        bounds.bottom = maxY;\r\n        return bounds;\r\n    }\r\n\r\n    public setBounds(bounds:any) {\r\n\r\n        let topLeft:CornerMarker;\r\n        let topRight:CornerMarker;\r\n        let bottomLeft:CornerMarker;\r\n        let bottomRight:CornerMarker;\r\n\r\n        let currentBounds = this.getBounds();\r\n        for (let i = 0; i < this.markers.length; i++) {\r\n            let marker = this.markers[i];\r\n\r\n            if (marker.position.x === currentBounds.left) {\r\n                if (marker.position.y === currentBounds.top) {\r\n                    marker.setPosition(bounds.left, bounds.top);\r\n                } else {\r\n                    marker.setPosition(bounds.left, bounds.bottom);\r\n                }\r\n            } else {\r\n                if (marker.position.y === currentBounds.top) {\r\n                    marker.setPosition(bounds.right, bounds.top);\r\n                } else {\r\n                    marker.setPosition(bounds.right, bounds.bottom);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.center.recalculatePosition(bounds);\r\n        this.center.draw(this.ctx);\r\n        this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\r\n    }\r\n\r\n    public onTouchMove(event:TouchEvent) {\r\n        if (this.crop.isImageSet()) {\r\n            if (event.touches.length === 1) {\r\n                if (this.isMouseDown) {\r\n                    event.preventDefault();\r\n                    for (let i = 0; i < event.touches.length; i++) {\r\n                        let touch = event.touches[i];\r\n                        let touchPosition = ImageCropper.getTouchPos(this.canvas, touch);\r\n                        let cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\r\n                        PointPool.instance.returnPoint(touchPosition);\r\n                        this.move(cropTouch);\r\n                    }\r\n                }\r\n            } else {\r\n                if (event.touches.length === 2) {\r\n                    event.preventDefault();\r\n\r\n                    const distance = ((event.touches[0].clientX - event.touches[1].clientX) * (event.touches[0].clientX - event.touches[1].clientX)) + ((event.touches[0].clientY - event.touches[1].clientY) * (event.touches[0].clientY - event.touches[1].clientY));\r\n                    if (this.previousDistance && this.previousDistance !== distance) {\r\n                        let bounds = this.getBounds();\r\n\r\n                        if (distance < this.previousDistance) {\r\n                            bounds.top += 1;\r\n                            bounds.left += 1;\r\n                            bounds.right -= 1;\r\n                            bounds.bottom -= 1;\r\n                        }\r\n\r\n                        if (distance > this.previousDistance) {\r\n                            if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) { // none\r\n                                bounds.top -= 1;\r\n                                bounds.left -= 1;\r\n                                bounds.right += 1;\r\n                                bounds.bottom += 1;\r\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) { // left\r\n                                bounds.top -= 1;\r\n                                bounds.right += 2;\r\n                                bounds.bottom += 1;\r\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) { // right\r\n                                bounds.top -= 1;\r\n                                bounds.left -= 2;\r\n                                bounds.bottom += 1;\r\n                            } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) { // top\r\n                                bounds.left -= 1;\r\n                                bounds.right += 1;\r\n                                bounds.bottom += 2;\r\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left !== this.minXClamp && bounds.right !== this.maxXClamp) { // bottom\r\n                                bounds.top -= 2;\r\n                                bounds.left -= 1;\r\n                                bounds.right += 1;\r\n                            } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) { // top left\r\n                                bounds.right += 2;\r\n                                bounds.bottom += 2;\r\n                            } else if (bounds.top === this.minYClamp && bounds.bottom !== this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) { // top right\r\n                                bounds.left -= 2;\r\n                                bounds.bottom += 2;\r\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left === this.minXClamp && bounds.right !== this.maxXClamp) { // bottom left\r\n                                bounds.top -= 2;\r\n                                bounds.right += 2;\r\n                            } else if (bounds.top !== this.minYClamp && bounds.bottom === this.maxYClamp && bounds.left !== this.minXClamp && bounds.right === this.maxXClamp) { // bottom right\r\n                                bounds.top -= 2;\r\n                                bounds.left -= 2;\r\n                            }\r\n                        }\r\n\r\n                        if (bounds.top < this.minYClamp) bounds.top = this.minYClamp;\r\n                        if (bounds.bottom > this.maxYClamp) bounds.bottom = this.maxYClamp;\r\n                        if (bounds.left < this.minXClamp) bounds.left = this.minXClamp;\r\n                        if (bounds.right > this.maxXClamp) bounds.right = this.maxXClamp;\r\n\r\n                        this.setBounds(bounds);\r\n                    }\r\n                    this.previousDistance = distance;\r\n                }\r\n            }\r\n            this.draw(this.ctx);\r\n        }\r\n    }\r\n\r\n    public onMouseMove(e:MouseEvent) {\r\n\r\n        if (this.crop.isImageSet() && this.isMouseDown) {\r\n            let mousePosition = ImageCropper.getMousePos(this.canvas, e);\r\n            this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\r\n            let dragTouch = this.getDragTouchForID(0);\r\n            if (dragTouch) {\r\n                dragTouch.x = mousePosition.x;\r\n                dragTouch.y = mousePosition.y;\r\n            } else {\r\n                dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\r\n            }\r\n            PointPool.instance.returnPoint(mousePosition);\r\n            this.drawCursors(dragTouch);\r\n            this.draw(this.ctx);\r\n        }\r\n    }\r\n\r\n    public move(cropTouch:CropTouch) {\r\n        if (this.isMouseDown) {\r\n            this.handleMove(cropTouch);\r\n        }\r\n    }\r\n\r\n    public getDragTouchForID(id:any):CropTouch | undefined {\r\n        for (let i = 0; i < this.currentDragTouches.length; i++) {\r\n            if (id === this.currentDragTouches[i].id) {\r\n                return this.currentDragTouches[i];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public drawCursors(cropTouch:CropTouch) {\r\n        let cursorDrawn = false;\r\n        if (cropTouch != null) {\r\n            if (cropTouch.dragHandle === this.center) {\r\n                ImageCropperDataShare.setStyle(this.canvas, 'move');\r\n                cursorDrawn = true;\r\n            }\r\n            if (cropTouch.dragHandle !== null && cropTouch.dragHandle instanceof CornerMarker) {\r\n\r\n                this.drawCornerCursor(cropTouch.dragHandle, cropTouch.dragHandle.position.x,\r\n                    cropTouch.dragHandle.position.y);\r\n                cursorDrawn = true;\r\n            }\r\n        }\r\n        let didDraw = false;\r\n        if (!cursorDrawn) {\r\n            for (let i = 0; i < this.markers.length; i++) {\r\n                didDraw = didDraw || this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\r\n            }\r\n            if (!didDraw) {\r\n                ImageCropperDataShare.setStyle(this.canvas, 'initial');\r\n            }\r\n        }\r\n        if (!didDraw && !cursorDrawn && this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n            this.center.setOver(true);\r\n            ImageCropperDataShare.setOver(this.canvas);\r\n            ImageCropperDataShare.setStyle(this.canvas, 'move');\r\n        } else {\r\n            this.center.setOver(false);\r\n        }\r\n    }\r\n\r\n    public drawCornerCursor(marker:any, x:number, y:number) {\r\n        if (marker.touchInBounds(x, y)) {\r\n            marker.setOver(true);\r\n            if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\r\n                if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n                    ImageCropperDataShare.setOver(this.canvas);\r\n                    ImageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n                } else {\r\n                    ImageCropperDataShare.setOver(this.canvas);\r\n                    ImageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n                }\r\n            } else {\r\n                if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n                    ImageCropperDataShare.setOver(this.canvas);\r\n                    ImageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n                } else {\r\n                    ImageCropperDataShare.setOver(this.canvas);\r\n                    ImageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        marker.setOver(false);\r\n        return false;\r\n    }\r\n\r\n    public onTouchStart(event:TouchEvent) {\r\n        if (this.crop.isImageSet()) {\r\n            let touch = event.touches[0];\r\n            let touchPosition = ImageCropper.getTouchPos(this.canvas, touch);\r\n            let cropTouch = new CropTouch(touchPosition.x, touchPosition.y, touch.identifier);\r\n            PointPool.instance.returnPoint(touchPosition);\r\n\r\n            this.isMouseDown = false;\r\n            for (let i = 0; i < this.markers.length; i++) {\r\n                let marker: ICornerMarker = this.markers[i];\r\n                if (marker.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n                    this.isMouseDown = true;\r\n                }\r\n            }\r\n            if (this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n                this.isMouseDown = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    public onTouchEnd(event:TouchEvent) {\r\n        if (this.crop.isImageSet()) {\r\n            for (let i = 0; i < event.changedTouches.length; i++) {\r\n                let touch = event.changedTouches[i];\r\n                let dragTouch = this.getDragTouchForID(touch.identifier);\r\n                if (dragTouch && dragTouch !== undefined) {\r\n                    if (dragTouch.dragHandle instanceof CornerMarker || dragTouch.dragHandle instanceof DragMarker) {\r\n                        dragTouch.dragHandle.setOver(false);\r\n                    }\r\n                    this.handleRelease(dragTouch);\r\n                }\r\n            }\r\n\r\n            if (this.currentDragTouches.length === 0) {\r\n                this.isMouseDown = false;\r\n                this.currentlyInteracting = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\r\n    public drawImageIOSFix(ctx:CanvasRenderingContext2D, img:HTMLImageElement | HTMLCanvasElement | HTMLVideoElement,\r\n                           sx:number, sy:number, sw:number, sh:number, dx:number, dy:number, dw:number,\r\n                           dh:number) {\r\n\r\n        // Works only if whole image is displayed:\r\n        // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\r\n        // The following works correct also when only a part of the image is displayed:\r\n        // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\r\n        // this.vertSquashRatio, dx, dy, dw, dh);\r\n        ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n    }\r\n\r\n    public onMouseDown(event:MouseEvent) {\r\n        if (this.crop.isImageSet()) {\r\n            this.isMouseDown = true;\r\n        }\r\n    }\r\n\r\n    public onMouseUp(event:MouseEvent) {\r\n        if (this.crop.isImageSet()) {\r\n            ImageCropperDataShare.setReleased(this.canvas);\r\n            this.isMouseDown = false;\r\n            this.handleRelease(new CropTouch(0, 0, 0));\r\n        }\r\n    }\r\n}\r\n"]}