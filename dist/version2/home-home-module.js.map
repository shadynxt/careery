{"version":3,"sources":["webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/landing/landing.component.html","webpack:///./src/app/home/landing/landing.component.scss","webpack:///./src/app/home/landing/landing.component.ts","webpack:///./src/app/home/profile-chart/profile-chart.component.html","webpack:///./src/app/home/profile-chart/profile-chart.component.scss","webpack:///./src/app/home/profile-chart/profile-chart.component.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 10-01-2019\n# Module                : HomeRoutingModule                     \n# Object name           : HomeRoutingModule    \n# Functionality         : set all routes for home module\n# Purpose               : \n*******************************************************/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LandingComponent } from './landing/landing.component';\nimport { ProfileChartComponent } from './profile-chart/profile-chart.component';\nconst routes: Routes = [\n  {\n    path : '',\n    component : LandingComponent\n  },\n  \n  { path : \"user/chart/:userCPP\",   component : ProfileChartComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 10-01-2019\n# Module                : HomeModule                     \n# Object name           : HomeModule    \n# Functionality         : set up home module\n# Purpose               : \n*******************************************************/\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { ChartsModule } from 'ng2-charts';\nimport { HomeRoutingModule } from './home-routing.module';\nimport {GlobalModule} from \"../global/global.module\";\nimport { LandingComponent } from './landing/landing.component';\nimport { SignupthankyouComponent } from './signupthankyou/signupthankyou.component';\nimport { SignupverificationComponent } from './signupverification/signupverification.component';\nimport { ProfileChartComponent } from './profile-chart/profile-chart.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { UserlevelComponent } from './userlevel/userlevel.component';\nimport { SetupprofileComponent } from './setupprofile/setupprofile.component';\n// import { CmspageComponent } from './cmspage/cmspage.component';\n\n\n@NgModule({\n  declarations: [LandingComponent, SignupthankyouComponent, SignupverificationComponent, ProfileChartComponent, ResetpasswordComponent, UserlevelComponent, SetupprofileComponent,\n    //  CmspageComponent\n    ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    GlobalModule,\n    ChartsModule,\n\n  ],\n  providers:[]\n})\nexport class HomeModule { }\n","module.exports = \"    <div class=\\\"row align-items-center loginSearch clearfix\\\">\\n      <div class=\\\"loginSearchLeft col-lg-5\\\">\\n        <ngb-tabset class=\\\"forLogin\\\" (tabChange)=\\\"changeTabEvent($event)\\\">\\n          <ngb-tab>\\n            <ng-template ngbTabTitle>{{ 'LANDING.SIGNUP' | translate }}</ng-template>\\n            <ng-template ngbTabContent>\\n              <form [formGroup]=\\\"registerForm\\\" novalidate >\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n                <div class=\\\"row\\\">\\n                  <!-- <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">{{successMessage}}</div> -->\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"formWrap\\\">\\n                      <label for=\\\"\\\">{{ 'LANDING.FIRST_NAME' | translate }}<small><i\\n                            class=\\\"fa fa-asterisk landing-req-sign\\\" aria-hidden=\\\"true\\\"></i></small> :</label>\\n                      <input class=\\\"txtField\\\" type=\\\"text\\\" name=\\\"first_name\\\"\\n                        placeholder=\\\"{{ 'LANDING.FIRST_NAME' | translate }}\\\" id=\\\"first_name\\\"\\n                        formControlName=\\\"first_name\\\" pattern=\\\"[a-zA-Z ]*\\\" required>\\n                      <div\\n                        *ngIf=\\\"registerFormSubmitStatus && registerForm.controls['first_name'].errors\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"registerForm.controls['first_name'].errors.required\\\">\\n                          {{ 'LANDING.FIRST_NAME_REQUIRED'| translate }}</div>\\n                        <div *ngIf=\\\"registerForm.controls['first_name'].hasError('whitespace')\\\">\\n                          {{ 'LANDING.INVALID'| translate }}</div>\\n                        <div *ngIf=\\\"registerForm.controls['first_name'].errors.pattern\\\">\\n                          {{ 'LANDING.INVALID'| translate }}</div>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"formWrap\\\">\\n                      <label for=\\\"\\\">{{ 'LANDING.LAST_NAME' | translate }}<small><i\\n                            class=\\\"fa fa-asterisk landing-req-sign\\\" aria-hidden=\\\"true\\\"></i></small> :</label>\\n                      <input class=\\\"txtField\\\" type=\\\"text\\\" name=\\\"last_name\\\" id=\\\"last_name\\\"\\n                        placeholder=\\\"{{ 'LANDING.LAST_NAME' | translate }}\\\" formControlName=\\\"last_name\\\"\\n                        pattern=\\\"[a-zA-Z ]*\\\" required>\\n                      <div\\n                        *ngIf=\\\"registerFormSubmitStatus &&  registerForm.controls['last_name'].errors\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"registerForm.controls['last_name'].errors.required\\\">\\n                          {{ 'LANDING.LAST_NAME_REQUIRED'| translate }}</div>\\n                        <div *ngIf=\\\"registerForm.controls['last_name'].hasError('whitespace')\\\">\\n                          {{ 'LANDING.INVALID'| translate }}</div>\\n                        <div *ngIf=\\\"registerForm.controls['last_name'].errors.pattern\\\">\\n                          {{ 'LANDING.INVALID'| translate }}</div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"formWrap\\\" *ngIf=\\\"registerBy=='email'\\\">\\n                  <label for=\\\"\\\">{{ 'LANDING.EMAIL' | translate }}<small><i class=\\\"fa fa-asterisk landing-req-sign\\\"\\n                        aria-hidden=\\\"true\\\"></i></small> :</label>\\n                  <input class=\\\"txtField\\\" type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\"\\n                    placeholder=\\\"{{ 'LANDING.EMAIL' | translate }}\\\" formControlName=\\\"email\\\" required>\\n                  <div\\n                    *ngIf=\\\"registerFormSubmitStatus && registerForm.controls['email'].errors\\\"\\n                    class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"  registerForm.controls['email'].errors.required\\\">\\n                      {{ 'LANDING.EMAIL_REQUIRED'| translate }}\\n                    </div>\\n                    <div *ngIf=\\\"registerForm.controls['email'].errors.email\\\">{{ 'LANDING.EMAIL_VALID'| translate }}\\n                    </div>\\n                  </div>\\n                  <a href=\\\"javascript:void(0)\\\" class=\\\"pull-right\\\" (click)=\\\"setRegisterBy('phone')\\\">{{ 'COMMON.USE_PHONE_NO' | translate }}</a>\\n                </div>\\n                <div class=\\\"formWrap\\\" *ngIf=\\\"registerBy=='phone'\\\">\\n                    <label for=\\\"\\\">{{ 'LANDING.MOBILE' | translate }}<small><i class=\\\"fa fa-asterisk landing-req-sign\\\"\\n                          aria-hidden=\\\"true\\\"></i></small> :</label>\\n                    <div class=\\\"txtField landing-mobile-content\\\">\\n                        <ng-select  [items]=\\\"countryCodes\\\" bindLabel=\\\"code\\\"\\n                        bindValue=\\\"code\\\" [clearable]=\\\"false\\\" [searchable]=\\\"false\\\" formControlName=\\\"mobile_code\\\"\\n                         >\\n                         <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                          <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.flag | picturepath:'flag'\\\"/>&nbsp;\\n                          <b>{{item.code}}</b>\\n                          </ng-template>\\n                          <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                              <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.flag | picturepath:'flag'\\\"/>&nbsp;\\n                              <b>{{item.code}}</b>\\n                          </ng-template>\\n                        </ng-select>\\n                      <input appOnlynumaricinput pattern=\\\"\\\\d*\\\"  name=\\\"mobile_no\\\" formControlName=\\\"mobile_no\\\"\\n                        placeholder=\\\"e.g. 104545454\\\" minlength=10 maxlength=10 required>\\n                    </div>\\n  \\n                    <div\\n                      *ngIf=\\\"registerFormSubmitStatus &&  registerForm.controls['mobile_no'].errors\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"registerForm.controls['mobile_no'].errors.required\\\">\\n                        {{ 'LANDING.MOBILE_REQUIRED'| translate }}</div>\\n                      <div *ngIf=\\\"registerForm.controls['mobile_no'].errors.minlength\\\">\\n                        {{ 'LANDING.MOBILE_MIN_LENGTH'| translate }}</div>\\n                      <div *ngIf=\\\"registerForm.controls['mobile_no'].errors.maxlength\\\">\\n                        {{ 'LANDING.MOBILE_MAX_LENGTH'| translate }}</div>\\n                      <div *ngIf=\\\"registerForm.controls['mobile_no'].errors.pattern\\\">\\n                        {{ 'LANDING.MOBILE_PATTERN'| translate }}</div>\\n                    </div>\\n                    <!--<a href=\\\"javascript:void(0)\\\" class=\\\"pull-right\\\" (click)=\\\"setRegisterBy('email')\\\">{{ 'COMMON.USE_EMAIL' | translate }}</a>-->\\n                  </div>\\n                <div class=\\\"formWrap\\\">\\n                  <label for=\\\"\\\">{{ 'LANDING.PASSWORD' | translate }}<small><i class=\\\"fa fa-asterisk landing-req-sign\\\"\\n                        aria-hidden=\\\"true\\\"></i></small> :</label> \\n                  <input class=\\\"txtField\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"\\\" value=\\\"\\\"\\n                    placeholder=\\\"{{ 'LANDING.PASSWORD' | translate }}\\\" required>\\n\\n                  <!-- <input class=\\\"txtField\\\" type=\\\"password\\\" [(ngModel)]=\\\"userdata.confirmpassword\\\" name=\\\"confirmpassword\\\" placeholder=\\\"Confirm Password\\\" class=\\\"form-control\\\" required #confirmpassword=\\\"ngModel\\\" pattern=\\\"{{ password.value }}\\\" />\\n                     <div *ngIf=\\\" confirmpassword.invalid && (myform.submitted || confirmpassword.touched)\\\" class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"confirmpassword.errors.required\\\"> Confirm password is required. </div>\\n                      <div *ngIf=\\\"confirmpassword.errors.pattern\\\"> Password & Confirm Password does not match.</div>\\n                    </div>-->\\n                    \\n\\n                  <div\\n                    *ngIf=\\\"registerFormSubmitStatus &&  registerForm.controls['password'].errors\\\"\\n                    class=\\\"alert alert-danger\\\">\\n                   \\n                    <div *ngIf=\\\"registerForm.controls['password'].errors.required\\\">\\n                      {{ 'LANDING.PASSWORD_REQUIRED'| translate }}</div>\\n                      <div *ngIf=\\\"registerForm.controls['password'].errors.pattern\\\">\\n                        {{ 'LANDING.PASSWORD_PATTERN'| translate }}</div>\\n                    <div *ngIf=\\\"registerForm.controls['password'].hasError('whitespace')\\\">\\n                      {{ 'LANDING.INVALID'| translate }}</div>\\n\\n\\n                      \\n                      \\n                  </div>\\n\\n                </div>\\n\\n                \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"formWrap\\\">\\n                      <label for=\\\"\\\">{{ 'LANDING.DATE_OF_BIRTH' | translate }}<small><i\\n                            class=\\\"fa fa-asterisk landing-req-sign\\\" aria-hidden=\\\"true\\\"></i></small> :</label>\\n                      <input class=\\\"txtField\\\" type=\\\"text\\\" name=\\\"dob\\\" id=\\\"dob\\\"\\n                        placeholder=\\\"{{ 'LANDING.DATE_OF_BIRTH' | translate }}\\\" #dp=\\\"bsDatepicker\\\" bsDatepicker\\n                        [bsValue]=\\\"bsValue\\\" [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD' }\\\" formControlName=\\\"dob\\\"\\n                        required [maxDate]=\\\"previousDay\\\" autocomplete=\\\"off\\\" readonly>\\n\\n                      <div\\n                        *ngIf=\\\"registerFormSubmitStatus &&  registerForm.controls['dob'].errors\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"registerForm.controls['dob'].errors.required\\\">\\n                          {{ 'LANDING.DOB_REQUIRED'| translate }}</div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"formWrap\\\">\\n                      <label for=\\\"gender\\\">{{ 'LANDING.GENDER' | translate }}<small><i\\n                            class=\\\"fa fa-asterisk landing-req-sign\\\" aria-hidden=\\\"true\\\"></i></small> :</label>\\n                      <select class=\\\"txtField\\\" name=\\\"gender\\\" id=\\\"gender\\\" formControlName=\\\"gender\\\" required>\\n                        <option value=\\\"\\\">{{ 'LANDING.GENDER' | translate }}</option>\\n                        <option value=\\\"M\\\">{{ 'LANDING.GENDER_MALE' | translate }}</option>\\n                        <option value=\\\"F\\\">{{ 'LANDING.GENDER_FEMALE' | translate }}</option>\\n                      </select>\\n\\n                      <div\\n                        *ngIf=\\\"registerFormSubmitStatus &&  registerForm.controls['gender'].errors\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"registerForm.controls['gender'].errors.required\\\">\\n                          {{ 'LANDING.GENDER_REQUIRED'| translate }}</div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"formWrap\\\">\\n                  <label class=\\\"customCheck nobG\\\"> {{ 'LANDING.I_AGREE' | translate }}\\n                    <input type=\\\"checkbox\\\" name=\\\"terms\\\" value=\\\"terms\\\" formControlName=\\\"terms\\\">\\n                    <span class=\\\"checkmark\\\"></span>\\n                    \\n                  </label>\\n                  \\n                  <a [routerLink]=\\\"['/page/terms-and-agreements']\\\">{{ 'LANDING.TERMS_AND_CONDITIONS' | translate }}</a>\\n                </div>\\n                <div class=\\\"formWrap\\\">\\n                  <!--  <input type=\\\"submit\\\" name=\\\"\\\" [disabled]=\\\"registerForm.pristine || registerForm.invalid\\\" value=\\\"{{ 'LANDING.JOIN_NOW' | translate }}\\\"> -->\\n                  <button type=\\\"submit\\\" (click)=\\\"registerAction()\\\">\\n                    <i class=\\\"fa fa-cog fa-spin\\\" *ngIf=\\\"loader.signup\\\"></i>\\n                    {{ 'LANDING.JOIN_NOW' | translate }}</button>\\n                </div>\\n                {{ registerForm.error }}\\n              </form>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab (click)=\\\"forgetpasswordWrap=false\\\">\\n            <ng-template ngbTabTitle>{{ 'LANDING.SIGNIN' | translate }}</ng-template>\\n            <ng-template ngbTabContent>\\n              <div class=\\\"login-wrap\\\" *ngIf=\\\"!forgetpasswordWrap\\\">\\n                <form [formGroup]=\\\"loginForm\\\" novalidate >\\n                  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessageLogin\\\">\\n                    {{errorMessageLogin}}\\n                    <span *ngIf=\\\"resendStatus\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"resendVerification()\\\">{{ 'SIGNUP_THANKYOU.RESEND' | translate }}</a> {{ 'SIGNUP_THANKYOU.IF_WANT' | translate }}</span>\\n                  </div>\\n\\n                  <div class=\\\"formWrap\\\" >\\n                    <label for=\\\"\\\">{{ 'LANDING.EMAIL' | translate }} / {{ 'LANDING.MOBILE' | translate }} :</label>\\n                    <input class=\\\"txtField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"\\\"\\n                      placeholder=\\\"{{ 'LANDING.EMAIL' | translate }} / {{ 'LANDING.MOBILE' | translate }}\\\" formControlName=\\\"credential\\\" autocomplete=\\\"off\\\"\\n                      required>\\n                    <div\\n                      *ngIf=\\\"loginFormSubmitStatus && loginForm.controls['credential'].errors\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"loginForm.controls['credential'].errors.required\\\">\\n                        {{ 'LANDING.CREDENTIAL_REQUIRED' | translate }}</div>\\n                    </div>\\n                    \\n                  </div>\\n                  <!-- <div class=\\\"formWrap\\\" *ngIf=\\\"loginBy=='mobile'\\\">\\n                    <label for=\\\"\\\">{{ 'LANDING.MOBILE' | translate }} :</label>\\n                    <div class=\\\"txtField landing-mobile-content\\\">\\n\\n                        <ng-select  [items]=\\\"countryCodes\\\" bindLabel=\\\"code\\\"\\n                        bindValue=\\\"code\\\" [clearable]=\\\"false\\\" [searchable]=\\\"false\\\" formControlName=\\\"mobile_code\\\"\\n                         >\\n                         <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                          <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.flag | picturepath:'flag'\\\"/>&nbsp;\\n                          <b>{{item.code}}</b>\\n                          </ng-template>\\n                          <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                              <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.flag | picturepath:'flag'\\\"/>&nbsp;\\n                              <b>{{item.code}}</b>\\n                          </ng-template>\\n                        </ng-select>\\n                      <input appOnlynumaricinput  pattern=\\\"\\\\d*\\\" maxlength=\\\"10\\\" name=\\\"\\\" value=\\\"\\\"\\n                        placeholder=\\\"{{ 'LANDING.MOBILE' | translate }}\\\" formControlName=\\\"credential\\\" autocomplete=\\\"off\\\"\\n                        required>\\n                    </div>\\n                    <div\\n                      *ngIf=\\\"loginFormSubmitStatus && loginForm.controls['credential'].errors\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"loginForm.controls['credential'].errors.required\\\">\\n                        {{ 'LANDING.MOBILE_REQUIRED' | translate }}</div>\\n                        <div *ngIf=\\\"loginForm.controls['credential'].errors.minlength\\\">\\n                            {{ 'LANDING.MOBILE_MIN_LENGTH'| translate }}</div>\\n                          <div *ngIf=\\\"loginForm.controls['credential'].errors.maxlength\\\">\\n                            {{ 'LANDING.MOBILE_MAX_LENGTH'| translate }}</div>\\n                          <div *ngIf=\\\"loginForm.controls['credential'].errors.pattern\\\">\\n                            {{ 'LANDING.MOBILE_PATTERN'| translate }}</div>\\n                      \\n                    </div>\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"pull-right\\\" (click)=\\\"setLoginBy('email')\\\">{{ 'COMMON.USE_EMAIL' | translate }}</a>\\n                    <div class=\\\"clearfix\\\"></div>\\n                  </div> -->\\n\\n                  <div class=\\\"formWrap\\\">\\n                    <label for=\\\"\\\">{{ 'LANDING.PASSWORD' | translate }} :</label>\\n                    <input class=\\\"txtField\\\" type=\\\"password\\\" name=\\\"\\\" value=\\\"\\\"\\n                      placeholder=\\\"{{ 'LANDING.PASSWORD' | translate }}\\\" formControlName=\\\"password\\\" autocomplete=\\\"off\\\"\\n                      required>\\n                    <div\\n                      *ngIf=\\\"loginFormSubmitStatus && loginForm.controls['password'].errors\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"loginForm.controls['password'].errors.required\\\">\\n                        {{ 'LANDING.PASSWORD_REQUIRED' | translate }}\\n                      </div>\\n                      <div *ngIf=\\\"loginForm.controls['password'].hasError('whitespace')\\\">\\n                        {{ 'LANDING.INVALID'| translate }}</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"formWrap\\\">\\n                    <label class=\\\"customCheck nobG\\\">\\n                      {{ 'COMMON.REMEMBER_ME' | translate }}\\n                      <input type=\\\"checkbox\\\" name=\\\"remember\\\" id=\\\"remember\\\" formControlName=\\\"remember\\\"\\n                        [checked]=\\\"rememberMe\\\">\\n                      <span class=\\\"checkmark\\\"></span>\\n                    </label>\\n                  </div>\\n\\n                  <div class=\\\"formWrap\\\">\\n                    <button type=\\\"submit\\\" (click)=\\\"loginAction()\\\"  name=\\\"\\\">\\n                      <i class=\\\"fa fa-cog fa-spin\\\" *ngIf=\\\"loader.login\\\"></i>\\n                      {{ 'LANDING.LOGIN' | translate }}</button>\\n\\n                  </div>\\n                </form>\\n                <div class=\\\"formWrap\\\">\\n                  <a class=\\\"fgPass\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"forgetpasswordWrap=true\\\"><i\\n                      class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>\\n                    {{ 'LANDING.FORGOT_PASSWORD' | translate }} </a>\\n                </div>\\n              </div>\\n              <div class=\\\"forget-pass-wrap\\\" *ngIf=\\\"forgetpasswordWrap\\\">\\n                <div>\\n                  <div class=\\\"alert alert-success\\\" *ngIf=\\\"forgetpasswordWrap==true && successMessage\\\">\\n                    {{ successMessage }}</div>\\n                  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"forgetpasswordWrap==true && errorMessage\\\">{{ errorMessage }}\\n                  </div>\\n                </div>\\n                <form [formGroup]=\\\"forgotPasswordForm\\\" novalidate (submit)=\\\"forgotPasswordAction()\\\">\\n                  <div class=\\\"formWrap\\\">\\n                    <label for=\\\"\\\">{{ 'LANDING.EMAIL' | translate }} :</label>\\n                    <input class=\\\"txtField\\\" type=\\\"email\\\" name=\\\"forgotEmail\\\" value=\\\"\\\"\\n                      placeholder=\\\"{{ 'LANDING.EMAIL' | translate }}\\\" formControlName=\\\"forgotEmail\\\" autocomplete=\\\"off\\\"\\n                      required>\\n                    <div\\n                      *ngIf=\\\"forgotPasswordForm.controls['forgotEmail'].invalid && (forgotPasswordForm.controls['forgotEmail'].dirty || forgotPasswordForm.controls['forgotEmail'].touched)\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"forgotPasswordForm.controls['forgotEmail'].errors.required\\\">\\n                        {{ 'LANDING.EMAIL_REQUIRED' | translate }}</div>\\n                      <div *ngIf=\\\"forgotPasswordForm.controls['forgotEmail'].errors.email\\\">\\n                        {{ 'LANDING.EMAIL_VALID' | translate }}</div>\\n                    </div>\\n                  </div>\\n\\n\\n                  <div class=\\\"formWrap\\\">\\n                    <button class=\\\"btnGreen\\\" type=\\\"submit\\\"\\n                      [disabled]=\\\"loader.forgot || forgotPasswordForm.pristine || forgotPasswordForm.invalid\\\" name=\\\"\\\"><i\\n                        class=\\\"fa fa-cog fa-spin\\\"\\n                        *ngIf=\\\"loader.forgot\\\"></i>{{ 'LANDING.SEND_PASSWORD_RESET_LINK' | translate }}</button>\\n                  </div>\\n\\n                </form>\\n                <div class=\\\"formWrap\\\">\\n                  <a class=\\\"fgPass\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"forgetpasswordWrap=false\\\"><i\\n                      class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>\\n                    {{ 'LANDING.BACK_TO_LOGIN' | translate }} </a>\\n                </div>\\n              </div>\\n\\n            </ng-template>\\n          </ngb-tab>\\n        </ngb-tabset>\\n      </div>\\n      <!-- <div class=\\\"loginSearchRight col-lg-7\\\">\\n      <div class=\\\"searchBox align-self-center\\\">\\n         <input type=\\\"text\\\" name=\\\"searchkeyword\\\" value=\\\"\\\"  [(ngModel)]=\\\"keyword\\\" placeholder=\\\"{{ 'LANDING.SEARCH_PLACEHOLDER' | translate }}\\\" autocomplete=\\\"off\\\">\\n         <span class=\\\"faIcon\\\"><i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i></span>\\n         <input type=\\\"submit\\\" name=\\\"\\\" value=\\\"{{ 'LANDING.SEARCH' | translate }}\\\">\\n      </div>\\n    </div> -->\\n      <div class=\\\"loginSearchRight col-lg-7\\\">\\n        <div class=\\\"searchBox align-self-center\\\">\\n          <input type=\\\"text\\\" name=\\\"searchkeyword\\\" value=\\\"\\\" (keyup)=\\\"searchUser($event)\\\" [(ngModel)]=\\\"keyword\\\"\\n            placeholder=\\\"{{ 'LANDING.SEARCH_PLACEHOLDER' | translate }}\\\" autocomplete=\\\"off\\\">\\n          <span class=\\\"faIcon\\\"><i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i></span>\\n          <input type=\\\"submit\\\" name=\\\"\\\" value=\\\"{{ 'LANDING.SEARCH' | translate }}\\\">\\n          <div class=\\\"searchResultContainer\\\" *ngIf=\\\"keyword\\\">\\n            <span class=\\\"loader\\\" *ngIf=\\\"loader.search\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n            <ul *ngIf=\\\"searchUserList\\\">\\n              <div *ngIf=\\\"searchUserList.length > 0\\\" class=\\\"defaultScroll\\\" malihu-scrollbar\\n                [scrollbarOptions]=\\\"scrollbarOptions\\\">\\n                <li *ngFor=\\\"let user of searchUserList; let i = index\\\" (click)=\\\"goToProfile(user)\\\"\\n                  [class.active]=\\\"i==activeSearchIndex\\\">\\n                  <span>\\n                    <img *ngIf=\\\"user && user.profile_pic\\\" alt=\\\"\\\" [src]=\\\"user.profile_pic| picturepath:'users'\\\">\\n                    \\n                    <img  *ngIf=\\\"user && !user.profile_pic && user.gender && user.experience_level\\\" src=\\\"assets/images/charachter/{{ user.gender+'_'+user.experience_level }}.png\\\" alt=\\\"\\\">\\n                  </span>\\n                  <span>{{ (user.first_name + \\\" \\\" + user.last_name) }}</span>\\n                  <span>{{ (user.cpp) }}</span>\\n                  <strong>{{ user.position_local_name }}</strong>\\n                </li>\\n              </div>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n\\n\\n\\n    <!-- open terms and condition model -->\\n\\n    <ng-template #termsconditionModal let-modal>\\n      <h2><span>{{page_name}}</span></h2>\\n      <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n      <div class=\\\"modal-body\\\">\\n        <div [innerHTML]=\\\"page_content | sanitizeHtml\\\"></div>\\n\\n        <form [formGroup]=\\\"termsForm\\\" novalidate (submit)=\\\"termsAction()\\\">\\n          <div class=\\\"proEdit\\\">\\n            <div class=\\\"formWrap mergTop\\\">\\n              <label class=\\\"customCheck nobG\\\"> {{ 'LANDING.TERMS_AND_CONDITIONS' | translate }}\\n                <input type=\\\"checkbox\\\" name=\\\"termsCondition\\\" value=\\\"termsCondition\\\" formControlName=\\\"termsCondition\\\">\\n                <span class=\\\"checkmark\\\"></span>\\n              </label>\\n            </div>\\n            <div class=\\\"buttonGr\\\">\\n              <button type=\\\"submit\\\" class=\\\"btnGreen\\\"\\n                [disabled]=\\\"termsForm.pristine || termsForm.invalid\\\">{{ 'LANDING.ACCEPT' | translate }}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </ng-template>\\n\\n    <!-- ASK FOR SIGN UP -->\\n    <ng-template #askForSignUpModal let-modal>\\n      <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n      <div class=\\\"modal-body\\\" style=\\\"text-align:center\\\">\\n        {{'LANDING.ASK_FOR_SIGNUP'|translate}}\\n      </div>\\n    </ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvbGFuZGluZy9sYW5kaW5nLmNvbXBvbmVudC5zY3NzIn0= */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 10-01-2019\n# Module                : LandingComponent                     \n# Object name           : LandingComponent    \n# Functionality         : All authentication work\n# Purpose               : constructor, ngOnInit, noWhitespaceValidator, openForgotPasswordModal, searchUser, goToProfile, createLoginForm, createSignUpForm, createForgotPasswordForm, loginAction, registerAction, forgotPasswordAction, createTermsForm, termsAction\n*******************************************************/\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport * as global from '../../globalConfig';\nimport { AuthService } from '../../services/auth.service';\nimport { RegisterService } from '../../services/register.service';\nimport { CommonService } from '../../services/common.service';\nimport { UsersService } from '../../services/users.service';\nimport { Router } from \"@angular/router\";\nimport * as CryptoJS from 'crypto-js';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n  @ViewChild('termsconditionModal') termsconditionModal; // for terms agree modal reference\n  @ViewChild('askForSignUpModal') askForSignUpModal;// for ask sign up  modal reference\n  loginForm: FormGroup; // for login form \n  loginFormSubmitStatus: boolean = false;\n  registerForm: FormGroup; // for  sign up form\n  registerFormSubmitStatus: boolean = false;\n  forgotPasswordForm: FormGroup; // for forget password form\n  errorMessage: string = \"\"; // for error message\n  errorMessageLogin: string = \"\"; // for login error message\n  successMessage: string; // for success message\n  modaldisplayFlag: boolean = true; // for displaing forget password form or success message in the modal\n  previousDay: any = new Date(2005,0,1); // get date\n  profile_image_path: string = global.s3URL + 'userspic/'; // for user profile image path\n  loader: any = { // for all loader of the page\n    'signup': false,\n    'login': false,\n    'search': false,\n    'forgot': false\n  };\n\n  terms_conditions_status: any = ''; // for terms condition status of a user\n  page_name: any = null; // for terms modal title\n  page_content: any = null; // for terms page content\n  termsForm: FormGroup; // for terms form \n  tempLoggdinUser: any = null; // to get temp loggedin user\n  rememberMe: any = null; // check remember me \n  searchUserList: Array<any> = []; // get search user list\n  activeSearchIndex: any = -1; // get the active serach index\n  keyword: string = \"\"; // for search text keyword\n  scrollbarOptions = { axis: 'y', theme: 'minimal-dark' }; // for  scrollbar config\n  forgetpasswordWrap: boolean = false;\n  countryCodes: Array<any> = [];\n  registerBy: any = 'phone';\n  loginBy: any = 'mobile';\n  resendStatus: boolean = false;\n  afterLoginNevigateUrl: any = null;\n  logedInActiveUser :any = null;\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 10-01-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and defin the languages data\n\t* PARAMS : route, fb, authService, translate, registerService, cService, uService, modalService, dateFormater\n\t*/\n  constructor(\n    private route: Router,\n    private fb: FormBuilder,\n    public authService: AuthService,\n    public translate: TranslateService,\n    public registerService: RegisterService,\n    private cService: CommonService,\n    private uService: UsersService,\n    private modalService: NgbModal,\n    private dateFormater: NgbDateParserFormatter\n  ) {\n   \n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n    });\n\n    this.createLoginForm();\n    this.createSignUpForm();\n    this.createForgotPasswordForm();\n    this.createTermsForm();\n    this.cService.countryPhoneCode.subscribe((countryCodeList:any)=>{\n      if (countryCodeList) {\n        this.countryCodes = countryCodeList;\n        let selectCode = this.countryCodes[0];\n        this.registerForm.controls['mobile_code'].setValue(selectCode.code);\n        this.loginForm.controls['mobile_code'].setValue(selectCode.code);\n      }\n    });\n  }\n  /* Function Name : ngOnInit\n\t* Author : \n\t* Created Date : 10-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS : \n\t*/\n  ngOnInit() {\n    localStorage.setItem('_sp', 'user');\n    let checkedRemeberMe = localStorage.getItem(\"_ru\");\n\n    if (checkedRemeberMe) {\n      this.rememberMe = true;\n      let rememberUser = localStorage.getItem(\"_ru\");\n      if (rememberUser) {\n        let user = CryptoJS.AES.decrypt(rememberUser, 'careery');\n        user = JSON.parse(user.toString(CryptoJS.enc.Utf8));\n        if (user[\"credential\"].indexOf(\"@\") > -1) {\n          this.loginBy = 'email';\n        } else {\n          this.loginBy = 'mobile';\n        }\n        this.loginForm.setValue({\n          \"mobile_code\": user[\"mobile_code\"],\n          \"credential\": user[\"credential\"],\n          \"password\": user[\"password\"],\n          \"remember\": true\n        });\n      }\n    }\n    \n  }\n\n\n  /* Function Name : noWhitespaceValidator\n\t* Author : \n\t* Created Date : 10-01-2019 \n\t* Modified Date : *\n\t* Purpose : to validate whitespace of  text field\n\t* PARAMS : control\n\t*/\n\n  public noWhitespaceValidator(control: FormControl) {\n    if (control.value) {\n\n      const isWhitespace = (control.value || '').trim().length === 0;\n      const isValid = !isWhitespace;\n      return isValid ? null : { 'whitespace': true };\n    }\n  }\n\n\n\n  /* Function Name : searchUser\n\t* Author : \n\t* Created Date : 12-02-2019 \n\t* Modified Date : *\n\t* Purpose : to search user\n\t* PARAMS : event\n\t*/\n  searchUser(event: any) {\n    if (event.which != 40 && event.which != 38 && event.which != 13) {\n      let pageName = localStorage.getItem('_sp');\n      this.loader.search = true;\n      if (this.keyword) {\n        let postData = {\n          \"page_name\": pageName,\n          \"keyword\": this.keyword\n        }\n        this.uService.searchUsers(postData)\n          .subscribe((responseData: any) => {\n            this.loader.search = false;\n            this.searchUserList = responseData.data.result.list;\n          });\n      } else {\n        this.loader.search = false;\n        this.searchUserList = [];\n      }\n    } else {\n      if (event.which === 40 && this.activeSearchIndex < (this.searchUserList.length - 1)) {\n        this.activeSearchIndex += 1;\n      } else if (event.which === 38 && this.activeSearchIndex > 0) {\n        this.activeSearchIndex -= 1;\n      } else if (event.which === 13) {\n\n        if (this.activeSearchIndex == -1) {\n          this.route.navigate(['/search'], { queryParams: { key: this.keyword } });\n        } else {\n          this.goToProfile(this.searchUserList[this.activeSearchIndex]);\n        }\n\n      }\n      if (this.searchUserList[this.activeSearchIndex]) {\n        this.keyword = this.searchUserList[this.activeSearchIndex].first_name + ' ' + this.searchUserList[this.activeSearchIndex].last_name;\n      }\n\n    }\n\n  }\n\n  /* Function Name : goToProfile\n\t* Author : \n\t* Created Date : 12-02-2019 \n\t* Modified Date : *\n\t* Purpose : to go to a user public profile\n\t* PARAMS : user\n\t*/\n  goToProfile(user: any) {\n\n    this.searchUserList = [];\n    if (localStorage.getItem(\"_user\")) {\n      this.route.navigate(['/', user.cpp]);\n    } else {\n      if (user.privacySettings) {\n        let guestViewProfile = user.privacySettings.find((item) => { // is guest view user profile\n          return item.options_id == 9;\n        });\n        if (guestViewProfile === undefined || guestViewProfile.show_status === 1) {\n          this.route.navigate(['/', user.cpp]);\n        } else {\n          this.keyword = '';\n          this.modalService.open(this.askForSignUpModal, { size: 'sm', centered: true, windowClass: 'DefaultModal' })\n        }\n      }\n    }\n  }\n\n  /* Function Name : createLoginForm\n\t* Author : \n\t* Created Date : 11-01-2019 \n\t* Modified Date : *\n\t* Purpose : to create login form\n\t* PARAMS : \n\t*/\n\n  createLoginForm() {\n    this.loginForm = this.fb.group({\n      mobile_code: [''],\n      credential: ['', [Validators.required]],\n      password: ['', [Validators.required, this.noWhitespaceValidator]],\n      remember: ['']\n    });\n  }\n\n  /* Function Name : createSignUpForm\n\t* Author : \n\t* Created Date : 11-01-2019 \n\t* Modified Date : *\n\t* Purpose : to create sign up form\n\t* PARAMS : \n\t*/\n\n  createSignUpForm() {\n    this.registerForm = this.fb.group({\n      first_name: ['', [Validators.required, this.noWhitespaceValidator]],\n      last_name: ['', [Validators.required, this.noWhitespaceValidator]],\n      email: [''],\n      mobile_code: [''],\n      mobile_no: [''],\n      password: ['', [Validators.required,  this.noWhitespaceValidator, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{5,}')]],\n      //confirmpassword: ['', [Validators.required,  this.noWhitespaceValidator, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{5,}')]],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      terms: ['']\n    });\n  }\n\n  /* Function Name : createForgotPasswordForm\n\t* Author : \n\t* Created Date : 11-01-2019 \n\t* Modified Date : *\n\t* Purpose : to create forget password form\n\t* PARAMS : \n\t*/\n\n  createForgotPasswordForm() {\n    this.forgotPasswordForm = this.fb.group({\n      forgotEmail: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n\n  /* Function Name : loginAction\n\t* Author : \n\t* Created Date : 11-01-2019 \n\t* Modified Date : *\n\t* Purpose : login form submit action\n\t* PARAMS : \n\t*/\n  loginAction() {\n    this.loginFormSubmitStatus = true;\n    this.resendStatus = false;\n    if( this.loginForm.valid) {\n\n      let formPostData = this.loginForm.value;\n      let terms_conditions_status = 0;\n      this.loader.login = true;\n      this.authService.login(formPostData).subscribe((data) => {\n        if ((data['statustext'] === 'success')) {\n          this.tempLoggdinUser = data['data'];\n\n          // localStorage.setItem(\"_u\", btoa(data['data'].id));\n          // localStorage.setItem(\"_un\", (data['data'].first_name + \" \" + data['data'].last_name));\n          localStorage.setItem(\"_token\", data[\"data\"].access_token);\n          let userData = data['data'];\n          if (userData.experience_level &&\n            userData.email &&\n            userData.mobile_no &&\n            userData.country_id &&\n            userData.city_id &&\n            userData.nationality_id &&\n            userData.dream_job_id &&\n            userData.dream_job_location_id &&\n            userData.dream_job_type ) {\n              this.afterLoginNevigateUrl = 'profile';\n          } else {\n            this.afterLoginNevigateUrl = 'setup-profile';\n            let status = '1';\n            if (userData.email) {\n              status ='2'; // mobile no is not available;\n            }\n            sessionStorage.setItem(\"_setup\", status);\n          }\n          if (data[\"data\"].profile_pic) {\n            let profilePic = global.s3URL + 'userspic/' + data[\"data\"].profile_pic;\n            localStorage.setItem(\"_propic\", profilePic);\n            this.cService.setProfilePic(profilePic);\n          }\n          // check user terms and condition status\n          terms_conditions_status = data['data'].terms_conditions_status;\n          if (terms_conditions_status === 0 && data['data'].terms_conditions_status === 0) {\n            let page = 'terms-and-agreements';\n            // get terms page content\n            this.cService.getPageContent(page).subscribe((reponseData: any) => {\n              if ((reponseData['statustext'] === 'success')) {\n                //console.log(reponseData);\n                this.page_name = reponseData['data'].page_name;\n                this.page_content = reponseData['data']['details'][0].page_content;\n              }\n            });\n            this.loader.login = false;\n            this.modalService.open(this.termsconditionModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n            \n            \n          } else {\n            // remember me\n            this.rememberMe = this.loginForm.value.remember;\n            if (this.rememberMe === true) {\n              let rememberUser = CryptoJS.AES.encrypt(JSON.stringify(this.loginForm.value), 'careery');\n              localStorage.setItem(\"_ru\", rememberUser);\n              // localStorage.setItem(\"remember\", 'true');\n            } else {\n              localStorage.removeItem(\"remember\");\n              localStorage.removeItem(\"_user\");\n            }\n  \n            if (data['data'].prefferedLang) {\n              localStorage.setItem(\"_lang\", data['data'].prefferedLang.lang_code);\n            }\n            \n            // localStorage.setItem(\"_u\", btoa(data['data'].id));\n            let loggedInUser = CryptoJS.AES.encrypt(JSON.stringify(\n              { \n                \"_i\": data['data'].id, \n                \"_n\": data['data'].first_name+' '+data['data'].last_name, \n                \"_p\": formPostData.password, \n                \"_e\": formPostData.email, \n                '_cpp': data['data'].cpp, \n                '_g': data['data'].gender,\n                '_ex_l': data['data'].experience_level\n              }\n            ), 'careery');\n            localStorage.setItem(\"_user\", loggedInUser);\n  \n  \n            localStorage.setItem(\"_token\", data[\"data\"].access_token);\n            // Navigate to the profile or dashboard\n            let userData = data['data'];\n            this.route.navigate([this.afterLoginNevigateUrl]);\n          }\n  \n        } else {\n          this.loader.login = false;\n          this.errorMessageLogin = data['message']['message'];\n          localStorage.setItem(\"_ti\", data['message']['u_id']);\n          if (data['code'] == 'AC-L-0004') {\n            this.resendStatus = true;\n          }\n        }\n  \n  \n      });\n    }\n  }\n\n  /* Function Name : registerAction\n\t* Author : \n\t* Created Date : 11-01-2019 \n\t* Modified Date : *\n\t* Purpose : sign up form submit action\n\t* PARAMS : \n\t*/\n  registerAction() {\n    console.log(this.registerForm.controls['password'].errors);\n    this.registerFormSubmitStatus = true;\n\n    if (this.registerForm.valid) {\n      if (!this.registerForm.value.terms) {\n        this.translate.get(['COMMON.ERROR', 'LANDING.TERMS_REQUIRED']).subscribe((tData)=>{\n  \n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['LANDING.TERMS_REQUIRED'],\n            icon: 'error'\n          })\n        });\n      } else {\n\n        let formPostData = this.registerForm.value;\n        this.loader.signup = true;\n        let date = formPostData.dob;\n        let month = date.getMonth();\n        month = month + 1;\n        month = (month < 10) ? '0' + month : month;\n        let day = (date.getDate() < 10) ? '0' + date.getDate() : date.getDate();\n        formPostData.dob = date.getFullYear() + '-' + month + '-' + day;\n        this.registerService.register(formPostData).subscribe((response: any) => {\n          if ((response['statustext'] === 'success') && (response['status'] == 200)) {\n            localStorage.setItem(\"_ti\", response['data']['user'].tempId);\n            this.route.navigate(['verification']);\n          } else {\n            this.loader.signup = false;\n            this.errorMessage = response['message'];\n          }\n    \n        });\n      }\n\n    }\n  }\n\n  /* Function Name : forgotPasswordAction\n\t* Author : \n\t* Created Date : 11-01-2019 \n\t* Modified Date : *\n\t* Purpose : forget password form submit action\n\t* PARAMS : \n\t*/\n  forgotPasswordAction() {\n    let formData = this.forgotPasswordForm.value;\n    this.loader.forgot = true;\n\n    this.authService.forgotPassword(formData).subscribe((response) => {\n      this.loader.forgot = false;\n      if ((response['statustext'] === 'success')) {\n        this.errorMessage = '';\n        this.successMessage = response['data']['message'];\n        this.forgotPasswordForm.reset();\n      } else {\n        this.successMessage = '';\n        this.errorMessage = response['message'];\n      }\n\n    });\n  }\n\n  /* Function Name : createTermsForm\n\t* Author : \n\t* Created Date : 13-02-2019 \n\t* Modified Date : *\n\t* Purpose : create terms agree form\n\t* PARAMS : \n\t*/\n  createTermsForm() {\n    this.termsForm = this.fb.group({\n      termsCondition: ['', Validators.requiredTrue]\n    });\n  }\n  /* Function Name : termsAction\n\t* Author : \n\t* Created Date : 13-02-2019 \n\t* Modified Date : *\n\t* Purpose : terms form submit action\n\t* PARAMS : \n\t*/\n  termsAction() {\n    let formPostData = this.termsForm.value;\n    let userId = btoa(this.tempLoggdinUser.id);\n    this.authService.termsUpdate(userId).subscribe((response) => {\n      if ((response['statustext'] === 'success')) {\n        let loggedInUser = CryptoJS.AES.encrypt(JSON.stringify(\n          { \n            \"_i\": this.tempLoggdinUser.id, \n            \"_n\": this.tempLoggdinUser.first_name+' '+this.tempLoggdinUser.last_name, \n            \"_p\": this.tempLoggdinUser.password, \n            \"_e\": this.tempLoggdinUser.email, \n            '_cpp': this.tempLoggdinUser.cpp, \n            '_g': this.tempLoggdinUser.gender,\n            '_ex_l': this.tempLoggdinUser.experience_level\n          }\n        ), 'careery');\n        localStorage.setItem(\"_user\", loggedInUser);\n\n        this.route.navigate([this.afterLoginNevigateUrl]);\n        this.modalService.dismissAll();\n      }\n    });\n  }\n\n  /* Function Name : changeTabEvent\n\t* Author : \n\t* Created Date : 13-02-2019 \n\t* Modified Date : *\n\t* Purpose : to change tab of signup/login tab\n\t* PARAMS : \n\t*/\n  changeTabEvent(e) {\n    if (e.nextId === 'ngb-tab-1') {\n      this.forgetpasswordWrap = false;\n    }\n  }\n  /* Function Name : setRegisterBy\n\t* Author : \n\t* Created Date : 15-07-2019 \n\t* Modified Date : *\n\t* Purpose : to set register by type(mobile/email)\n\t* PARAMS : type\n\t*/\n  setRegisterBy(type) {\n    this.registerBy = type;\n    if (type == 'email') {\n      this.registerForm.controls['email'].setValidators([Validators.required, Validators.email]);\n      this.registerForm.controls['mobile_no'].setValue('');\n      this.registerForm.controls['mobile_code'].setValidators(null);\n      this.registerForm.controls['mobile_no'].setValidators(null);\n    } else if (type == 'phone') {\n      this.registerForm.controls['mobile_code'].setValidators([Validators.required]);\n      this.registerForm.controls['mobile_no'].setValidators([Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('^[0-9]+$')]);\n      this.registerForm.controls['email'].setValue('');\n      this.registerForm.controls['email'].setValidators(null);\n    }\n    this.registerForm.controls['email'].updateValueAndValidity();\n    this.registerForm.controls['mobile_code'].updateValueAndValidity();\n    this.registerForm.controls['mobile_no'].updateValueAndValidity();\n\n  }\n  /* Function Name : setLoginBy\n\t* Author : \n\t* Created Date : 15-07-2019 \n\t* Modified Date : *\n\t* Purpose : to set login by type(mobile/email)\n\t* PARAMS : type\n\t*/\n  setLoginBy(type) {\n    this.loginBy = type;\n    this.loginForm.controls['credential'].setValue('');\n    let rememberUser = localStorage.getItem(\"_ru\");\n    let user = null;\n    if (rememberUser) {\n      user = CryptoJS.AES.decrypt(rememberUser, 'careery');\n      user = JSON.parse(user.toString(CryptoJS.enc.Utf8));\n    }\n    if (type == 'email') {\n      if (user && user.credential && user.credential.indexOf('@')>-1) {\n        this.loginForm.controls['credential'].setValue(user.credential);\n      } else {\n        this.loginForm.controls['credential'].setValue('');\n      }\n      //this.loginForm.controls['credential'].setValidators([Validators.required, Validators.email]);\n    } else if (type == 'mobile') {\n      if (user && user.credential && user.credential.indexOf('@') == -1) {\n        this.loginForm.controls['credential'].setValue(user.credential);\n      } else {\n        this.loginForm.controls['credential'].setValue('');\n      }\n      //this.loginForm.controls['mobile_code'].setValidators([Validators.required]);\n      //this.loginForm.controls['credential'].setValidators([Validators.required, Validators.minLength(10), Validators.maxLength(10)]);\n    }\n    // this.loginForm.controls['credential'].updateValueAndValidity();\n  }\n  /* Function Name : resendVerification\n\t* Author : \n\t* Created Date : 16-07-2019 \n\t* Modified Date : *\n\t* Purpose : to resend verification code\n\t* PARAMS : \n\t*/\n  resendVerification() {\n    let userId = localStorage.getItem(\"_ti\");\n    this.registerService.resend(userId).subscribe((data:any) => {\n      if (data['statustext'] === 'success') {\n        this.translate.get('COMMON.SUCCESS').subscribe((tData)=>{\n\n          swal({\n            title: tData,\n            text: data.message,\n            icon: 'success'\n            \n          }).then(()=>{\n            this.route.navigate(['/verification']);\n          })\n        });\n      } else {\n        this.translate.get('COMMON.ERROR').subscribe((tData)=>{\n\n          swal({\n            title: tData,\n            text: data.message,\n            icon: 'error'\n            \n          })\n        });\n      }\n    });\n  }  \n\n}\n","module.exports = \"<div id=\\\"pointContents\\\" class=\\\"graphModal\\\">\\n    <div class=\\\"user-details\\\">\\n      <ul>\\n        <li><small>{{ 'PROFILE.NAME' |translate }}</small> <span>{{ (userDetails.first_name+' '+userDetails.last_name) }}</span></li>\\n        <li><small>{{ 'PROFILE.CPP' |translate }}</small> <span>{{ (userDetails.cpp) }}</span></li>\\n      </ul>\\n    </div>\\n    <canvas baseChart id=\\\"pointCanvas\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [colors]=\\\"pieChartColors\\\"\\n      [chartType]=\\\"pieChartType\\\" [options]=\\\"pieOptions\\\"></canvas>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvcHJvZmlsZS1jaGFydC9wcm9maWxlLWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UsersService } from '../../services/users.service';\nimport { CommonService } from '../../services/common.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { TranslateService } from '@ngx-translate/core';\nimport 'chart.piecelabel.js';\n@Component({\n  selector: 'app-profile-chart',\n  templateUrl: './profile-chart.component.html',\n  styleUrls: ['./profile-chart.component.scss']\n})\nexport class ProfileChartComponent implements OnInit {\n  pieChartLabels: any = [];\n  pieChartData: any = [];\n  pieChartColors: any = [];\n  pieOptions: any = {};\n  userDetails:any = {};\n  public pieChartType:string = 'pie'; // points chart type\n  @ViewChild('pointsModal') pointsModal; // point modal reference\n  constructor(\n    public cService: CommonService,\n    public usersService: UsersService, \n    private modalService: NgbModal, \n    private activeRoute: ActivatedRoute,\n    translate: TranslateService) {\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n    });\n  }\n\n  ngOnInit() {\n    this.pieChartLabels = [];\n    this.pieChartData = [];\n    this.pieChartColors = [\n      {\n        backgroundColor: ['#26bfb5', '#5bc78c', '#fc9772', '#ff4a5f', '#adc72a'],\n      }\n    ];\n    this.activeRoute.params.subscribe((params) => {\n      this.usersService.userDetailsByCPP(params.userCPP).subscribe((response: any) => {\n        this.userDetails  = response.data;\n        this.usersService.getUserPoints(btoa(response.data.id))\n          .subscribe((responseData: any) => {\n            if (responseData.data) {\n              this.pieOptions = {\n                pieceLabel: {\n                  render: function (args) {\n                    const label = args.label,\n                      value = args.value;\n                    return value+' points';\n                  },\n                  fontColor: '#FFFFFF',\n                  fontSize: 13,\n                  fontStyle: 'bold'\n                },\n                legend: { position: 'right' },\n                elements: {\n                  arc: {\n                    borderWidth: 0,\n                    weight: 0.5\n                  }\n                }\n              };\n              responseData.data.forEach(element => {\n                this.pieChartLabels.push(element.point_name);\n                this.pieChartData.push(element.total_point);\n\n              });\n              // this.modalService.open(pointModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n            }\n          });\n      })\n\n    });\n  }\n\n}\n"],"sourceRoot":""}