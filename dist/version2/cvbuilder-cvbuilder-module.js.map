{"version":3,"sources":["webpack:///./src/app/cvbuilder/cvbuilder-routing.module.ts","webpack:///./src/app/cvbuilder/cvbuilder.module.ts","webpack:///./src/app/cvbuilder/cvbuildsuccess/cvbuildsuccess.component.html","webpack:///./src/app/cvbuilder/cvbuildsuccess/cvbuildsuccess.component.scss","webpack:///./src/app/cvbuilder/cvbuildsuccess/cvbuildsuccess.component.ts","webpack:///./src/app/cvbuilder/cvinfo/cvinfo.component.html","webpack:///./src/app/cvbuilder/cvinfo/cvinfo.component.scss","webpack:///./src/app/cvbuilder/cvinfo/cvinfo.component.ts","webpack:///./src/app/cvbuilder/cvmessages/cvmessages.component.html","webpack:///./src/app/cvbuilder/cvmessages/cvmessages.component.scss","webpack:///./src/app/cvbuilder/cvmessages/cvmessages.component.ts","webpack:///./src/app/cvbuilder/payment/payment.component.html","webpack:///./src/app/cvbuilder/payment/payment.component.scss","webpack:///./src/app/cvbuilder/payment/payment.component.ts"],"names":[],"mappings":"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","file":"cvbuilder-cvbuilder-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { CvinfoComponent } from './cvinfo/cvinfo.component';\nimport { PaymentComponent } from './payment/payment.component';\nimport { CvbuildsuccessComponent } from './cvbuildsuccess/cvbuildsuccess.component';\nimport { CvmessagesComponent } from './cvmessages/cvmessages.component';\nconst routes: Routes = [\n  {\n    path:'cv',\n    children : [\n      { path : \"build\",  canActivate: [AuthGuard], component : CvinfoComponent },\n      { path : \"pay\", canActivate: [AuthGuard], component : PaymentComponent },\n      { path : \"success/:token\", canActivate: [AuthGuard], component : CvbuildsuccessComponent },\n      { path : \"consulting/:id\", canActivate: [AuthGuard], component : CvmessagesComponent },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CvbuilderRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule } from 'ng2-charts';\nimport {GlobalModule} from \"../global/global.module\";\nimport { CvbuilderRoutingModule } from './cvbuilder-routing.module';\nimport { CvinfoComponent } from './cvinfo/cvinfo.component';\nimport { PaymentComponent } from './payment/payment.component';\nimport { OwlModule } from 'ngx-owl-carousel';\n\nimport { ImageCropperModule } from \"ngx-img-cropper\";\nimport { CvbuildsuccessComponent } from './cvbuildsuccess/cvbuildsuccess.component';\nimport { CvmessagesComponent } from './cvmessages/cvmessages.component';\n@NgModule({\n  declarations: [CvinfoComponent, PaymentComponent, CvbuildsuccessComponent, CvmessagesComponent],\n  imports: [\n    CommonModule,\n    CvbuilderRoutingModule,\n    GlobalModule,\n    ImageCropperModule,\n    ChartsModule,\n    OwlModule\n  ]\n})\nexport class CvbuilderModule { }\n","module.exports = \"<div class=\\\"commonWrap\\\">\\n    <h2 class=\\\"withLine\\\"><span>{{ 'CV.CV_BUILD'| translate }}</span></h2>\\n    <div class=\\\"wrapPagenotFound\\\">\\n      <h3>{{ 'COMMON.SUCCESS'| translate }}!</h3>\\n      <div>\\n        <p *ngFor=\\\"let msg of cvMessage\\\" [innerHTML]=\\\"msg\\\"></p>&nbsp;\\n      </div>\\n      <div *ngIf=\\\"cvResponseData.type==0\\\">\\n        <a [routerLink]=\\\"['/cv/build']\\\" class=\\\"cv-action-btn\\\">{{ 'CV.MY_CV_LIST'| translate }}</a>\\n        <a download=\\\"mycv.pdf\\\" [href]=\\\"cvResponseData.fileName| picturepath:'cv'\\\" target=\\\"_blank\\\" class=\\\"cv-action-btn\\\">{{ 'CV.DOWNLOAD'| translate }}</a>\\n      </div>\\n      <div *ngIf=\\\"cvResponseData.type==1\\\">\\n        <a [routerLink]=\\\"['/cv/build']\\\" class=\\\"cv-action-btn\\\">{{ 'CV.MY_CV_LIST'| translate }}</a>\\n      </div>\\n    </div>\\n  </div>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N2YnVpbGRlci9jdmJ1aWxkc3VjY2Vzcy9jdmJ1aWxkc3VjY2Vzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CvcardService} from \"../../services/cvcard.service\";\nimport {CommonService} from '../../services/common.service';\nimport { TranslateService } from '@ngx-translate/core';\n@Component({\n  selector: 'app-cvbuildsuccess',\n  templateUrl: './cvbuildsuccess.component.html',\n  styleUrls: ['./cvbuildsuccess.component.scss']\n})\nexport class CvbuildsuccessComponent implements OnInit {\n  cvToken : any = null;\n  cvMessage : Array<any> = [];\n  cvResponseData:any ={};\n  constructor(\n    private cvService: CvcardService,\n    private activeRoute : ActivatedRoute,\n    private translate: TranslateService,\n    private cService:CommonService\n  ) {\n    this.cService.activelang.subscribe((lang)=>{\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n    this.activeRoute.params.subscribe((params)=>{\n      this.cvToken = params.token;\n    })\n  }\n\n  ngOnInit() {\n    this.cvService.getCVSuccessContent({\n      c_token : this.cvToken\n    })\n    .subscribe((responseData:any)=>{\n      if (responseData.statustext ==  \"success\") {\n        this.cvResponseData  = responseData.data;\n        if (responseData.data.type == 0) {\n          let msgIndex = ['CV.CV_BUILD_MSG'];\n          \n          if (responseData.data.price != 0 && responseData.data.status == 3) { // only not paid and price > 0\n            msgIndex.push('CV.CV_BUILD_WATERMARK_MSG');\n          }\n          this.translate.get(msgIndex)\n          .subscribe((tData)=>{\n            this.cvMessage.push(tData['CV.CV_BUILD_MSG']);\n            if (tData['CV.CV_BUILD_WATERMARK_MSG']) {\n              this.cvMessage.push(tData['CV.CV_BUILD_WATERMARK_MSG']);\n            }\n          })\n        } else {\n          this.translate.get('CV.CV_CONSULT_MSG', {day:responseData.data.consultDay})\n          .subscribe((tData)=>{\n            this.cvMessage.push(tData);\n          })\n        }\n      }\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"proEdit\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n    \\n          <div class=\\\"doughnut-chart-content\\\">\\n              <div class=\\\"c100  p{{ completePecent }} big green\\\">\\n                  <span>\\n                  <small>{{ completePecent }}%</small>\\n                  <br/> {{ 'CV.COMPLETED'| translate }}\\n                  </span>\\n                  <div class=\\\"slice\\\">\\n                      <div class=\\\"bar\\\"></div>\\n                      <div class=\\\"fill\\\"></div>\\n                  </div>\\n              </div>\\n\\n          </div>\\n\\n          <div class=\\\"editImage\\\">\\n            <div class=\\\"editImageMain\\\">\\n              <div class=\\\"editImagePop\\\" (click)=\\\"openEditPicModal(content)\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                  aria-hidden=\\\"true\\\"></i></div>\\n              <img *ngIf=\\\"saveCvInfoData.profilePic\\\" [src]=\\\"saveCvInfoData.profilePic\\\" />\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <button type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"openEditPicModal(content)\\\">{{\\n                'PROFILEEDIT.EDIT'|translate }}</button>\\n              <button *ngIf=\\\"saveCvInfoData.profilePic\\\" class=\\\"remove\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"removeProfilePic()\\\">{{\\n                'PROFILEEDIT.REMOVE'|translate }}</button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-9 col-xs-12 profile-edit-form-main-content\\\">\\n              <ngb-tabset #tab=\\\"ngbTabset\\\" (tabChange)=\\\"changeTabEvent($event)\\\">\\n                <!-- Personal Info -->\\n                <ngb-tab id=\\\"personal\\\" (load)=\\\"personalDetails()\\\">\\n                  <ng-template ngbTabTitle><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.PERSONAL_INFO' | translate }}</ng-template>\\n                  <ng-template ngbTabContent>\\n                    <div *ngIf=\\\"loader.personal.list\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></div>\\n                    <div class=\\\"proEditForm\\\">\\n                     \\n                        <div class=\\\"row\\\">\\n\\n              \\n                          <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"profile-edit-form-container\\\">\\n                            <div class=\\\"alert alert-success\\\" *ngIf=\\\"personalSuccessMsg\\\">{{ personalSuccessMsg }}</div>\\n                            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"personalErrorMsg\\\">{{ personalErrorMsg }}</div>\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-lg-4\\\">\\n                                <div class=\\\"formWrap\\\">\\n                                  <label for=\\\"\\\">{{ 'PROFILEEDIT.FIRST_NAME'|translate }} :</label>\\n                                  <input class=\\\"inpField\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.first_name\\\" value=\\\"\\\" placeholder=\\\"\\\">\\n                                  <div *ngIf=\\\"personalForm.submit && (personalForm.first_name==null || personalForm.first_name =='')\\\"\\n                                    class=\\\"alert alert-danger\\\">\\n                                    {{ 'PROFILEEDIT.FIRST_NAME_REQUIRED'|translate }}\\n                                  </div>\\n              \\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-lg-4\\\">\\n                                <div class=\\\"formWrap\\\">\\n                                  <label for=\\\"\\\">{{ 'PROFILEEDIT.LAST_NAME'|translate }} :</label>\\n                                  <input class=\\\"inpField\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.last_name\\\" value=\\\"\\\" placeholder=\\\"\\\">\\n                                  <div *ngIf=\\\"personalForm.submit && (personalForm.last_name==null || personalForm.last_name =='')\\\"\\n                                    class=\\\"alert alert-danger\\\">\\n                                    {{ 'PROFILEEDIT.LAST_NAME_REQUIRED'|translate }}\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-lg-4\\\">\\n                                <div class=\\\"formWrap\\\">\\n                                  <label for=\\\"\\\">{{ 'PROFILEEDIT.FAMILY_NAME'|translate }} :</label>\\n                                  <input class=\\\"inpField\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.family_name\\\" value=\\\"\\\" placeholder=\\\"\\\">\\n              \\n              \\n                                </div>\\n                              </div>\\n                            </div>\\n              \\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-lg-6\\\">\\n                                <div class=\\\"formWrap\\\">\\n                                  <label for=\\\"\\\">{{ 'PROFILEEDIT.DOB'|translate }} : <small><i class=\\\"fa fa-asterisk\\\" aria-hidden=\\\"true\\\"></i></small></label>\\n                                  <select [(ngModel)]=\\\"personalForm.dob_date\\\" class=\\\"inpField autoWidth withSpace\\\">\\n                                    <option *ngFor=\\\"let d of dayList\\\" [value]=\\\"d.id\\\">{{d.name}}</option>\\n                                  </select>\\n                                  <select [(ngModel)]=\\\"personalForm.dob_month\\\" class=\\\"inpField autoWidth withSpace\\\">\\n                                    <option *ngFor=\\\"let d of monthList\\\" [value]=\\\"d.id\\\">{{d.name}}</option>\\n                                  </select>\\n                                  <select [(ngModel)]=\\\"personalForm.dob_year\\\" class=\\\"inpField autoWidth withSpace\\\">\\n                                    <option *ngFor=\\\"let d of years\\\" [value]=\\\"d\\\">{{d}}</option>\\n                                  </select>\\n                                  <div *ngIf=\\\"personalForm.submit && (!personalForm.dob_date || !personalForm.dob_month || !personalForm.dob_year)\\\"\\n                                    class=\\\"alert alert-danger\\\">\\n                                    {{ 'PROFILEEDIT.DOB_REQUIRED'|translate }}\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-lg-6\\\">\\n                                <div class=\\\"formWrap\\\">\\n                                  <label for=\\\"\\\">{{ 'PROFILEEDIT.LOCATION'|translate }} : <small><i class=\\\"fa fa-asterisk\\\" aria-hidden=\\\"true\\\"></i></small></label>\\n                                  <span class=\\\"formWrap withSpace\\\">\\n                                    <ng-select class=\\\"inpField width200\\\" [items]=\\\"countryList\\\" [(ngModel)]=\\\"personalForm.country_id\\\"\\n                                      bindLabel=\\\"name\\\" bindValue=\\\"id\\\" (change)=\\\"getCityList()\\\"></ng-select>\\n                                    <div *ngIf=\\\"personalForm.submit && (personalForm.country_id==null || personalForm.country_id =='')\\\"\\n                                      class=\\\"alert alert-danger\\\">\\n                                      {{ 'PROFILEEDIT.COUNTRY_REQUIRED'|translate }}\\n                                    </div>\\n                                  </span>\\n              \\n                                  <span class=\\\"formWrap withSpace\\\">\\n                                    <ng-select class=\\\"inpField width200\\\" [items]=\\\"cityList\\\" [(ngModel)]=\\\"personalForm.city_id\\\"\\n                                      bindLabel=\\\"name\\\" bindValue=\\\"id\\\"></ng-select>\\n                                    <div *ngIf=\\\"personalForm.submit && (personalForm.city_id==null || personalForm.city_id =='')\\\"\\n                                      class=\\\"alert alert-danger\\\">\\n                                      {{ 'PROFILEEDIT.CITY_REQUIRED'|translate }}\\n                                    </div>\\n                                  </span>\\n              \\n                                </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-12\\\">\\n                                  <div class=\\\"formWrap\\\">\\n                                    <label for=\\\"\\\">{{ 'PROFILEEDIT.ADDRESS'|translate }} : </label>\\n                                    <span class=\\\"formSpan\\\">\\n                                      <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.address\\\" value=\\\"\\\" placeholder=\\\"\\\">\\n                                      <div *ngIf=\\\"personalForm.submit && (!personalForm.address)\\\"\\n                                      class=\\\"alert alert-danger\\\">\\n                                      {{ 'PROFILEEDIT.ADDRESS_REQUIRED'|translate }}\\n                                    </div>\\n                                    </span>\\n                                    \\n                                  </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-lg-6\\\">\\n                                <div class=\\\"formWrap\\\">\\n                                  <label for=\\\"\\\">{{ 'PROFILEEDIT.EMAIL'|translate }} : <small><i class=\\\"fa fa-asterisk\\\" aria-hidden=\\\"true\\\"></i></small></label>\\n                                  <span class=\\\"formSpan\\\">\\n                                    <input class=\\\"inpField largeWidth\\\" type=\\\"email\\\" [(ngModel)]=\\\"personalForm.email\\\" value=\\\"\\\"\\n                                      placeholder=\\\"\\\">\\n                                    <div *ngIf=\\\"personalForm.submit && (personalForm.email==null || personalForm.email =='')\\\" class=\\\"alert alert-danger\\\">\\n                                      {{ 'PROFILEEDIT.EMAIL_REQUIRED'|translate }}\\n                                    </div>\\n                                  </span>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-lg-6\\\">\\n                                <div class=\\\"formWrap\\\">\\n                                  <label for=\\\"\\\">{{ 'PROFILEEDIT.WEBSITE'|translate }} :</label>\\n                                  <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.website\\\" value=\\\"\\\"\\n                                    placeholder=\\\"\\\">\\n              \\n                                </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n              \\n                              <div class=\\\"col-lg-12\\\">\\n                                  <div class=\\\"formWrap\\\">\\n                                    <label for=\\\"\\\">{{ 'PROFILEEDIT.MOBILE'|translate }} : <small><i class=\\\"fa fa-asterisk\\\" aria-hidden=\\\"true\\\"></i></small></label>\\n                                    <span class=\\\"inpField largeWidth profile-edit-mobile\\\">\\n                                        <ng-select class=\\\"inpField phCodeSelect\\\" [items]=\\\"countryCodes\\\" bindLabel=\\\"code\\\"\\n                                        bindValue=\\\"code\\\" [clearable]=\\\"false\\\" [searchable]=\\\"false\\\" [(ngModel)]=\\\"personalForm.mobile_code\\\"\\n                                        >\\n                                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                          <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.flag | picturepath:'flag'\\\"/>&nbsp;\\n                                          <b>{{item.code}}</b>\\n                                          </ng-template>\\n                                          <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                                              <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.flag | picturepath:'flag'\\\"/>&nbsp;\\n                                              <b>{{item.code}}</b>\\n                                          </ng-template>\\n                                        </ng-select>\\n                                      <input appOnlynumaricinput maxlength=\\\"10\\\" class=\\\"inpField\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.mobile_no\\\" value=\\\"\\\"\\n                                        placeholder=\\\"\\\">\\n                                      <div *ngIf=\\\"personalForm.submit && (personalForm.mobile_no==null || personalForm.mobile_no =='')\\\"\\n                                        class=\\\"alert alert-danger\\\">\\n                                        {{ 'PROFILEEDIT.MOBILE_REQUIRED'|translate }}\\n                                      </div>\\n                                      <div *ngIf=\\\"personalForm.submit && (personalForm.mobile_no.length != 10)\\\" class=\\\"alert alert-danger\\\">\\n                                        {{ 'PROFILEEDIT.MOBILE_LENGTH'|translate }}\\n                                      </div>\\n              \\n                                    </span>\\n                                  </div>\\n                              </div>\\n                            </div>\\n                            \\n                          </div>\\n              \\n              \\n                          </div>\\n                        </div>\\n                     \\n            \\n                      <div class=\\\"buttonGr\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-6\\\">\\n                            <a  href=\\\"javascript:void(0)\\\" class=\\\"btnWhite\\\" (click)=\\\"gotToPayment(true)\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                          </div>\\n                          <div class=\\\"col-6\\\">\\n                            <div class=\\\"text-right\\\">\\n            \\n                              <button  type=\\\"button\\\" class=\\\"btnGreen\\\" name=\\\"button\\\" (click)=updatePersonalFrom()>\\n                                <span *ngIf=\\\"loader.personal.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                                {{ 'PROFILEEDIT.SAVE' | translate}}\\n                              </button>&nbsp;&nbsp; \\n                              <button  class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'education')\\\">{{\\n                                'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n            \\n                    </div>\\n\\n                    <div class=\\\"formTable\\\">\\n                      <table class=\\\"table table-borderless\\\">\\n                        <thead>\\n                          <tr>\\n                            <th>{{ 'CV.NAME'|translate }}</th>\\n                            <th class=\\\"text-center\\\">{{ 'CV.STATUS'|translate }}</th>\\n                            <th class=\\\"text-center\\\">{{ 'CV.ACTION'|translate }}</th>\\n                            <th class=\\\"text-center\\\">{{ 'CV.CURRENT'|translate }}</th>\\n                          </tr>\\n                        </thead>\\n                        <tbody>\\n                          <tr *ngFor=\\\"let cv of userCvList\\\">\\n                            <td>{{ cv.cv_name }}</td>\\n                            <td class=\\\"text-center\\\">\\n                              <span *ngIf=\\\"cv.status == 1\\\">{{ 'CV.UNDER_PROCESS'|translate }}</span>\\n                              <span *ngIf=\\\"cv.status == 2 && cv.is_consult == 1\\\">{{ 'CV.COMPLETED'|translate }}</span>\\n                              <span *ngIf=\\\"cv.status == 2 && (cv.is_consult == null || cv.is_consult == 0)\\\">{{ 'CV.PAID'|translate }}</span>\\n                              <span *ngIf=\\\"cv.status == 3\\\">{{ 'CV.NOTE_PAID'|translate }}</span>\\n                              \\n                            </td>\\n                            <td class=\\\"text-center\\\">\\n                              <div *ngIf=\\\"cv.status!=4\\\">\\n\\n                                <a (click)=\\\"goToEditCv(cv)\\\" *ngIf=\\\"cv.status != 1 && cv.is_consult== 1\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></a>\\n                                <a (click)=\\\"goToEditCv(cv)\\\" *ngIf=\\\"cv.status == 3 && cv.is_consult== 0\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></a>\\n        \\n                                <a href=\\\"{{ cv.cv_file| picturepath:'cv' }}\\\" target=\\\"_blank\\\" *ngIf=\\\"cv.status == 2\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i></a>\\n                                <a  *ngIf=\\\"cv.is_consult == 1\\\" [routerLink]=\\\"['/cv/consulting',cv.id]\\\"><i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i></a>\\n                                <a *ngIf=\\\"cv.status == 3\\\" (click)=\\\"goToPayment(cv)\\\" ><i class=\\\"fa fa-shopping-cart\\\" aria-hidden=\\\"true\\\"></i></a>\\n                                <a (click)=\\\"removeCV(cv)\\\" ><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></a>\\n                              </div>\\n      \\n                            </td>\\n                            <td class=\\\"text-center\\\">\\n                              <label class=\\\"customRadio\\\"  *ngIf=\\\"cv.status == 2 || cv.status == 4\\\">\\n                                <input type=\\\"radio\\\" name=\\\"default\\\" [checked]=\\\"cv.is_default\\\" (click)=\\\"setIsDefault(cv)\\\">\\n                                <span class=\\\"checkmark\\\"></span>\\n                              </label>\\n                            </td>\\n                          </tr>\\n                          <tr *ngIf=\\\"userCvList.length == 0\\\" >\\n                            <td colspan=\\\"4\\\" class=\\\"text-center\\\">{{ 'PROFILEEDIT.NO_RECORD_FOUND'| translate }}</td>\\n                          </tr>\\n                        </tbody>\\n                      </table>\\n                    </div>\\n\\n                  </ng-template>\\n                </ngb-tab>\\n                <!-- Personal Info -->\\n            \\n            \\n                <!-- Education -->\\n                <ngb-tab id=\\\"education\\\">\\n                  <ng-template ngbTabTitle>\\n                    <div>\\n                      <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.EDUCATION' | translate }}\\n                    </div>\\n                  </ng-template>\\n                  <ng-template ngbTabContent>\\n            \\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"col-lg-12\\\">\\n                        <div class=\\\"alert alert-success\\\" *ngIf=\\\"educationSuccessMsg\\\">{{ educationSuccessMsg }}</div>\\n                        <div class=\\\"profile-edit-form-container\\\">\\n          \\n                          <div class=\\\"formWrap\\\">\\n                            <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DEGREE' | translate }} :</label>\\n                            <span class=\\\"formSpan col-xl-9\\\">\\n                              <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"degreelist\\\" [(ngModel)]=\\\"educationForm.degree_id\\\"\\n                                bindLabel=\\\"name\\\" bindValue=\\\"id\\\" (change)=\\\"getDegreeFields()\\\"></ng-select>\\n                              <div *ngIf=\\\"educationForm.submit && (educationForm.degree_id==null || educationForm.degree_id=='')\\\"\\n                                class=\\\"alert alert-danger\\\">\\n                                {{'PROFILEEDIT.DEGREE_REQUIRED' | translate }}\\n                              </div>\\n                            </span>\\n                          </div>\\n              \\n                          <div class=\\\"formWrap\\\">\\n                            <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.FIELD' | translate }} :</label>\\n                            <span class=\\\"formSpan col-xl-9\\\">\\n                              <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"degreeFieldlist\\\" [(ngModel)]=\\\"educationForm.field_id\\\"\\n                                bindLabel=\\\"name\\\" bindValue=\\\"id\\\"></ng-select>\\n                              <div *ngIf=\\\"educationForm.submit && (educationForm.field_id==null || educationForm.field_id=='')\\\" class=\\\"alert alert-danger\\\">\\n                                {{'PROFILEEDIT.DEGREE_FIELD_REQUIRED' | translate }}\\n                              </div>\\n                            </span>\\n                          </div>\\n              \\n                          <div class=\\\"formWrap\\\">\\n                            <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DATE_OF_DEGREE' | translate }} :</label>\\n                            <span class=\\\"formSpan withSpace\\\">\\n                              <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_FROM' | translate}}\\\" class=\\\"inpField autoWidth\\\"\\n                                [items]=\\\"years\\\" (change)=\\\"reDefineToYear($event)\\\" [(ngModel)]=\\\"educationForm.from_year\\\"></ng-select>\\n                              <div *ngIf=\\\"educationForm.submit && (educationForm.from_year==null || educationForm.from_year=='')\\\"\\n                                class=\\\"alert alert-danger\\\">\\n                                {{'PROFILEEDIT.DEGREE_FROM_YEAR_REQUIRED' | translate }}\\n                              </div>\\n                            </span>\\n                            <span class=\\\"formSpan\\\">\\n                              <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_TO' | translate}}\\\" class=\\\"inpField autoWidth withSpace\\\"\\n                                [items]=\\\"toYears\\\" [(ngModel)]=\\\"educationForm.to_year\\\"></ng-select>\\n                              <div *ngIf=\\\"educationForm.submit && (educationForm.to_year==null || educationForm.to_year=='')\\\" class=\\\"alert alert-danger\\\">\\n                                {{'PROFILEEDIT.DEGREE_TO_REQUIRED' | translate }}\\n                              </div>\\n                            </span>\\n                          </div>\\n              \\n                          <div class=\\\"addField\\\">\\n                            <div class=\\\"text-right\\\">\\n                              <button type=\\\"button\\\" name=\\\"button\\\" (click)=submitEducationFrom()>\\n                                <span *ngIf=\\\"loader.education.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                                {{ 'PROFILEEDIT.SAVE' | translate}}</button>&nbsp;\\n                              <button type=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" name=\\\"button\\\" (click)=\\\"resetEducationForm()\\\">{{\\n                                'PROFILEEDIT.RESET' | translate}}</button>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"formTable\\\">\\n                            <table class=\\\"table table-borderless\\\">\\n                              <thead>\\n                                <tr>\\n                                  <th>#</th>\\n                                  <th>{{'PROFILEEDIT.DEGREE' | translate }}</th>\\n                                  <th>{{'PROFILEEDIT.FIELD' | translate }}</th>\\n                                  <th>{{'PROFILEEDIT.DATE_OF_DEGREE' | translate }}</th>\\n                                  <th></th>\\n                                </tr>\\n                              </thead>\\n                              <tbody>\\n                                <tr *ngIf=\\\"loader.education.list\\\">\\n                                  <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                                </tr>\\n                                <tr *ngFor=\\\"let d of userDegreelist; let i=index\\\">\\n                                  <td>{{(i+1)}} </td>\\n                                  <td>{{ d.degree_name }}</td>\\n                                  <td>{{ d.degree_field_name }}</td>\\n                                  <td>\\n                                    {{ d.from_year }}\\n                                    <span *ngIf=\\\"d.to_year\\\">\\n                                      -\\n                                      {{ d.to_year }}\\n                                    </span>\\n                                  </td>\\n                                  <td>\\n                                    <a href=\\\"javascript:\\\" (click)=\\\"editEducation(d)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                    <a href=\\\"javascript:\\\" (click)=\\\"deleteEducation(i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                                  </td>\\n                                </tr>\\n                                <tr *ngIf=\\\"userDegreelist.length === 0\\\">\\n                                  <td colspan=\\\"5\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                                </tr>\\n                              </tbody>\\n                            </table>\\n                          </div>\\n                        </div>\\n            \\n                      </div>\\n                    </div>\\n            \\n                    <div class=\\\"buttonGr\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                          <a class=\\\"btnWhite\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"gotToPayment(true)\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'personal')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                                aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                            <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'skills')\\\">{{\\n                              'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n            \\n                  </ng-template>\\n                </ngb-tab>\\n                <!-- Skills -->\\n            \\n                <ngb-tab id=\\\"skills\\\">\\n                  <ng-template ngbTabTitle><i class=\\\"fa fa-star\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.SKILLS' | translate }}</ng-template>\\n                  <ng-template ngbTabContent>\\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"profile-edit-form-container\\\">\\n                        <div class=\\\"alert alert-success\\\" *ngIf=\\\"skillSuccessMsg\\\">{{ skillSuccessMsg }}</div>\\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ \\\"PROFILEEDIT.SKILLS\\\"|translate }} :</label>\\n                          <span class=\\\"formSpan col-xl-9\\\">\\n                            <!-- <input class=\\\"inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"skillForm.skill_name\\\" value=\\\"\\\" placeholder=\\\"{{ 'PROFILEEDIT.SKILL_NAME'|translate }}\\\"> -->\\n                            <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"skillsList\\\" [(ngModel)]=\\\"skillForm.skill_id\\\" bindLabel=\\\"name\\\"\\n                              bindValue=\\\"id\\\"></ng-select>\\n            \\n                            <div *ngIf=\\\"skillForm.submit && (skillForm.skill_id==null || skillForm.skill_id =='')\\\" class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.SKILL_NAME_REQUIRED' | translate }}\\n                            </div>\\n                            <div *ngIf=\\\"skillForm.submit && skillForm.error==2\\\" class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.SKILL_ALREADY_ADDED' | translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ \\\"PROFILEEDIT.DEGREE\\\"|translate }} :</label>\\n                          <span class=\\\"formSpan\\\">\\n                            <label class=\\\"diffRadio\\\">\\n                              <input type=\\\"radio\\\" name=\\\"radio\\\" [checked]=\\\"skillForm.status==1\\\" (click)=\\\"skillForm.status=1\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                              <span class=\\\"checkTxt\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_EXCELLENT\\\"|translate }}</span>\\n                            </label>\\n                            <label class=\\\"diffRadio\\\">\\n                              <input type=\\\"radio\\\" name=\\\"radio\\\" [checked]=\\\"skillForm.status==2\\\" (click)=\\\"skillForm.status=2\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                              <span class=\\\"checkTxt\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_VERY_GOOD\\\"|translate }}</span>\\n                            </label>\\n                            <label class=\\\"diffRadio\\\">\\n                              <input type=\\\"radio\\\" name=\\\"radio\\\" [checked]=\\\"skillForm.status==3\\\" (click)=\\\"skillForm.status=3\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                              <span class=\\\"checkTxt\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_GOOD\\\"|translate }}</span>\\n                            </label>\\n                            <label class=\\\"diffRadio\\\">\\n                              <input type=\\\"radio\\\" name=\\\"radio\\\" [checked]=\\\"skillForm.status==4\\\" (click)=\\\"skillForm.status=4\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                              <span class=\\\"checkTxt\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_FRESH\\\"|translate }}</span>\\n                            </label>\\n                            <div *ngIf=\\\"skillForm.submit && (skillForm.status==null || skillForm.status =='')\\\" class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.SKILL_DEGREE_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"addField\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"submitSkillForm()\\\">\\n                              <span *ngIf=\\\"loader.skills.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                              {{ \\\"PROFILEEDIT.SAVE\\\"|translate }}</button>\\n                            &nbsp;\\n                            <button type=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" name=\\\"button\\\" (click)=\\\"resetSkillForm()\\\">{{\\n                              \\\"PROFILEEDIT.RESET\\\"|translate }}</button>\\n                          </div>\\n                        </div>\\n            \\n                        <div class=\\\"formTable\\\">\\n                          <table class=\\\"table table-borderless\\\">\\n                            <thead>\\n                              <tr>\\n                                <th>#</th>\\n                                <th>{{ \\\"PROFILEEDIT.SKILLS\\\"|translate }}</th>\\n                                <th>{{ \\\"PROFILEEDIT.DEGREE\\\"|translate }}</th>\\n                                <th></th>\\n                              </tr>\\n                            </thead>\\n                            <tbody>\\n                              <tr *ngIf=\\\"loader.skills.list\\\">\\n                                <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                              </tr>\\n                              <tr *ngFor=\\\"let s of userSkilllist; let i = index\\\">\\n                                <td>{{ (i+1) }}</td>\\n                                <td>{{ s.skill_name }}</td>\\n                                <td>\\n                                  <span *ngIf=\\\"s.status==1\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_EXCELLENT\\\"|translate }}</span>\\n                                  <span *ngIf=\\\"s.status==2\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_VERY_GOOD\\\"|translate }}</span>\\n                                  <span *ngIf=\\\"s.status==3\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_GOOD\\\"|translate }}</span>\\n                                  <span *ngIf=\\\"s.status==4\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_FRESH\\\"|translate }}</span>\\n                                </td>\\n                                <td>\\n                                  <a href=\\\"javascript:\\\" (click)=\\\"editSkills(s)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                  <a href=\\\"javascript:\\\" (click)=\\\"deleteSkills(i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                                </td>\\n                              </tr>\\n                              <tr *ngIf=\\\"userSkilllist.length === 0\\\">\\n                                <td colspan=\\\"4\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                              </tr>\\n                            </tbody>\\n                          </table>\\n                        </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n            \\n                    <div class=\\\"buttonGr\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                          <a class=\\\"btnWhite\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"gotToPayment(true)\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'education')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                                aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                            <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'experience')\\\">{{\\n                              'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n            \\n                  </ng-template>\\n                </ngb-tab>\\n                <!-- Experience -->\\n                <ngb-tab id=\\\"experience\\\">\\n                  <ng-template ngbTabTitle><i class=\\\"fa fa-suitcase\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.EXPERIENCE' | translate }}</ng-template>\\n                  <ng-template ngbTabContent>\\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"profile-edit-form-container\\\">\\n                        <div class=\\\"alert alert-success\\\" *ngIf=\\\"experienceSuccessMsg\\\">{{ experienceSuccessMsg }}</div>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"experienceErrorMsg\\\">{{ experienceErrorMsg }}</div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.EXPERIENCE_COMAPNY_NAME' | translate }} :</label>\\n                          <span class=\\\"formSpan col-xl-9\\\">\\n                            <input class=\\\"inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"experienceForm.company_name\\\" value=\\\"\\\"\\n                              placeholder=\\\"{{'PROFILEEDIT.EXPERIENCE_COMAPNY_NAME' | translate }}\\\">\\n                            <div *ngIf=\\\"experienceForm.submit && (experienceForm.company_name==null || experienceForm.company_name =='')\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.EXPERIENCE_COMAPNY_NAME_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.POSITION' | translate }} :</label>\\n                          <span class=\\\"formSpan col-xl-9\\\">\\n                            <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"positionlist\\\" [(ngModel)]=\\\"experienceForm.position_id\\\"\\n                              bindLabel=\\\"name\\\" bindValue=\\\"id\\\"></ng-select>\\n                            <div *ngIf=\\\"experienceForm.submit && (experienceForm.position_id==null || experienceForm.position_id=='')\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.POSITION_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DURATION' | translate }} :</label>\\n                          <span class=\\\"formSpan withSpace\\\">\\n                            <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_FROM' | translate}}\\\" class=\\\"inpField autoWidth\\\"\\n                              [items]=\\\"years\\\" [(ngModel)]=\\\"experienceForm.from_year\\\" (change)=\\\"reDefineToYear($event)\\\"></ng-select>\\n                            <div *ngIf=\\\"experienceForm.submit && (experienceForm.from_year==null || experienceForm.from_year=='')\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.DURATION_FROM_YEAR_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n            \\n                          <ng-select [disabled]=\\\"experienceForm.is_current\\\" placeholder=\\\"{{ 'PROFILEEDIT.DURATION_TO' | translate}}\\\"\\n                            class=\\\"inpField autoWidth withSpace\\\" [items]=\\\"toYears\\\" [(ngModel)]=\\\"experienceForm.to_year\\\"></ng-select>\\n            \\n                          <label class=\\\"customCheck\\\">{{'PROFILEEDIT.EXPERIENCE_CURRENT' | translate }}\\n                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"experienceForm.is_current\\\" (click)=\\\"checkValue($event)\\\">\\n                            <span class=\\\"checkmark\\\"></span>\\n                          </label>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap vertTop\\\" for=\\\"\\\">{{'PROFILEEDIT.EXPERIENCE_SUMMARY' | translate }} :</label>\\n                          <textarea class=\\\"col-xl-9 inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"experienceForm.summery\\\" value=\\\"\\\"\\n                            placeholder=\\\"{{'PROFILEEDIT.EXPERIENCE_SUMMARY' | translate }}\\\"></textarea>\\n                        </div>\\n            \\n                        <div class=\\\"addField\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button type=\\\"button\\\" name=\\\"button\\\" (click)=submitExperienceFrom()>\\n                              <span *ngIf=\\\"loader.experience.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                              {{ 'PROFILEEDIT.SAVE' | translate}}</button>&nbsp;\\n                            <button type=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" name=\\\"button\\\" (click)=resetExperienceForm()>{{\\n                              'PROFILEEDIT.RESET' | translate}}</button>\\n                          </div>\\n                        </div>\\n            \\n                        <div class=\\\"formTable\\\">\\n                          <table class=\\\"table table-borderless\\\">\\n                            <thead>\\n                              <tr>\\n                                <th>#</th>\\n                                <th>{{'PROFILEEDIT.POSITION' | translate }}</th>\\n                                <th>{{'PROFILEEDIT.EXPERIENCE_COMAPNY_NAME' | translate }}</th>\\n                                <th>{{'PROFILEEDIT.DURATION_FROM' | translate }}</th>\\n                                <th>{{'PROFILEEDIT.DURATION_TO' | translate }}</th>\\n                                <th>{{'PROFILEEDIT.ACTION' | translate }}</th>\\n                              </tr>\\n                            </thead>\\n                            <tbody>\\n                              <tr *ngIf=\\\"loader.experience.list\\\">\\n                                <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                              </tr>\\n                              <tr *ngFor=\\\"let e of userExperiencelist; let i=index\\\">\\n                                <td>{{(i+1)}}</td>\\n                                <td>{{ e.position_name }} </td>\\n                                <td>{{ e.company_name }}</td>\\n                                <td>{{ e.from_year }}</td>\\n                                <td>{{ e.to_year }} <span *ngIf=\\\"e.is_current==1\\\">{{ 'PROFILE.EXPERIENCE_CURRENT' | translate }}</span></td>\\n            \\n                                <td>\\n                                  <a href=\\\"javascript:\\\" (click)=\\\"editExperience(e)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                  <a href=\\\"javascript:\\\" (click)=\\\"deleteExperience(i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                                </td>\\n                              </tr>\\n                              <tr *ngIf=\\\"userExperiencelist.length === 0\\\">\\n                                <td colspan=\\\"6\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                              </tr>\\n                            </tbody>\\n                          </table>\\n                        </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n            \\n                    <div class=\\\"buttonGr\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                          <a class=\\\"btnWhite\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"gotToPayment(true)\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'skills')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                                aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                            <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'certificate')\\\">{{\\n                              'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </ng-template>\\n                </ngb-tab>\\n                <!-- Experience -->\\n            \\n                <!-- Certificate -->\\n                <ngb-tab id=\\\"certificate\\\">\\n                  <ng-template ngbTabTitle><i class=\\\"fa fa-graduation-cap\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.CERTIFICATE' |\\n                    translate }}</ng-template>\\n                  <ng-template ngbTabContent>\\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"profile-edit-form-container\\\">\\n                        <div class=\\\"alert alert-success\\\" *ngIf=\\\"certificateSuccessMsg\\\">{{ certificateSuccessMsg }}</div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.CERTIFICATE' | translate }} :</label>\\n                          <span class=\\\"formSpan col-xl-9\\\">\\n                            <input class=\\\"inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"certificateForm.certificate_name\\\" value=\\\"\\\"\\n                              placeholder=\\\"{{ 'PROFILEEDIT.CERTIFICATE' | translate }}\\\">\\n                            <div *ngIf=\\\"certificateForm.submit && (certificateForm.certificate_name==null || certificateForm.certificate_name =='')\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                              {{ 'PROFILEEDIT.CERTIFICATE_NAME_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap vertTop\\\" for=\\\"\\\">{{ 'PROFILEEDIT.CERTIFICATE_SUMMARY' | translate }} :</label>\\n                          <textarea class=\\\"col-xl-9 inpField fullWidth\\\" [(ngModel)]=\\\"certificateForm.summery\\\" placeholder=\\\"{{ 'PROFILEEDIT.CERTIFICATE_SUMMARY' | translate }}\\\"></textarea>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DURATION' | translate }} :</label>\\n                          <span class=\\\"formSpan withSpace\\\">\\n                            <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_FROM' | translate}}\\\" class=\\\"inpField autoWidth\\\"\\n                              [items]=\\\"years\\\" [(ngModel)]=\\\"certificateForm.from_year\\\" (change)=\\\"reDefineToYear($event)\\\"></ng-select>\\n                            <div *ngIf=\\\"certificateForm.submit && (certificateForm.from_year==null || certificateForm.from_year=='')\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.DURATION_FROM_YEAR_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n            \\n                          <span class=\\\"formSpan withSpace\\\">\\n                            <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_TO' | translate}}\\\" class=\\\"inpField autoWidth withSpace\\\"\\n                              [items]=\\\"toYears\\\" [(ngModel)]=\\\"certificateForm.to_year\\\"></ng-select>\\n                            <div *ngIf=\\\"certificateForm.submit && (certificateForm.to_year==null || certificateForm.to_year=='')\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.DEGREE_TO_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.UPLOAD' | translate }} :</label>\\n                          <div class=\\\"fileUpload\\\">\\n                            <label for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">{{'PROFILEEDIT.BROWSE' | translate }}</label>\\n                            <input id=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg, .gif\\\" (change)=\\\"onFileChanged($event)\\\" />\\n                          </div>\\n                          <span class=\\\"uploadPic\\\" *ngIf=\\\"certificatePicture\\\"><img [src]=\\\"certificatePicture\\\" alt=\\\"\\\"></span>\\n            \\n                          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"pictureError.status == 1\\\">{{ pictureError.msg }}</div>\\n                          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"pictureSizeError.status == 1\\\">{{ pictureSizeError.msg }}</div>\\n            \\n                        </div>\\n            \\n                        <div class=\\\"addField\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button type=\\\"button\\\" name=\\\"button\\\" (click)=submitCertificateFrom()>\\n                              <span *ngIf=\\\"loader.certificate.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                              {{ 'PROFILEEDIT.SAVE' | translate}}</button>&nbsp;\\n                            <button type=\\\"button\\\" name=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" (click)=\\\"resetCertificateForm()\\\">{{\\n                              'PROFILEEDIT.RESET' | translate}}</button>\\n                          </div>\\n                        </div>\\n            \\n                        <div class=\\\"formTable\\\">\\n                          <table class=\\\"table table-borderless\\\">\\n                            <thead>\\n                              <tr>\\n                                <th>#</th>\\n                                <th>{{'PROFILEEDIT.CERTIFICATE_NAME' | translate }}</th>\\n                                <th class=\\\"text-center\\\">{{'PROFILEEDIT.DURATION_FROM' | translate }}</th>\\n                                <th class=\\\"text-center\\\">{{'PROFILEEDIT.DURATION_TO' | translate }}</th>\\n                                <th class=\\\"text-center\\\">{{'PROFILEEDIT.ACTION' | translate }}</th>\\n            \\n                              </tr>\\n                            </thead>\\n                            <tbody>\\n                              <tr *ngIf=\\\"loader.certificate.list\\\">\\n                                <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                              </tr>\\n                              <tr *ngFor=\\\"let c of userCertificatelist; let i=index\\\">\\n                                <td>{{(i+1)}}</td>\\n                                <td>{{ c.certificate_name }}</td>\\n                                <td class=\\\"text-center\\\">{{ c.from_year }}</td>\\n                                <td class=\\\"text-center\\\">{{ c.to_year }}</td>\\n            \\n                                <td class=\\\"text-center\\\">\\n                                  <a href=\\\"javascript:\\\" (click)=\\\"editCertificate(c)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                  <a href=\\\"javascript:\\\" (click)=\\\"deleteCertificate(i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                                </td>\\n                              </tr>\\n                              <tr *ngIf=\\\"userCertificatelist.length === 0\\\">\\n                                <td colspan=\\\"5\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                              </tr>\\n                            </tbody>\\n                          </table>\\n                        </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n            \\n                    <div class=\\\"buttonGr\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                          <a class=\\\"btnWhite\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"gotToPayment(true)\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'experience')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                                aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                            <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\"  (click)=\\\"setActive(tab,'projects')\\\">{{\\n                                'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n            \\n                  </ng-template>\\n                </ngb-tab>\\n            \\n                <!-- Projects -->\\n            \\n                <ngb-tab id=\\\"projects\\\">\\n                  <ng-template ngbTabTitle><i class=\\\"fa fa-graduation-cap\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.PROJECTS' |\\n                    translate }}</ng-template>\\n                  <ng-template ngbTabContent>\\n                    <div class=\\\"row\\\">\\n\\n                      <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"profile-edit-form-container\\\">\\n                        <div class=\\\"alert alert-success\\\" *ngIf=\\\"projectSuccessMsg\\\">{{ projectSuccessMsg }}</div>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"projectErrorMsg\\\">{{ projectErrorMsg }}</div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.PROJECT_NAME' | translate }} :</label>\\n                          <span class=\\\"formSpan col-xl-9\\\">\\n                            <input class=\\\"inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"projectForm.name\\\" value=\\\"\\\" placeholder=\\\"{{ 'PROFILEEDIT.PROJECT_NAME' | translate }}\\\">\\n                            <div *ngIf=\\\"projectForm.submit && (projectForm.name==null || projectForm.name =='')\\\" class=\\\"alert alert-danger\\\">\\n                              {{ 'PROFILEEDIT.PROJECT_NAME_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap \\\" for=\\\"\\\">{{ 'PROFILEEDIT.PROJECT_COMPANY' | translate }} :</label>\\n                          <span class=\\\"formSpan col-xl-9\\\">\\n                          <ng-select placeholder=\\\"{{ 'PROFILEEDIT.PROJECT_COMPANY' | translate }}\\\"  class=\\\"inpField fullWidth\\\" [items]=\\\"userCompanyList\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" [(ngModel)]=\\\"projectForm.cId\\\"></ng-select>\\n            \\n                          <div *ngIf=\\\"projectForm.submit && (projectForm.cId==null || projectForm.cId =='')\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.PROJECT_COMPANY_REQUIRED' | translate }}\\n                          </div>\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"formWrap\\\">\\n                          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DURATION' | translate }} :</label>\\n                          <span class=\\\"formSpan withSpace\\\">\\n                            <input class=\\\"inpField autoWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"projectForm.from\\\" value=\\\"\\\" placeholder=\\\"{{ 'PROFILEEDIT.DURATION_FROM' | translate }}\\\" bsDatepicker [bsValue]=\\\"bsValue\\\" [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD' }\\\" [maxDate]=\\\"maxDay\\\" autocomplete=\\\"off\\\" readonly>\\n            \\n                            <div *ngIf=\\\"projectForm.submit && (projectForm.from==null || projectForm.from=='')\\\" class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.DURATION_FROM_YEAR_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n            \\n                          <span class=\\\"formSpan withSpace\\\">\\n                            <input class=\\\"inpField autoWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"projectForm.to\\\" value=\\\"\\\" placeholder=\\\"{{ 'PROFILEEDIT.DURATION_TO' | translate }}\\\" bsDatepicker [bsValue]=\\\"bsValue\\\" [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD' }\\\" [maxDate]=\\\"maxDay\\\" autocomplete=\\\"off\\\" readonly>\\n            \\n            \\n                            <div *ngIf=\\\"projectForm.submit && (projectForm.to==null || projectForm.to=='')\\\" class=\\\"alert alert-danger\\\">\\n                              {{'PROFILEEDIT.DEGREE_TO_REQUIRED' | translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n                        <div class=\\\"addField\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button type=\\\"button\\\" name=\\\"button\\\" (click)=submitProjectFrom()>\\n                              <span *ngIf=\\\"loader.project.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                              {{ 'PROFILEEDIT.SAVE' | translate}}</button>&nbsp;\\n                            <button type=\\\"button\\\" name=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" (click)=\\\"resetProjectForm()\\\">{{\\n                              'PROFILEEDIT.RESET' | translate}}</button>\\n                          </div>\\n                        </div>\\n            \\n                        <div class=\\\"formTable\\\">\\n                          <table class=\\\"table table-borderless\\\">\\n                            <thead>\\n                              <tr>\\n                                <th>#</th>\\n                                <th>{{'PROFILEEDIT.PROJECT_NAME' | translate }}</th>\\n                                <th>{{'PROFILEEDIT.PROJECT_COMPANY' | translate }}</th>\\n                                <th class=\\\"text-center\\\">{{'PROFILEEDIT.DURATION_FROM' | translate }}</th>\\n                                <th class=\\\"text-center\\\">{{'PROFILEEDIT.DURATION_TO' | translate }}</th>\\n                                <th class=\\\"text-center\\\">{{'PROFILEEDIT.ACTION' | translate }}</th>\\n            \\n                              </tr>\\n                            </thead>\\n                            <tbody>\\n                              <tr *ngIf=\\\"loader.project.list\\\">\\n                                <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                              </tr>\\n                              <tr *ngFor=\\\"let project of userProjectlist; let i=index\\\">\\n                                <td>{{(i+1)}}</td>\\n                                <td>{{ project.name }}</td>\\n                                <td>{{ project.company_name }}</td>\\n                                <td class=\\\"text-center\\\">{{ project.from|date }}</td>\\n                                <td class=\\\"text-center\\\">{{ project.to|date }}</td>\\n            \\n                                <td class=\\\"text-center\\\">\\n                                  <a href=\\\"javascript:\\\" (click)=\\\"editProject(project)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                  <a href=\\\"javascript:\\\" (click)=\\\"deleteProject(i)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                                </td>\\n                              </tr>\\n                              <tr *ngIf=\\\"userProjectlist.length === 0\\\">\\n                                <td colspan=\\\"6\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                              </tr>\\n                            </tbody>\\n                          </table>\\n                        </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n            \\n                    <div class=\\\"buttonGr\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                          <a class=\\\"btnWhite\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"gotToPayment(true)\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                          <div class=\\\"text-right\\\">\\n                            <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'certificate')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                                aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n            \\n                            <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\"  (click)=\\\"gotToPayment()\\\">{{ 'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n            \\n                  </ng-template>\\n                </ngb-tab>\\n              </ngb-tabset>\\n        </div>\\n  </div>\\n\\n</div>\\n\\n\\n<ng-template #content let-modal>\\n  <h2><span>{{ 'PROFILEEDIT.EDIT_cv_PHOTO' |translate }}</span></h2>\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div>\\n      <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMsg\\\">{{ successMsg }}</div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMsg\\\">{{ errorMsg }}</div>\\n    </div>\\n\\n    <span class=\\\"file-upload-all\\\">\\n      <label class=\\\"custom-file-upload\\\" for=\\\"custom-input\\\">Upload Photo</label>\\n      <input id=\\\"custom-input\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg, .gif\\\" (change)=\\\"fileChangeListener($event, cropper)\\\">\\n    </span>\\n    <button class=\\\"cropSave\\\" (click)=\\\"savePhoto()\\\">Save</button>\\n\\n    <div class=\\\"imgCrop\\\">\\n      <div class=\\\"\\\">\\n        <img-cropper #cropper [image]=\\\"data\\\" [settings]=\\\"cropperSettings\\\"></img-cropper>\\n      </div>\\n      <div class=\\\"cropDisp\\\" *ngIf=\\\"data.image\\\">\\n        <img [src]=\\\"data.image\\\" [width]=\\\"cropperSettings.croppedWidth\\\" [height]=\\\"cropperSettings.croppedHeight\\\">\\n      </div>\\n\\n      <!-- <div class=\\\"\\\" *ngIf=\\\"data.image\\\">\\n        <img-cropper [image]=\\\"data\\\" [settings]=\\\"cropperSettings\\\"></img-cropper>\\n      </div>\\n      <div class=\\\"cropDisp\\\" *ngIf=\\\"data.image\\\">\\n        <img  [src]=\\\"data.image\\\" [width]=\\\"cropperSettings.croppedWidth\\\" [height]=\\\"cropperSettings.croppedHeight\\\">\\n      </div> -->\\n      <div class=\\\"clearfix\\\"></div>\\n\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #alertPopup let-modal >\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\" *ngIf=\\\"!alertPopupMsg.page\\\"></span>\\n  <div class=\\\"modal-body\\\" >\\n    <div [innerHTML]=\\\"alertPopupMsg.message\\\"></div>\\n    <div class=\\\"profileDesc\\\" *ngIf=\\\"alertPopupMsg.page\\\">\\n      <div class=\\\"profileAward\\\">\\n        <span>\\n          <a [routerLink]=\\\"['/profile/edit']\\\" *ngIf=\\\"alertPopupMsg.page == 'edit_profile'\\\">{{ 'PROFILEEDIT.EDIT_PROFILE'|translate }}</a>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".doughnut-chart-content {\\n  width: 182px;\\n  height: 182px;\\n  margin: 0 auto;\\n  margin-bottom: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3ZidWlsZGVyL2N2aW5mby9DOlxcVXNlcnNcXHNoYWR5Lm1vaGFtZWRcXERvd25sb2Fkc1xcY2FyZWVyeUFuZy9zcmNcXGFwcFxcY3ZidWlsZGVyXFxjdmluZm9cXGN2aW5mby5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQVk7RUFDWixjQUFhO0VBQ2IsZUFBYztFQUNkLG9CQUFtQixFQUN0QiIsImZpbGUiOiJzcmMvYXBwL2N2YnVpbGRlci9jdmluZm8vY3ZpbmZvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRvdWdobnV0LWNoYXJ0LWNvbnRlbnR7XG4gICAgd2lkdGg6IDE4MnB4O1xuICAgIGhlaWdodDogMTgycHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cbiJdfQ== */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 15-03-2019\n# Module                : CvinfoComponent                     \n# Object name           : CvinfoComponent    \n# Functionality         : All cv building operations\n# Purpose               : constructor, ngOnInit, setActive, open, getDismissReason, openEditPicModal, fileChangeListener, savePhoto, openAlertModal, removeProfilePic, changeTabEvent, getEducationData, getDegreeFields, resetEducationForm, submitEducationFrom, editEducation, deleteEducation, getSkillData, resetSkillForm, submitSkillForm, editSkills, deleteSkills, checkValue, getExperienceData, resetExperienceForm, submitExperienceFrom, editExperience, deleteExperience, onFileChanged, getCertificateData, resetCertificateForm, submitCertificateFrom, editCertificate, deleteCertificate, validURL, personalDetails, updatePersonalFrom, getCityList, getProjectDetails, resetProjectForm, submitProjectFrom, editProject, deleteProject, setCvInfoIntoLocal\n*******************************************************/\nimport { Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { CropperSettings } from \"ngx-img-cropper\";\nimport { UsersService } from \"../../services/users.service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { CommonService } from '../../services/common.service';\nimport { CvcardService } from '../../services/cvcard.service';\nimport * as global from \"../../globalConfig\";\nimport { Router } from \"@angular/router\";\nimport * as CryptoJS from 'crypto-js';\nimport { PicturepathPipe } from \"../../global/picturepath.pipe\";\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-cvinfo',\n  templateUrl: './cvinfo.component.html',\n  styleUrls: ['./cvinfo.component.scss'],\n  providers:[PicturepathPipe]\n})\nexport class CvinfoComponent implements OnInit {\n\n  @ViewChild('alertPopup') alertPopup;// for alert popup\n  userData: any = {};\n  data: any; // crop image data\n  maxDay: any = new Date(); // \n  cropperSettings: CropperSettings; // settings of cropper\n  successMsg: string = ''; // success message\n  errorMsg: string = ''; // error message\n  profilePic: any = ''; // user profile picture\n  years: Array<any> = []; // from years\n  toYears: Array<any> = []; // to years\n  dates: Array<any> = []; // dates \n  confirmMessage: string = ''; // confirm message\n  resetBtnDisplay: boolean = true; // reset button display status\n\n  // EDUCATION CONFIG //\n  educationForm: any = { // education form\n    \"id\": null,\n    \"degree_id\": null,\n    \"field_id\": null,\n    'from_year': null,\n    'to_year': null,\n    \"error\": 0,\n    \"submit\": false\n  };\n  educationSuccessMsg: string = ''; // education success message\n  educationResponsedata: any = null; // education response data\n  userDegreelist: Array<any> = []; // user degree list\n  degreelist: Array<any> = []; // degree list from db\n  degreeFieldlist: Array<any> = []; // digree field list\n  // EDUCATION CONFIG  END//\n\n  // SKILLS CONFIG //\n  skillForm: any = { // skill form\n    \"id\": null,\n    \"skill_id\": null,\n    \"status\": null,\n    \"error\": 0,\n    \"submit\": false\n  };\n  skillSuccessMsg: string = ''; // skills success message\n  userSkilllist: Array<any> = []; // user skills list\n  skillsList: Array<any> = []; // skill list from db\n  // SKILLS CONFIG  END//\n\n  // EXPERIENCE CONFIG //\n  experienceForm: any = { // experience form\n    \"id\": null,\n    \"company_name\": null,\n    \"position_id\": null,\n    'from_year': null,\n    'is_current': null,\n    \"summery\": null,\n    \"error\": 0,\n    \"submit\": false\n  };\n  experienceSuccessMsg: string = ''; //experience success message\n  experienceErrorMsg: string = ''; // esperience error message\n  experienceResponsedata: any = null; // experience response data\n  userExperiencelist: Array<any> = []; // user experience list\n  positionlist: Array<any> = []; // position list from db\n  // EXPERIENCE CONFIG  END//\n\n  // CERTIFICATE CONFIG //\n  certificateForm: any = { // certificate  form\n    \"id\": null,\n    \"certificate_name\": null,\n    \"summery\": null,\n    'from_year': null,\n    'to_year': null,\n    'picture': null,\n    'file': null,\n    \"error\": 0,\n    \"submit\": false\n  };\n  certificateSuccessMsg: string = ''; // certificate success message\n  certificateResponsedata: any = null; // certificate response data\n  userCertificatelist: Array<any> = []; // user certificate list\n  certificatePicture: any = ''; // certificate picture\n  pictureError = { // picture error\n    status: 0,\n    msg: ''\n  }\n  pictureSizeError = { // picture size error\n    status: 0,\n    msg: ''\n  }\n  // pictureErrorMsg: string = '';\n  // CERTIFICATE CONFIG  END//\n\n  // PERSONAL CONFIG //\n  personalForm: any = { // personal details form\n    \"id\": null,\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"family_name\": \"\",\n    \"email\": \"\",\n    \"website\": \"\",\n    \"mobile_code\":\"\",\n    \"mobile_no\": \"\",\n    \"country_id\": \"\",\n    \"city_id\": \"\",\n    \"dob_year\": \"\",\n    \"dob_month\": \"\",\n    \"dob_date\": \"\",\n    \"address\": \"\",\n    \"error\": 0,\n    \"submit\": false\n  };\n  // Project form\n  projectForm: any = {\n    \"id\": null,\n    \"name\": null,\n    \"cId\": null,\n    \"from\": null,\n    \"to\": null,\n    \"error\": 0,\n    \"submit\": false\n  }\n  userProjectlist: Array<any> = []; // user project list\n  userCompanyList: Array<any> = []; // user company list\n  projectSuccessMsg: string = ''; // success message for user project manage\n  projectErrorMsg: string = ''; // error message for user project manage\n  urlErr = { // url errors\n    'facebook': false,\n    'deviantart': false,\n    'behance': false,\n    'twitter': false,\n    'dribbble': false,\n    'pinterest': false\n  };\n  personalSuccessMsg: string = ''; // personal success message\n  personalErrorMsg: string = ''; // personal error message\n  personalResponsedata: any = null; // personal response data\n  countryList: Array<any> = []; // country list from db\n  countryCodes: Array<any> = [];\n  cityList: Array<any> = []; // city list from db\n  monthList: Array<any> = []; // month list\n  dayList: Array<any> = []; // day list\n  // PERSONAL CONFIG  END//\n\n  // Modal popup\n  closeResult: string; // close result\n\n  loader: any = { // loader config\n    'personal': {\n      'list': false,\n      'submit': false\n    },\n    'education': {\n      'list': false,\n      'submit': false\n    },\n    'skills': {\n      'list': false,\n      'submit': false\n    },\n    'experience': {\n      'list': false,\n      'submit': false\n    },\n    'certificate': {\n      'list': false,\n      'submit': false\n    },\n    'project': {\n      'list': false,\n      'submit': false\n    },\n  };\n\n  saveCvInfoData: any = {\n    \"personal\": null,\n    \"profilePic\": null,\n    \"educations\": [],\n    \"skills\": [],\n    \"experiences\": [],\n    \"certificates\": [],\n    \"projects\": []\n  };\n\n  alertPopupMsg: any = {\n    message: '',\n    page: ''\n  };\n\n\n  completePecent: any = 0;\n\n  userPersonalData : any = null;\n  userCvList: Array<any> = [];\n  cvmaxlimitStatus:any = 1;\n  cvLimitDisabkedStatus : any = false;\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and defin the languages data\n\t* PARAMS : \n\t*/\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private uService: UsersService,\n    private translate: TranslateService,\n    private cService: CommonService,\n    private cvCardService: CvcardService,\n    private route: Router,\n    private filePathPipe: PicturepathPipe\n  ) {\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n    translate.get('PROFILEEDIT.PICTURE_VALIDATION_ERROR').subscribe((tData) => {\n      this.pictureError.msg = tData;\n    });\n\n    let cvType = localStorage.getItem('_cvt');\n    if (!cvType) {\n      localStorage.setItem(\"_cvt\", 'build');\n    }\n\n  }\n\n  /* Function Name : ngOnInit\n    * Author : \n    * Created Date : 15-03-2019 \n    * Modified Date : *\n    * Purpose : to get data after html load\n    * PARAMS : \n    */\n  ngOnInit() {\n\n   /**/ \n   this.getUserCvList();\n\n    if ((localStorage.getItem('_cp') === '/cv/build' || localStorage.getItem('_cp') === '/cv/build/pay') && localStorage.getItem('_cvinfo')) {\n      this.saveCvInfoData = JSON.parse(localStorage.getItem('_cvinfo'));\n      this.defineChart();\n    } else {\n      localStorage.setItem('_cvinfo', JSON.stringify(this.saveCvInfoData));\n    }\n\n    if (localStorage.getItem(\"_user\")) {\n      let user:any = this.cService.getLoggedUserData();\n      user = CryptoJS.AES.encrypt(JSON.stringify(parseInt(user._i)), 'careery');\n      user = user.toString();\n      this.uService.userpreviewCvInfo({cv_user:user})\n      .subscribe((responseData:any)=>{\n        if (responseData.statustext == 'success') {\n          this.userData = responseData.data;\n          this.personalDetails();\n          this.getEducationData();\n          this.getSkillData();\n          this.getExperienceData();\n          this.getCertificateData();\n          this.getProjectDetails();\n        }\n      });\n    }\n\n    this.data = {};\n\n\n    this.cropperSettings = new CropperSettings();\n    this.cropperSettings.noFileInput = true;\n    let currentYear = new Date().getFullYear();\n    for (let y = currentYear; y > currentYear - 100; y--) {\n      this.years.push(y);\n    }\n\n    // month list\n    for (let m = 1; m <= 12; m++) {\n      this.monthList.push({\n        id: (m < 10) ? '0' + m : m.toString(),\n        name: (m < 10) ? '0' + m : m.toString(),\n      })\n    }\n    for (let d = 1; d <= 31; d++) {\n      this.dayList.push({\n        id: (d < 10) ? '0' + d : d.toString(),\n        name: (d < 10) ? '0' + d : d.toString(),\n      })\n    }\n    \n\n  }\n\n  getUserCvList() {\n    this.cvCardService.getUserCvList()\n      .subscribe((responseData: any) => {\n        if (responseData.statustext == 'success') {\n\n          this.userCvList = responseData.data.list;\n          this.userCvList.push(\n            {\n              \"cv_name\":\"Preview Cv\",\n              \"status\":4,\n              \"is_default\": (this.userCvList.findIndex((i)=> {return i.is_default == 1}) == -1)?1:null\n            }\n          );\n          this.cvmaxlimitStatus = responseData.data.maxlimit;\n          \n        }\n      });\n  }\n  removeCV(cv) {\n    if (!cv.is_default) {\n      this.translate.get(['COMMON.ARE_YOU_SURE','CV.CV_DELETE_CONFIRM_MSG'])\n        .subscribe((tData) => {\n          swal({\n            title: tData['COMMON.ARE_YOU_SURE'],\n            text: tData['CV.CV_DELETE_CONFIRM_MSG'],\n            icon: \"warning\",\n            buttons: {\n              cancel: true,\n              confirm: true,\n            },\n          }).then((willDelete) => {\n            if (willDelete) {\n              this.cvCardService.deleteUserCv(cv.id)\n                .subscribe((responseData: any) => {\n                  if (responseData.statustext == 'success') {\n                    this.getUserCvList();\n                  }\n                });\n            }\n          });\n        })\n    } else {\n      this.translate.get(['COMMON.ERROR', 'CV.DEFAULT_CV_DELETE_MSG'])\n        .subscribe((tdata) => {\n          swal({\n            title: tdata['COMMON.ERROR'],\n            text: tdata['CV.DEFAULT_CV_DELETE_MSG'],\n            icon: \"error\",\n          })\n        })\n    }\n  }\n\n  setIsDefault(cv) {\n    this.cvCardService.setIsdefault(cv.id)\n      .subscribe((responseData: any) => {\n        if (responseData.statustext == 'success') {\n          // this.getUserCvList();\n        }\n      });\n  }\n\n  goToEditCv(cv) {\n    let cvType = '';\n    if (cv.is_consult == 1) {\n      cvType = 'consult';\n    } else {\n      cvType = 'build';\n    }\n    localStorage.setItem('_cvt', cvType);\n    localStorage.setItem('_cvid', cv.id);\n    let cvId = localStorage.getItem('_cvid');\n    localStorage.setItem('_cvinfo', (cv.cv_details));\n    this.route.navigate(['/cv/build']);\n\n  }\n\n  /* Function Name : goToCvConsult\n\t* Author : \n\t* Created Date : 19-03-2019 \n\t* Modified Date : *\n\t* Purpose : to go to cv consulting page\n\t* PARAMS :  \n  */\n  goToCvConsult() {\n\n    localStorage.setItem('_cvt', 'consult');\n    this.route.navigate(['/cv/build']);\n  }\n\n  /* Function Name : goToPayment\n\t* Author : \n\t* Created Date : 02-04-2019 \n\t* Modified Date : *\n\t* Purpose : to go to the payment and templating page\n\t* PARAMS :  \n  */\n  goToPayment(cv) {\n    let cvType = '';\n    if (cv.is_consult == 1) {\n      cvType = 'consult';\n    } else {\n      cvType = 'build';\n    }\n    localStorage.setItem('_cvt', cvType);\n    localStorage.setItem('_cvid', cv.id);\n    let cvId = localStorage.getItem('_cvid');\n    localStorage.setItem('_cvinfo', (cv.cv_details));\n    this.route.navigate(['/cv/pay']);\n  }\n  reDefineToYear(event: any) {\n    this.toYears = [];\n    this.educationForm.to_year = null;\n    this.experienceForm.to_year = null;\n    this.certificateForm.to_year = null;\n    let currentYear = new Date().getFullYear();\n    for (let y = event; y <= currentYear; y++) {\n      this.toYears.push(y);\n    }\n  }\n\n  /* Function Name : setActive\n    * Author : \n    * Created Date : 15-03-2019 \n    * Modified Date : *\n    * Purpose : to set active tab\n    * PARAMS : tab, activeTab\n    */\n  setActive(tab, activeTab) {\n\n    tab.select(activeTab);\n  }\n  /* Function Name : open\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to set open modal\n\t* PARAMS : content\n\t*/\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  /* Function Name : getDismissReason\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to dismiss modal\n\t* PARAMS : reason\n\t*/\n  getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  /* Function Name : openEditPicModal\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to open edit profile picture modal\n\t* PARAMS : content\n\t*/\n  openEditPicModal(content) {\n\n    this.modalService.open(content, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n  }\n  /* Function Name : fileChangeListener\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get file object on image upload\n\t* PARAMS : $event, cropper\n\t*/\n  fileChangeListener($event, cropper) {\n    var image: any = new Image();\n    var file: File = $event.target.files[0];\n    if (file && (file.type == 'image/jpeg' || file.type == 'image/png' || file.type == 'image/gif')) {\n      if (file.size < 250000) {\n\n        var myReader: FileReader = new FileReader();\n        var that = this;\n\n        myReader.onloadend = (loadEvent: any) => {\n\n          image.src = loadEvent.target.result;\n          setTimeout(() => {\n            cropper.setImage(image);\n          }, 10);\n        };\n\n        myReader.readAsDataURL(file);\n      } else {\n        this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_SIZE_ERROR']).subscribe((tData) => {\n          \n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['PROFILEEDIT.PROFILE_PIC_SIZE_ERROR'],\n            icon: 'error'\n          });\n        });\n\n      }\n    } else {\n      this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_TYPE_ERROR']).subscribe((tData) => {\n          \n        swal({\n          title: tData['COMMON.ERROR'],\n          text: tData['PROFILEEDIT.PROFILE_PIC_TYPE_ERROR'],\n          icon: 'error'\n        });\n      });\n    }\n  }\n  /* Function Name : savePhoto\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to save photo\n\t* PARAMS : \n\t*/\n  savePhoto() {\n    if (this.data.image) {\n\n      this.setCvInfoIntoLocal('cvpic', this.data['image']);\n      this.profilePic = this.data['image'];\n      this.modalService.dismissAll();\n    } else {\n      this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_TYPE_ERROR']).subscribe((tData) => {\n          \n        swal({\n          title: tData['COMMON.ERROR'],\n          text: tData['PROFILEEDIT.PROFILE_PIC_TYPE_ERROR'],\n          icon: 'error'\n        });\n      });\n\n\n    }\n  }\n  /* Function Name : openAlertModal\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to open alert modal\n\t* PARAMS : alertContent\n\t*/\n  openAlertModal(alertContent: string) {\n    this.modalService.open(document.getElementById(alertContent), { size: 'sm', centered: true, windowClass: 'DefaultModal' });\n  }\n  /* Function Name : removeProfilePic\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to remove profile picture\n\t* PARAMS : \n\t*/\n  removeProfilePic() {\n    this.translate.get(['COMMON.ARE_YOU_SURE','PROFILEEDIT.CONFIRMTODELETEPROFILEPIC']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: tData['COMMON.ARE_YOU_SURE'],\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRMTODELETEPROFILEPIC'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.setCvInfoIntoLocal('cvpic', null);\n          // this.profilePic = null;\n        }\n      })\n    });\n      \n\n\n  }\n  /* Function Name : changeTabEvent\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get data on tab change\n\t* PARAMS : e\n\t*/\n  changeTabEvent(e) {\n    let currentYear = new Date().getFullYear();\n    for (let y = currentYear; y > currentYear - 100; y--) {\n      this.years.push(y);\n    }\n    this.toYears = this.years;\n    switch (e.nextId) {\n      case \"personal\":\n        this.personalDetails();\n        break;\n      case \"education\":\n        this.getEducationData(true);\n        break;\n      case \"skills\":\n        this.getSkillData(true);\n        break;\n      case \"experience\":\n        this.getExperienceData(true);\n        break;\n      case \"certificate\":\n        this.getCertificateData(true);\n        break;\n      case \"projects\":\n        this.getProjectDetails(true);\n        break;\n    }\n  }\n\n  // EDUCATION TAB //\n\n  /* Function Name : getEducationData\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get education data\n\t* PARAMS : \n\t*/\n  getEducationData(isActive=false) {\n\n    if (localStorage.getItem('_cp') === '/cv/build' && localStorage.getItem('_cvinfo')) {\n      this.userDegreelist = JSON.parse(localStorage.getItem('_cvinfo')).educations;\n      if (this.userDegreelist.length == 0) {\n        this.userData.degree.forEach(element => {\n          let newData = {\n            \"degree_id\": element.degree_id,\n            \"field_id\": element.degree_field_id,\n            \"from_year\": element.from_year,\n            \"to_year\": element.to_year,\n            \"degree_name\": element.degreeDetails.details[0].name,\n            \"degree_field_name\": element.degreeFieldDetails.details[0].name\n          } ;\n          this.setCvInfoIntoLocal('education', newData);\n          this.userDegreelist.push(newData);\n        });\n      }\n    }\n    if (isActive) {\n\n      this.uService.getCvContent('education')\n        .subscribe((responseList: any) => {\n          this.loader.personal.list = false;\n          if (responseList.statustext == 'success') {\n            this.educationResponsedata = responseList.data;\n            this.degreelist = responseList.data.degree;\n            this.getDegreeFields();\n          }\n        })\n      this.resetEducationForm();\n    }\n\n\n\n  }\n  /* Function Name : getDegreeFields\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get degree field data\n\t* PARAMS : \n\t*/\n  getDegreeFields() {\n    let degId = this.educationForm.degree_id;\n    if (this.educationResponsedata.degreeField) {\n      let degreeFileds = this.educationResponsedata.degreeField;\n      this.educationForm.field_id = null;\n      this.degreeFieldlist = [];\n      this.degreeFieldlist = degreeFileds.filter((i) => {\n        return i.degree_id == degId;\n      });\n    }\n  }\n\n  /* Function Name : resetEducationForm\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to reset education form\n\t* PARAMS : \n\t*/\n  resetEducationForm() {\n    this.educationForm = {\n      \"id\": null,\n      \"degree_id\": null,\n      \"field_id\": null,\n      'from_year': null,\n      'to_year': null,\n      'error': 0,\n      'submit': false\n    };\n    this.resetBtnDisplay = true;\n  }\n\n  /* Function Name : submitEducationFrom\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to submit education form\n\t* PARAMS : \n\t*/\n  submitEducationFrom() {\n\n    this.educationForm.submit = true;\n    if (!this.educationForm.degree_id || !this.educationForm.field_id || !this.educationForm.from_year || !this.educationForm.to_year) {\n      this.educationForm.error = 1;\n    } else {\n      this.educationForm.error = 0;\n    }\n    if (this.educationForm.error == 0) {\n      this.loader.education.submit = true;\n      let newEducationData = this.educationForm;\n\n      let selectedDegree = this.degreelist.find((item) => {\n        return item.id == newEducationData['degree_id']\n      });\n      newEducationData['degree_name'] = selectedDegree.name;\n\n      let selectedDegreeField = this.degreeFieldlist.find((item) => {\n        return item.id == newEducationData['field_id']\n      });\n      newEducationData['degree_field_name'] = selectedDegreeField.name;\n\n\n      this.setCvInfoIntoLocal('education', newEducationData);\n      this.getEducationData();\n\n      global.SCROLL_TO_TOP();\n      this.loader.education.submit = false;\n    }\n  }\n\n  /* Function Name : editEducation\n\t* Author : \n\t* Created Date : 18-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get education data on edit mode in form\n\t* PARAMS :  educationDetails\n\t*/\n  editEducation(educationDetails: any) {\n    this.resetBtnDisplay = false;\n    this.educationForm[\"id\"] = educationDetails.id;\n    this.educationForm[\"degree_id\"] = educationDetails.degree_id;\n    this.getDegreeFields();\n    this.educationForm[\"field_id\"] = educationDetails.field_id;\n    this.educationForm[\"from_year\"] = educationDetails.from_year;\n    this.educationForm[\"to_year\"] = educationDetails.to_year;\n\n  }\n  /* Function Name : deleteEducation\n\t* Author : \n\t* Created Date : 18-03-2019 \n\t* Modified Date : *\n\t* Purpose : to delete education details\n\t* PARAMS : degreeIndex\n\t*/\n  deleteEducation(degreeIndex) {\n    \n    this.translate.get(['PROFILEEDIT.CONFIRM_TO_DELETE_DEGREE']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: '',\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_DEGREE'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.saveCvInfoData.educations.splice(degreeIndex, 1);\n          localStorage.setItem('_cvinfo', JSON.stringify(this.saveCvInfoData));\n          this.getEducationData();\n\n          global.SCROLL_TO_TOP();\n        }\n      })\n    });\n\n    \n  }\n  // EDUCATION TAB CLOSE//\n\n  // SKILLS TAB //\n  /* Function Name : getSkillData\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get user skill data\n\t* PARAMS : \n\t*/\n  getSkillData(isActive=false) {\n    this.loader.skills.list = true;\n    if (localStorage.getItem('_cp') === '/cv/build' && localStorage.getItem('_cvinfo')) {\n      this.userSkilllist = JSON.parse(localStorage.getItem('_cvinfo')).skills;\n      this.loader.skills.list = false;\n      if (this.userSkilllist.length == 0) {\n        this.userData.skills.forEach(element => {\n          let newData = {\n            \"skill_id\": element.skill_id,\n            \"status\": element.status,\n            \"skill_name\": element.details[0].name\n          } ;\n          this.setCvInfoIntoLocal('skills', newData);\n          this.userSkilllist.push(newData);\n        });\n      }\n      this.resetSkillForm();\n    }\n    if (isActive) {\n    this.uService.getCvContent('skills')\n      .subscribe((responseList: any) => {\n        this.loader.skills.list = false;\n        if (responseList.statustext == 'success') {\n          this.skillsList = responseList.data.skills;\n        }\n      })\n    this.resetSkillForm();\n    }\n  }\n  /* Function Name : resetSkillForm\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to reset skill form\n\t* PARAMS : \n\t*/\n  resetSkillForm() {\n    this.skillForm = {\n      \"id\": null,\n      \"skill_id\": null,\n      \"status\": null,\n      \"error\": 0,\n      \"submit\": false\n    };\n    this.resetBtnDisplay = true;\n  }\n\n  /* Function Name : submitSkillForm\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to submit skill form\n\t* PARAMS : \n\t*/\n  submitSkillForm() {\n\n    this.skillForm.submit = true;\n    if (!this.skillForm.skill_id || !this.skillForm.status) {\n      this.skillForm.error = 1;\n    } else {\n      this.skillForm.error = 0;\n    }\n    if (this.userSkilllist.length > 0) {\n      let skillExist = this.userSkilllist.find((item) => {\n        return item.skill_id == this.skillForm.skill_id;\n      });\n      if (skillExist) {\n        this.skillForm.error = 2;\n      } else {\n        this.skillForm.error = 0;\n      }\n    }\n    if (this.skillForm.error == 0) {\n      this.loader.skills.submit = true;\n      let newSkillData = this.skillForm;\n      let selectSkill = this.skillsList.find((item) => {\n        return item.id == newSkillData.skill_id;\n      })\n      newSkillData['skill_name'] = selectSkill.name;\n      this.setCvInfoIntoLocal('skills', newSkillData);\n      this.getSkillData();\n\n      global.SCROLL_TO_TOP();\n      this.loader.skills.submit = false;\n    }\n\n  }\n  /* Function Name : editSkills\n\t* Author : \n\t* Created Date : 18-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get skill data on edit mode\n\t* PARAMS :  skillDetails\n\t*/\n  editSkills(skillDetails: any) {\n    this.resetBtnDisplay = false;\n    this.skillForm[\"id\"] = skillDetails.id;\n    this.skillForm[\"skill_id\"] = skillDetails.skill_id;\n    this.skillForm[\"status\"] = skillDetails.status;\n  }\n  /* Function Name : deleteSkills\n\t* Author : \n\t* Created Date : 18-03-2019\n\t* Modified Date : *\n\t* Purpose : to delete skill details\n\t* PARAMS :  skillInsex\n\t*/\n  deleteSkills(skillIndex) {\n    this.translate.get(['PROFILEEDIT.CONFIRM_TO_DELETE_SKILL']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: '',\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_SKILL'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.saveCvInfoData.skills.splice(skillIndex, 1);\n          localStorage.setItem('_cvinfo', JSON.stringify(this.saveCvInfoData));\n          this.getSkillData();\n        }\n      })\n    });\n  }\n  // SKILLS TAB CLOSE //\n\n  // EXPERIENCE TAB //\n  /* Function Name : checkValue\n\t* Author : \n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to check the value\n\t* PARAMS :  event\n\t*/\n  checkValue(event: any) {\n    this.experienceForm.is_current = (event.target.checked) ? 1 : 0;\n    if (this.experienceForm.is_current === 1) {\n      this.experienceForm.to_year = null;\n    }\n  }\n  /* Function Name : getExperienceData\n\t* Author : \n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to get experience data of a user\n\t* PARAMS :  \n\t*/\n  getExperienceData(isActive= false) {\n    this.loader.experience.list = true;\n    if (localStorage.getItem('_cp') === '/cv/build' && localStorage.getItem('_cvinfo')) {\n      this.userExperiencelist = JSON.parse(localStorage.getItem('_cvinfo')).experiences;\n      if (this.userExperiencelist.length == 0) {\n        this.userData.experience.forEach(element => {\n          let newData = {\n            \"company_name\": (element.company)?element.company.details[0].name : element.company_name ,\n            \"position_id\": element.position_id,\n            \"from_year\": element.from_year,\n            \"to_year\": element.to_year,\n            \"is_current\": element.is_current,\n            \"summery\": element.summery,\n            \"position_name\": element.position.details[0].name\n          } ;\n          this.setCvInfoIntoLocal('experience', newData);\n          this.userExperiencelist.push(newData);\n        });\n      }\n    }\n    if(isActive) {\n\n      this.uService.getCvContent('experience')\n        .subscribe((responseList: any) => {\n          this.loader.experience.list = false;\n          if (responseList.statustext == 'success') {\n            this.positionlist = responseList.data.positionList;\n          }\n        })\n      this.resetExperienceForm();\n    }\n\n  }\n  /* Function Name : resetExperienceForm\n\t* Author : \n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to reset experience form\n\t* PARAMS :  \n\t*/\n  resetExperienceForm() {\n    this.experienceForm = {\n      \"id\": null,\n      \"company_name\": null,\n      \"position_id\": null,\n      'from_year': null,\n      'to_year': null,\n      'is_current': null,\n      'summery': null,\n      \"error\": 0,\n      \"submit\": false\n\n    };\n    this.resetBtnDisplay = true;\n  }\n  /* Function Name : submitExperienceFrom\n\t* Author : \n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to submit experience form\n\t* PARAMS :  \n\t*/\n  submitExperienceFrom() {\n\n    this.experienceForm.submit = true;\n    this.experienceForm.company_name = this.experienceForm.company_name.trim();\n    if (!this.experienceForm.company_name || !this.experienceForm.position_id || !this.experienceForm.from_year) {\n      this.experienceForm.error = 1;\n    } else {\n      let duplicateExperience = this.userExperiencelist.filter((item)=>{\n        return (\n          item.position_id == this.experienceForm.position_id &&\n          item.company_name == this.experienceForm.company_name &&\n          item.from_year == this.experienceForm.from_year &&\n          item.to_year == this.experienceForm.to_year\n        );\n      });\n      if (duplicateExperience && duplicateExperience.length > 0) {\n        this.translate.get(['COMMON.ERROR', 'PROFILEEDIT.DUPLICATE_EXPERIENCE_ERROR' ]).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['PROFILEEDIT.DUPLICATE_EXPERIENCE_ERROR'],\n            icon: 'error'\n          });\n        });\n        this.experienceForm.error = 1;  \n      } else {\n        this.experienceForm.error = 0;\n      }\n    }\n    if (this.experienceForm.error == 0) {\n      \n\n      this.loader.experience.submit = true;\n      let newExperienceData = this.experienceForm;\n      let selectPosition = this.positionlist.find((item) => {\n        return item.id == newExperienceData.position_id\n      });\n      newExperienceData['position_name'] = selectPosition.name;\n      this.setCvInfoIntoLocal('experience', newExperienceData);\n      this.getExperienceData();\n\n      global.SCROLL_TO_TOP();\n      this.loader.experience.submit = false;\n    }\n  }\n  /* Function Name : editExperience\n\t* Author : \n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to get data in edit mode\n\t* PARAMS :  experienceDetails\n\t*/\n  editExperience(experienceDetails: any) {\n    this.resetBtnDisplay = false;\n    this.experienceForm[\"id\"] = experienceDetails.id;\n    this.experienceForm[\"company_name\"] = experienceDetails.company_name;\n    this.experienceForm[\"position_id\"] = experienceDetails.position_id;\n    this.experienceForm[\"from_year\"] = experienceDetails.from_year;\n    this.experienceForm[\"to_year\"] = experienceDetails.to_year;\n    this.experienceForm[\"is_current\"] = experienceDetails.is_current;\n    this.experienceForm[\"summery\"] = experienceDetails.summery;\n  }\n  /* Function Name : deleteExperience\n\t* Author : \n\t* Created Date : 18-03-2019\n\t* Modified Date : *\n\t* Purpose : to delete experience details\n\t* PARAMS :  experienceIndex\n\t*/\n  deleteExperience(experienceIndex) {\n    this.translate.get(['PROFILEEDIT.CONFIRM_TO_DELETE_EXPERIENCE']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: '',\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_EXPERIENCE'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.saveCvInfoData.experiences.splice(experienceIndex, 1);\n        localStorage.setItem('_cvinfo', JSON.stringify(this.saveCvInfoData));\n        this.getExperienceData();\n        }\n      })\n    });\n\n   \n  }\n  // EXPERIENCE TAB CLOSE //\n\n  // CERTIFICATE TAB //\n  /* Function Name : onFileChanged\n\t* Author : \n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to get image data on file browse\n\t* PARAMS :  event\n\t*/\n  onFileChanged(event) {\n    //this.certificateForm.file = event.target.files[0];\n    this.certificatePicture = '';\n    this.certificateForm.picture = '';\n    this.pictureError.status = 0;\n    const uploadImage = (event.target.files[0]) ? event.target.files[0] : '';\n    if (uploadImage && uploadImage.type.indexOf('image/') == -1) {\n      this.pictureError.status = 1;\n      return false;\n    } else {\n      this.pictureError.status = 0;\n    }\n    if (uploadImage && uploadImage.size > 500000) {\n\n      this.pictureSizeError.status = 1;\n      this.translate.get('PROFILEEDIT.CERTIFICATE_PIC_SIZE_ERROR').subscribe((tData) => {\n        this.pictureSizeError.msg = tData;\n      });\n      return false;\n    } else {\n      this.pictureSizeError.status = 0;\n    }\n\n    var reader = new FileReader();\n    reader.readAsDataURL(uploadImage);\n    reader.onload = () => {\n      this.certificatePicture = reader.result;\n      this.certificateForm.picture = reader.result;\n    };\n    // console.log(this.certificateForm.file);\n  }\n  /* Function Name : getCertificateData\n\t* Author : \n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to get certificate data\n\t* PARAMS :  \n\t*/\n  getCertificateData(isActive = false) {\n    if (localStorage.getItem('_cp') === '/cv/build' && localStorage.getItem('_cvinfo')) {\n      this.userCertificatelist = JSON.parse(localStorage.getItem('_cvinfo')).certificates;\n      if (this.userCertificatelist.length == 0) {\n        this.userData.certificates.forEach(element => {\n          let newData = {\n            \"certificate_name\": element.certificate_name,\n            \"summery\": element.summery,\n            \"from_year\": element.from_year,\n            \"to_year\": element.to_year,\n            \"picture\": null\n          } ;\n          this.setCvInfoIntoLocal('certificates', newData);\n          this.userCertificatelist.push(newData);\n        });\n      }\n    }\n    if(isActive) {\n      this.resetCertificateForm();\n    }\n\n  }\n  /* Function Name : resetCertificateForm\n\t* Author : \n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to reset certificate form\n\t* PARAMS :  \n\t*/\n  resetCertificateForm() {\n    this.certificateForm = {\n      \"id\": null,\n      \"certificate_name\": null,\n      \"summery\": null,\n      'from_year': null,\n      'to_year': null,\n      'picture': null,\n      'error': 0,\n      'submit': false\n    };\n    this.certificatePicture = '';\n    this.certificateForm.submit = false;\n    this.resetBtnDisplay = true;\n    this.pictureError.status = 0;\n    this.pictureSizeError.status = 0;\n  }\n  /* Function Name : submitCertificateFrom\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to submit certificate form\n\t* PARAMS :  \n\t*/\n  submitCertificateFrom() {\n\n    this.certificateForm.submit = true;\n    this.certificateForm.certificate_name = this.certificateForm.certificate_name.trim();\n    if (!this.certificateForm.certificate_name || !this.certificateForm.from_year || !this.certificateForm.to_year) {\n      this.certificateForm.error = 1;\n    } else {\n      this.certificateForm.error = 0;\n    }\n    if (this.certificateForm.error == 0) {\n      this.loader.certificate.submit = true;\n      let newCertificateData = this.certificateForm;\n      this.setCvInfoIntoLocal('certificates', newCertificateData);\n      this.getCertificateData();\n\n      global.SCROLL_TO_TOP();\n      this.loader.certificate.submit = false;\n    }\n  }\n  /* Function Name : editCertificate\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get data on edit mode \n\t* PARAMS :  certificateDetails\n\t*/\n  editCertificate(certificateDetails: any) {\n    this.resetBtnDisplay = false;\n    this.certificateForm[\"id\"] = certificateDetails.id;\n    this.certificateForm[\"certificate_name\"] = certificateDetails.certificate_name;\n    this.certificateForm[\"summery\"] = certificateDetails.summery;\n    this.certificateForm[\"from_year\"] = certificateDetails.from_year;\n    this.certificateForm[\"to_year\"] = certificateDetails.to_year;\n    if (certificateDetails.picture) {\n      this.certificatePicture = certificateDetails.picture;\n      this.certificateForm[\"picture\"] = certificateDetails.picture;\n    }\n  }\n  /* Function Name : deleteCertificate\n\t* Author : \n\t* Created Date : 18-03-2019 \n\t* Modified Date : *\n\t* Purpose : to delete certificate data\n\t* PARAMS :  certificateIndex\n\t*/\n  deleteCertificate(certificateIndex) {\n    this.translate.get(['PROFILEEDIT.CONFIRM_TO_DELETE_CERTIFICATE']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: '',\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_CERTIFICATE'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.saveCvInfoData.certificates.splice(certificateIndex, 1);\n          localStorage.setItem('_cvinfo', JSON.stringify(this.saveCvInfoData));\n          this.getCertificateData();\n        }\n      })\n    });\n\n  }\n  // CERTIFICATE TAB CLOSE //\n  /* Function Name : validURL\n* Author : \n* Created Date : 15-03-2019 \n* Modified Date : *\n* Purpose : to check the valid url\n* PARAMS :  myURL\n*/\n\n  // PERSONAL TAB //\n  validURL(myURL) {\n    var pattern = new RegExp(/(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/);\n    return pattern.test(myURL);\n  }\n  /* Function Name : personalDetails\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get personal details\n\t* PARAMS :  \n\t*/\n  personalDetails() {\n    this.loader.personal.list = true;\n\n    if (localStorage.getItem('_cp') === '/cv/build' && localStorage.getItem('_cvinfo')) {\n      let personal = JSON.parse(localStorage.getItem('_cvinfo')).personal;\n      if (personal) {\n        this.personalForm = JSON.parse(localStorage.getItem('_cvinfo')).personal;\n      } else {\n        if (this.userData.profile_pic)  {\n          \n          this.setCvInfoIntoLocal('cvpic', this.filePathPipe.transform(this.userData.profile_pic, 'users'));\n        }\n        this.personalForm.first_name = this.userData.first_name;\n        this.personalForm.last_name = this.userData.last_name;\n        this.personalForm.email = this.userData.email;\n        this.personalForm.mobile_code = this.userData.mobile_code;\n        this.personalForm.mobile_no = this.userData.mobile_no;\n        this.personalForm.country_id = this.userData.country_id;\n        this.getCityList();\n        this.personalForm.city_id = this.userData.city_id;\n        this.personalForm.address = this.userData.address;\n        let dob = new Date(this.userData.dob);\n        this.personalForm.dob_year = dob.getFullYear();\n        let dob_month = dob.getMonth()+1;\n        this.personalForm.dob_month = (dob_month<10)?'0'+dob_month:dob_month;\n        let dob_date = dob.getDate();\n        this.personalForm.dob_date = (dob_date<10)?'0'+dob_date:dob_date;;\n        this.personalForm.address = this.userData.address;\n        this.personalForm.website = this.userData.website;\n        this.setCvInfoIntoLocal('personal', this.personalForm);\n      }\n    }\n    this.personalForm.error = 0;\n    this.personalForm.submit = false;\n    this.personalSuccessMsg = '';\n    this.personalErrorMsg = '';\n\n    this.uService.getCvContent('personal')\n      .subscribe((responseCountryList: any) => {\n        this.loader.personal.list = false;\n        if (responseCountryList.statustext == 'success') {\n          this.countryList = responseCountryList.data.country;\n          this.countryCodes = responseCountryList.data.country_ph_list;\n          this.getCityList();\n        }\n    })\n  }\n  /* Function Name : updatePersonalFrom\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to update personal info\n  * PARAMS :  \n  */\n\n  updatePersonalFrom() {\n\n    if (this.cvmaxlimitStatus == 0) {\n      this.translate.get(['COMMON.ERROR', 'CV.MAX_CV_MSG'])\n      .subscribe((tdata) => {\n        swal({\n          title: tdata['COMMON.ERROR'],\n          text: tdata['CV.MAX_CV_MSG'],\n          icon: \"error\",\n        })\n      })\n    } else {\n      \n      this.personalForm.submit = true;\n      let formPostData = this.personalForm;\n  \n      this.personalForm.first_name = this.personalForm.first_name.trim();\n      this.personalForm.last_name = this.personalForm.last_name.trim();\n      this.personalForm.email = this.personalForm.email.trim();\n      this.personalForm.mobile_no = this.personalForm.mobile_no.trim();\n      if (\n        !this.personalForm.first_name ||\n        !this.personalForm.last_name ||\n        !this.personalForm.email ||\n        !this.personalForm.mobile_no ||\n        this.personalForm.mobile_no.length != 10 ||\n        !this.personalForm.country_id ||\n        this.personalForm.country_id == '' ||\n        !this.personalForm.city_id ||\n        this.personalForm.city_id == '' ||\n        !this.personalForm.address ||\n        !this.personalForm.dob_year ||\n        !this.personalForm.dob_month ||\n        !this.personalForm.dob_date ||\n        !this.personalForm.address\n  \n  \n      ) {\n        this.personalForm.error = 1;\n      } else {\n        this.personalForm.error = 0;\n      }\n  \n  \n  \n      if (this.personalForm.error == 0) {\n        this.loader.personal.submit = true;\n  \n        let selectedCountry = this.countryList.find((ele) => {\n          return ele.id == this.personalForm.country_id;\n        });\n        this.personalForm['country_name'] = selectedCountry.name;\n  \n        let selectedcity = this.cityList.find((ele) => {\n          return ele.id == this.personalForm.city_id;\n        });\n        this.personalForm['city_name'] = selectedcity.name;\n  \n        this.setCvInfoIntoLocal('personal', this.personalForm);\n        global.SCROLL_TO_TOP();\n        this.loader.personal.submit = false;\n      } else {\n        global.SCROLL_TO_TOP();\n      }\n    }\n\n  }\n  /* Function Name : getCityList\n\t* Author : \n\t* Created Date : 15-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get city list\n\t* PARAMS :  \n\t*/\n  getCityList() {\n    this.cityList = [];\n    // this.personalForm.city_id = null;\n    let countryId = this.personalForm.country_id;\n    this.cService.getCityList(countryId)\n      .subscribe((responseData: any) => {\n        if (responseData.statustext === 'success') {\n          this.cityList = responseData.data;\n        }\n      })\n  }\n  // PERSONAL TAB CLOSE //\n\n\n  /* Function Name : getProjectDetails\n\t* Author : \n\t* Created Date : 14-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get user project details\n\t* PARAMS :  \n  */\n\n  getProjectDetails(isActive=false) {\n    if (localStorage.getItem('_cp') === '/cv/build' && localStorage.getItem('_cvinfo')) {\n      this.saveCvInfoData = JSON.parse(localStorage.getItem('_cvinfo'));\n      this.userProjectlist = this.saveCvInfoData.projects;\n      if (this.userProjectlist.length == 0) {\n        this.userData.projects.forEach(element => {\n          let newData = {\n            \"name\": element.name,\n            \"cId\": element.company_id,\n            \"from\": new Date(element.from_date).getTime(),\n            \"to\": new Date(element.to_date).getTime(),\n            \"company_name\": element.company.company_name\n          } ;\n          this.setCvInfoIntoLocal('projects', newData);\n          this.userProjectlist.push(newData);\n        });\n      }\n    }\n    if(isActive) {\n      if (this.saveCvInfoData.experiences && this.saveCvInfoData.experiences.length > 0) {\n        this.userCompanyList = this.saveCvInfoData.experiences.map((item) => {\n          return {\n            \"id\": item.id,\n            \"name\": item.company_name\n          }\n        });\n      }\n      this.resetProjectForm();\n    }\n\n  }\n\n  /* Function Name : resetProjectForm\n\t* Author : \n\t* Created Date : 14-03-2019 \n\t* Modified Date : *\n\t* Purpose : to reset project form\n\t* PARAMS :  \n  */\n  resetProjectForm() {\n    this.projectForm = {\n      id: null,\n      name: null,\n      cId: null,\n      company_name: null,\n      from: null,\n      to: null,\n      error: 0,\n      submit: false\n    }\n  }\n\n  /* Function Name : submitProjectFrom\n\t* Author : \n\t* Created Date : 14-03-2019 \n\t* Modified Date : *\n\t* Purpose : to submit project form\n\t* PARAMS :  \n  */\n  submitProjectFrom() {\n    this.projectForm.submit = true;\n    this.projectForm.error = 0;\n\n    if (!this.projectForm.name || !this.projectForm.cId || !this.projectForm.from || !this.projectForm.to) {\n      this.projectForm.error = 1;\n    } else {\n      let selectedCompany = this.userCompanyList.find((i)=>{\n        return i.id == this.projectForm.cId;\n      });\n      if (selectedCompany) {\n        this.projectForm.company_name = selectedCompany.name;\n      }\n      let duplicateProject = this.userProjectlist.filter((item)=>{\n        return (\n          item.name == this.projectForm.name &&\n          item.company_name == this.projectForm.company_name \n        );\n      });\n      if (duplicateProject && duplicateProject.length > 0) {\n        this.translate.get(['COMMON.ERROR', 'PROFILEEDIT.DUPLICATE_PROJECT_ERROR' ]).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['PROFILEEDIT.DUPLICATE_PROJECT_ERROR'],\n            icon: 'error'\n          });\n        });\n        this.projectForm.error = 1;\n      }\n    }\n    if (this.projectForm.error == 0) {\n      this.loader.project.submit = true;\n      let newProjectData = this.projectForm;\n      let selectCompany = this.userCompanyList.find((item) => {\n        return item.id == newProjectData.cId;\n      });\n      newProjectData['company_name'] = selectCompany.name;\n\n      newProjectData['from'] = new Date(newProjectData['from']).getTime();\n      newProjectData['to'] = new Date(newProjectData['to']).getTime();\n      this.setCvInfoIntoLocal('projects', newProjectData);\n      this.getProjectDetails();\n      global.SCROLL_TO_TOP();\n      this.loader.project.submit = false;\n    }\n  }\n  /* Function Name : editProject\n\t* Author : \n\t* Created Date : 18-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get  project form data on edit mode\n\t* PARAMS :  project\n  */\n  editProject(project) {\n    this.projectForm = {\n      id: (project.id),\n      name: project.name,\n      cId: project.cId,\n      from: new Date(project.from),\n      to: new Date(project.to),\n      error: 0,\n      submit: false\n    }\n  }\n  /* Function Name : deleteProject\n\t* Author : \n\t* Created Date : 18-03-2019 \n\t* Modified Date : *\n\t* Purpose : to delete a project\n\t* PARAMS :  projectIndex\n  */\n\n  deleteProject(projectIndex) {\n    this.translate.get(['PROFILEEDIT.CONFIRM_TO_DELETE_PROJECT']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: '',\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_PROJECT'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.loader.project.submit = false;\n          this.saveCvInfoData.projects.splice(projectIndex, 1);\n          localStorage.setItem('_cvinfo', JSON.stringify(this.saveCvInfoData));\n          this.getProjectDetails();\n        }\n      })\n    });\n\n  }\n\n  /* Function Name : setCvInfoIntoLocal\n\t* Author : \n\t* Created Date : 18-03-2019 \n\t* Modified Date : *\n\t* Purpose : to push cv data for building\n\t* PARAMS :  type, newData\n  */\n\n  setCvInfoIntoLocal(type, newData) {\n    if (localStorage.getItem('_cp') === '/cv/build' && localStorage.getItem('_cvinfo')) {\n      this.saveCvInfoData = JSON.parse(localStorage.getItem('_cvinfo'));\n    }\n    if (newData && newData['error']) {\n      delete newData['error'];\n    }\n    if (newData && newData['submit']) {\n      delete newData['submit'];\n    }\n    switch (type) {\n      case \"personal\":\n        this.saveCvInfoData.personal = newData;\n        break;\n      case \"cvpic\":\n        this.saveCvInfoData.profilePic = newData;\n        break;\n      case \"education\":\n        if (newData.id) { // edit mode\n          let editDataIndex = this.saveCvInfoData.educations.findIndex((item) => {\n            return item.id == newData.id;\n          });\n          this.saveCvInfoData.educations[editDataIndex] = newData;\n        } else { // add mode\n          newData['id'] = this.saveCvInfoData.educations.length + 1;\n          this.saveCvInfoData.educations.push(newData);\n        }\n        break;\n      case \"skills\":\n        if (newData.id) { // edit mode\n          let editDataIndex = this.saveCvInfoData.skills.findIndex((item) => {\n            return item.id == newData.id;\n          });\n          this.saveCvInfoData.skills[editDataIndex] = newData;\n        } else { // add mode\n          newData['id'] = this.saveCvInfoData.skills.length + 1;\n          this.saveCvInfoData.skills.push(newData);\n        }\n        break;\n      case \"experience\":\n        if (newData.id) { // edit mode\n          let editDataIndex = this.saveCvInfoData.experiences.findIndex((item) => {\n            return item.id == newData.id;\n          });\n          this.saveCvInfoData.experiences[editDataIndex] = newData;\n        } else { // add mode\n          newData['id'] = this.saveCvInfoData.experiences.length + 1;\n          this.saveCvInfoData.experiences.push(newData);\n        }\n\n        break;\n      case \"certificates\":\n        if (newData.id) { // edit mode\n          let editDataIndex = this.saveCvInfoData.certificates.findIndex((item) => {\n            return item.id == newData.id;\n          });\n          this.saveCvInfoData.certificates[editDataIndex] = newData;\n        } else { // add mode\n          newData['id'] = this.saveCvInfoData.certificates.length + 1;\n          this.saveCvInfoData.certificates.push(newData);\n        }\n\n        break;\n      case \"projects\":\n        if (newData.id) { // edit mode\n          let editDataIndex = this.saveCvInfoData.projects.findIndex((item) => {\n            return item.id == newData.id;\n          });\n          this.saveCvInfoData.projects[editDataIndex] = newData;\n        } else { // add mode\n          newData['id'] = this.saveCvInfoData.projects.length + 1;\n          this.saveCvInfoData.projects.push(newData);\n        }\n\n        break;\n\n    }\n    localStorage.setItem('_cvinfo', JSON.stringify(this.saveCvInfoData));\n    if (localStorage.getItem('_cvid')) {\n      this.cvCardService.saveCVData({\n        id: btoa(localStorage.getItem('_cvid')),\n        cvData: localStorage.getItem('_cvinfo')\n      })\n        .subscribe((responseData: any) => {\n          // if (responseData.statustext == 'success'  ) {\n          // }\n        });\n    }\n    this.defineChart();\n  }\n\n  /* Function Name : defineChart\n\t* Author : \n\t* Created Date : 18-03-2019 \n\t* Modified Date : *\n\t* Purpose : to define the complete chart value of cv\n\t* PARAMS :  projectIndex\n  */\n  defineChart() {\n    let cvInfo = JSON.parse(localStorage.getItem('_cvinfo'));\n    var complete = 0;\n    var total = 7;\n    if (cvInfo.personal) {\n      complete += 1;\n    }\n\n    if (cvInfo.profilePic) {\n      complete += 1;\n    }\n\n    if (cvInfo.experiences.length > 0) {\n      complete += 1;\n    }\n\n    if (cvInfo.skills.length > 0) {\n      complete += 1;\n    }\n\n    if (cvInfo.educations.length > 0) {\n      complete += 1;\n    }\n\n    if (cvInfo.certificates.length > 0) {\n      complete += 1;\n    }\n\n    if (cvInfo.projects.length > 0) {\n      complete += 1;\n    }\n\n    this.completePecent = Math.floor((complete * 100) / total);\n\n  }\n\n  /* Function Name : gotToPayment\n\t* Author : \n\t* Created Date : 19-03-2019 \n\t* Modified Date : *\n\t* Purpose : to go to the payment and templating page\n\t* PARAMS :  consultStatus\n  */\n  gotToPayment(consultStatus = null) {\n\n\n    let alertText = '';\n    let errorTranslateErrArr = [];\n    if (!this.saveCvInfoData.personal) {\n      errorTranslateErrArr.push('CV.PERSONAL_REQUIRED');\n    }\n    if (!consultStatus) {\n      if (this.saveCvInfoData.educations.length == 0) {\n        errorTranslateErrArr.push('CV.EDUCATION_REQUIRED');\n      }\n      if (this.saveCvInfoData.skills.length == 0) {\n        errorTranslateErrArr.push('CV.SKILL_REQUIRED');\n      }\n      if (this.saveCvInfoData.experiences.length == 0) {\n        errorTranslateErrArr.push('CV.EXPERIENCE_REQUIRED');\n      }\n      if (this.saveCvInfoData.certificates.length == 0) {\n        errorTranslateErrArr.push('CV.CERTIFICATE_REQUIRED');\n      }\n      if (this.saveCvInfoData.projects.length == 0) {\n        errorTranslateErrArr.push('CV.PROJECT_REQUIRED');\n      }\n    }\n    if (errorTranslateErrArr.length == 0) {\n      if (consultStatus) {\n        if (this.cvmaxlimitStatus == 0) {\n          this.translate.get(['COMMON.ERROR', 'CV.MAX_CV_MSG'])\n          .subscribe((tdata) => {\n            swal({\n              title: tdata['COMMON.ERROR'],\n              text: tdata['CV.MAX_CV_MSG'],\n              icon: \"error\",\n            })\n          })\n        } else {\n          localStorage.setItem('_cvt', 'consult');\n          this.route.navigate(['/cv/pay']);\n        }\n      } else {\n        this.route.navigate(['/cv/pay']);\n      }\n    } else {\n      this.translate.get(errorTranslateErrArr).subscribe((tData) => {\n        for (let i in tData) {\n          alertText += \"* \" + tData[i] + '<br/>';\n\n        }\n        this.alertPopupMsg.message = alertText;\n        this.modalService.open(this.alertPopup, { size: 'sm', centered: true, windowClass: 'DefaultModal' });\n      });\n    }\n\n\n\n\n  }\n}\n","module.exports = \"<div class=\\\"proEdit forAllInvitations\\\">\\n  <h2 class=\\\"withLine\\\"><span>{{\\\"CV.CONSULT\\\" | translate}}</span></h2>\\n\\n  <div class=\\\"inviteBlock messages-list-container\\\">\\n    <div class=\\\"inviteBlockTop clearfix\\\" >\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n          <p>{{ cvDetails?.cv_name }}</p>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n          <div class=\\\"text-right\\\">\\n            <p>\\n              <a class=\\\"anchor-common\\\" (click)=\\\"sendMessage()\\\"><span>{{\\\"CV.SEND_MESSAGE\\\" | translate}}</span></a> &nbsp; | &nbsp;\\n              <a class=\\\"anchor-common\\\" routerLink=\\\"/profile/edit\\\"><span>{{\\\"CV.GO_TO_LIST\\\" | translate}}</span></a>\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">{{ successMessage }}</div>\\n    <p *ngIf=\\\"loader.list\\\" class=\\\"text-center\\\">\\n        <i class=\\\"fa fa-cog fa-spin\\\" ></i> \\n    </p>\\n    <div *ngIf=\\\"cvCommentList.length > 0\\\">\\n      <div class=\\\"inviteBlockSingle alt\\\" *ngFor=\\\"let comment of cvCommentList; let i = index\\\"\\n        [ngClass]=\\\"((i%2!=0)?'noBg':'')\\\">\\n\\n        <h3>{{ ((comment.post_by_admin == 0)? 'CV.ME' : 'CV.CONSULTANT') | translate }}\\n\\n            <span>{{ (comment.posted_on*1000)| amTimeAgo:true }} {{ 'NOTIFICATIONS.AGO' |translate }}</span>\\n        </h3>\\n\\n        <p class=\\\"tXt\\\">{{ comment.message }}</p>\\n        <p class=\\\"attach\\\" *ngIf=\\\"comment.cv_file\\\">\\n          <a href=\\\"{{ comment.cv_file| picturepath:'cv' }}\\\" target=\\\"_blank\\\" class=\\\"comment-btn green\\\">{{ 'CV.REVIEW'| translate }}</a>\\n          <a *ngIf=\\\"!comment.is_refuse && (refuseCount.settings > refuseCount.cv)\\\" class=\\\"comment-btn\\\"\\n            (click)=\\\"refuseCv(comment)\\\">{{\\\"CV.REFUSE\\\" | translate}}</a>\\n        </p>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<!-- tell us reasone model start -->\\n<ng-template #refuseModal let-modal>\\n  <h2><span>{{ popupContent.header |translate }}</span></h2>\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body\\\">\\n    <div>\\n      <div class=\\\"alert alert-success\\\" *ngIf=\\\"refuseSuccessMessage\\\">{{ refuseSuccessMessage }}</div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"refuseErrorMessage\\\">{{ refuseErrorMessage }}</div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"popupForm.submit && !popupForm.comment\\\">\\n        {{ 'CV.COMMENT_REQUIRED'  |translate }}</div>\\n    </div>\\n\\n    <div class=\\\"proEdit\\\">\\n      <div class=\\\"formWrap alt\\\">\\n        <textarea class=\\\"inpField fullWidth\\\" [(ngModel)]=\\\"popupForm.comment\\\"\\n          placeholder=\\\"{{ popupContent.placeholder |translate }}\\\"></textarea>\\n      </div>\\n      <div class=\\\"buttonGr\\\">\\n        <div class=\\\"text-center\\\">\\n          <button type=\\\"button\\\" class=\\\"btnOrange\\\" name=\\\"button\\\"\\n            (click)=\\\"submitMessageFrom()\\\" [disabled]=\\\"loader.popupSubmit\\\"> <i class=\\\"fa fa-cog fa-spin\\\" *ngIf=\\\"loader.popupSubmit\\\"></i> {{ 'CV.POST' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N2YnVpbGRlci9jdm1lc3NhZ2VzL2N2bWVzc2FnZXMuY29tcG9uZW50LnNjc3MifQ== */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 28-03-2019\n# Module                : CvmessagesComponent                     \n# Object name           : CvmessagesComponent    \n# Functionality         : All cv building payment operations\n# Purpose               : constructor, ngOnInit, refuseCv\n*******************************************************/\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CvcardService} from '../../services/cvcard.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport {CommonService} from '../../services/common.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-cvmessages',\n  templateUrl: './cvmessages.component.html',\n  styleUrls: ['./cvmessages.component.scss']\n})\nexport class CvmessagesComponent implements OnInit {\n  @ViewChild('refuseModal') refuseModal;// for alert popup\n  cvId : any = null;\n  cvCommentList: Array<any> = [];\n  cvDetails: any = {};\n  refuseCount : any = {\n    settings: 0,\n    cv: 0\n  };\n  successMessage: any = '';\n  refuseSuccessMessage: any = '';\n  refuseErrorMessage: any = '';\n  popupForm: any = {\n    type:'',\n    id : null,\n    comment: '',\n    submit: false\n  };\n  popupContent :any =  {\n    header : '',\n    placeholder: ''\n  };\n  loader:any = {\n    popupSubmit : false,\n    list:false\n  };\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 28-03-2019 \n\t* Modified Date : *\n\t* Purpose : to assign the helpfull obj\n\t* PARAMS :  \n  */\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private cvService: CvcardService,\n    private translate: TranslateService,\n    private cService:CommonService,\n    private modalService: NgbModal\n    ) {\n    this.activatedRoute.params.subscribe((params)=>{\n      if (params.id) {\n        this.cvId = params.id; \n      }\n    });\n    this.cService.activelang.subscribe((lang)=>{\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n  }\n/* Function Name : ngOnInit\n\t* Author : \n\t* Created Date : 28-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get teh content of cv template \n\t* PARAMS :  \n  */\n  ngOnInit() {\n    this.getCommentList();\n  }\n\n  getCommentList() {\n    this.loader.list = true;\n    this.cvService.getUserCvComments(this.cvId)\n    .subscribe((responseData:any)=>{\n      this.loader.list = false;\n      if (responseData.statustext == 'success') {\n        this.cvCommentList = responseData.data.list;\n        this.refuseCount.settings = responseData.data.cpRefuseCount;\n        this.refuseCount.cv = responseData.data.cvRefuseCount;\n        this.cvDetails = responseData.data.cv;\n      }\n    });\n  }\n/* Function Name : refuseCv\n\t* Author : \n\t* Created Date : 28-03-2019 \n\t* Modified Date : *\n\t* Purpose : open modal to refuse a cv \n\t* PARAMS :  comment\n  */\n  refuseCv(comment) {\n    this.popupForm.id = comment.id;\n    this.popupForm.type = 'refuse';\n    this.popupContent.header = 'PROFILE.TELL_ME_WHY';\n    this.popupContent.placeholder = 'CV.COMMENT_PLACEHOLDER';\n    if ((this.refuseCount.settings-this.refuseCount.cv) == 1) {\n      this.translate.get('CV.REFUSE_CONFIRM_MESSAGE')\n      .subscribe((tData)=>{\n        swal({\n          title: '',\n          text: tData,\n          icon: \"warning\",\n          buttons: {\n            cancel: true,\n            confirm: true,\n          },\n        }).then((willDelete) => {\n          if (willDelete) {\n            this.modalService.open(this.refuseModal, { backdrop: 'static',keyboard: false, size: 'lg', centered: true, windowClass: 'DefaultModal' });\n          }\n        })\n      })\n      \n    } else {\n      this.modalService.open(this.refuseModal, { backdrop: 'static',keyboard: false, size: 'lg', centered: true, windowClass: 'DefaultModal' });\n    }\n    \n  }\n/* Function Name : submitMessageFrom\n\t* Author : \n\t* Created Date : 28-03-2019 \n\t* Modified Date : *\n\t* Purpose : to refuse a cv\n\t* PARAMS :  comment\n  */\n submitMessageFrom() {\n    this.popupForm.submit = true;\n    if (this.popupForm.comment)  {\n      let popupaction = null;\n      if (this.popupForm.type == 'refuse') {\n        popupaction = this.cvService.saveRefuseReason({\n          id : btoa(this.popupForm.id),\n          comment : this.popupForm.comment\n        });\n      } else if(this.popupForm.type == 'send_message') {\n        popupaction = this.cvService.sendMessage({\n          id : btoa(this.popupForm.id),\n          comment : this.popupForm.comment\n        })\n      }\n      \n      if (popupaction) {\n        this.loader.popupSubmit = true;\n        popupaction.subscribe((responseData:any)=>{\n          if (responseData.statustext == 'success') {\n            this.refuseSuccessMessage = responseData.message;\n            this.popupForm = {\n              type:'',\n              id : null,\n              comment: '',\n              submit: false,\n              loader:false\n            };\n            \n            this.getCommentList();\n            \n          } else {\n            this.refuseErrorMessage = responseData.message;\n          }\n          this.loader.popupSubmit = false;\n          setTimeout(()=>{\n            this.refuseSuccessMessage = '';\n            this.refuseErrorMessage = '';\n          },3000);\n        });\n      }\n    }\n  }\n  /* Function Name : sendMessage\n\t* Author : \n\t* Created Date : 02-04-2019 \n\t* Modified Date : *\n\t* Purpose : open modal to to send message \n\t* PARAMS :  \n  */\n  sendMessage() {\n    this.popupForm.id = this.cvId;\n    this.popupForm.type = 'send_message';\n    this.popupContent.header = 'CV.SEND_MESSAGE';\n    this.popupContent.placeholder = 'CV.MESSAGE_PLACEHOLDER';\n    this.modalService.open(this.refuseModal, { backdrop: 'static',keyboard: false, size: 'lg', centered: true, windowClass: 'DefaultModal' });    \n  }\n}\n","module.exports = \"<div class=\\\"proEdit forCardBuilder\\\" *ngIf=\\\"!this.alertPopupMsg.detailsMessage\\\">\\n  <div class=\\\"formWrap withSelect\\\">\\n    <h2 class=\\\"withLine\\\">\\n      <span *ngIf=\\\"!cvDetails\\\">{{ 'CV.CHOOSE_TEMPLATE'|translate }}</span>\\n      <span *ngIf=\\\"cvDetails\\\">{{ 'CV.CHANGE_TEMPLATE'|translate }}</span>\\n    </h2>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"cvGenerateError\\\">{{ cvGenerateError }}</div>\\n    <span class=\\\"selectAbs\\\">\\n      <select class=\\\"inpField\\\" name=\\\"\\\" [(ngModel)]=\\\"activeCurrency\\\" (change)=\\\"setActiveCurrency()\\\">\\n        <option value=\\\"\\\">{{ 'CV.CURRENCY'|translate }}</option>\\n        <option *ngFor=\\\"let currency of currencyList\\\" [value]=\\\"currency.name\\\">{{ currency.name }}</option>\\n      </select>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"cardSelect\\\">\\n    <p class=\\\"loader-p\\\" *ngIf=\\\"loader.template\\\">\\n      <i class=\\\"fa fa-cog fa-spin\\\"></i>\\n    </p>\\n    \\n  </div>\\n\\n  <div class=\\\"cardSelect carouselNext\\\">\\n    <div class=\\\"cardSelectRow alt\\\" *ngIf=\\\"templateList.length > 0\\\">\\n      <owl-carousel [options]=\\\"myCarouselOptions\\\" [carouselClasses]=\\\"['owl-theme', 'sliding']\\\" >\\n       <div class=\\\"item\\\"  *ngFor=\\\"let template of templateList\\\">\\n        <div class=\\\"singleCardSelect\\\" [class.active]=\\\"activeTemplate==template.id\\\"\\n        (click)=\\\"setActiveTemplate(template)\\\">\\n          <img src=\\\"{{ template.picture | picturepath:'templates' }}\\\" alt=\\\"\\\">\\n          <div class=\\\"cardTxt\\\" *ngIf=\\\"template.price>0\\\">\\n\\n            <span>{{ activeCurrenySymbol }}</span>\\n            {{ priceConversionRate*template.price }}\\n          </div>\\n          <div class=\\\"cardTxt\\\" *ngIf=\\\"template.price==0\\\">\\n            {{ 'CV.FREE'|translate }}\\n          </div>\\n        </div>\\n       </div>\\n       </owl-carousel>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"cardForm\\\">\\n    <div class=\\\"formWrap\\\">\\n      <input class=\\\"inpField withBdr fullWidth noBg\\\" [(ngModel)]=\\\"cvForm.name\\\" name=\\\"cvName\\\"\\n        placeholder=\\\"{{ 'CV.CV_NAME'| translate }}\\\">\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"cvForm.submit && !cvForm.name\\\">{{ 'CV.CV_NAME_REQUIRED'| translate }}</div>\\n    </div>\\n    <div class=\\\"formWrap\\\">\\n      <textarea class=\\\"inpField withBdr fullWidth noBg\\\" [(ngModel)]=\\\"cvForm.comment\\\" name=\\\"cvComment\\\"\\n        placeholder=\\\"{{ 'CV.CV_DESCRIPTION'| translate }}\\\"></textarea>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"cvForm.submit && !cvDetails && !cvForm.comment && cvType == 'consult'\\\">{{ 'CV.CV_COMMENT_REQUIRED'| translate }}\\n      </div>\\n    </div>\\n\\n    <!-- <div class=\\\"row justify-content-center\\\">\\n\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"loader-container pay\\\" *ngIf=\\\"loader.pay\\\">\\n          <div class=\\\"loader-content\\\" >\\n            <i class=\\\"fa fa-cog fa-spin\\\"></i><br />\\n            {{ 'CV.TRANSACTION_LOAD_MSG' | translate }}\\n          </div>\\n        </div>\\n        <div class=\\\"paymentOpt\\\">\\n          <div class=\\\"alert alert-danger text-center\\\"\\n            *ngIf=\\\"cvForm.submit && cvType == 'consult' && cvForm.payStatus==false\\\">\\n            {{ 'CV.CV_PAYMENT_REQUIRED'| translate }}</div>\\n\\n            <div class=\\\"alert alert-success text-center\\\"\\n            *ngIf=\\\"payForm.successMsg\\\">{{ payForm.successMsg }}</div>\\n\\n            <div class=\\\"alert alert-danger text-center\\\"\\n            *ngIf=\\\"payForm.errorMsg\\\">{{ payForm.errorMsg }}</div>\\n\\n          <div class=\\\"formWrap inlineAll\\\">\\n            <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.PAY_ACCEPTED_CARD'| translate }} :</label>\\n            <span><img src=\\\"assets/images/card.png\\\" alt=\\\"\\\"></span>\\n          </div>\\n          <div class=\\\"formWrap\\\">\\n            <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.PAY_CARD_HOLDER_NAME'| translate }} :</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"payForm.cardHolderName\\\" name=\\\"cardHolderName\\\"\\n              class=\\\"col-xl-8 inpField fullWidth\\\" value=\\\"\\\">\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"payForm.submit && !payForm.cardHolderName\\\">{{ 'CV.PAY_NAME_REQUIRED'| translate }}\\n                </div>\\n          </div>\\n          <div class=\\\"formWrap\\\">\\n            <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.PAY_CARD_NUMBER'| translate }} :</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"payForm.cardNumber\\\" name=\\\"cardNumber\\\" class=\\\"col-xl-8 inpField fullWidth\\\"\\n              value=\\\"\\\" maxlength=\\\"16\\\" (keydown)=\\\"onlyNumberCheck($event)\\\">\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"payForm.submit && !payForm.cardNumber\\\">{{ 'CV.PAY_CARD_REQUIRED'| translate }}\\n                </div>\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"payForm.submit && payForm.cardNumber && payForm.cardNumber.length != 16\\\">{{ 'CV.PAY_CARD_LENGTH'| translate }}\\n                  </div>\\n          </div>\\n          <div class=\\\"formWrap inlineAll\\\">\\n            <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.PAY_EXP_DATE'| translate }} :</label>\\n            \\n            <select class=\\\"inpField autoWidth withSpace\\\" [(ngModel)]=\\\"payForm.expMonth\\\" name=\\\"expMonth\\\">\\n              <option *ngFor=\\\"let month of months\\\" value=\\\"{{ month }}\\\">{{ ((month<10)?'0'+month:month) }}</option>\\n            </select>\\n            \\n\\n            <select class=\\\"inpField autoWidth withSpace\\\" [(ngModel)]=\\\"payForm.expYear\\\" name=\\\"expYear\\\">\\n              <option *ngFor=\\\"let year of years\\\" value=\\\"{{ year }}\\\">{{ year }}</option>\\n            </select>\\n            \\n            \\n            <label for=\\\"\\\" >CVV :</label>\\n            <input class=\\\"inpField cvcInp\\\" type=\\\"text\\\" [(ngModel)]=\\\"payForm.cvvCode\\\" name=\\\"cvvCode\\\" value=\\\"\\\" maxlength=\\\"3\\\" pattern= \\\"[0-9]\\\" (keydown)=\\\"onlyNumberCheck($event)\\\">\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"payForm.submit && !payForm.cvvCode\\\">{{ 'CV.PAY_CVV_REQUIRED'| translate }}\\n                </div>\\n            \\n          </div>\\n          <div class=\\\"formWrap alt\\\">\\n            <div class=\\\"text-center\\\">\\n              <input class=\\\"submBtn\\\" type=\\\"submit\\\" name=\\\"\\\" (click)=\\\"resetPayForm()\\\" value=\\\"{{ 'CV.CANCEL'| translate }}\\\">\\n              <input class=\\\"submBtn black\\\" type=\\\"submit\\\" name=\\\"\\\" value=\\\"{{ 'CV.PAY'| translate }}\\\" (click)=\\\"submitPayForm()\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div> -->\\n\\n  </div>\\n\\n  <div class=\\\"buttonGr\\\">\\n    <div class=\\\"row\\\">\\n      <!-- <div class=\\\"col-6\\\">\\n        <a class=\\\"btnWhite\\\" href=\\\"#\\\">Help Me To Creat My CV</a>\\n      </div> -->\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"text-right\\\">\\n          <a id=\\\"finishCVBtn\\\"></a>\\n          <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"gobackToCVUpdate()\\\" [disabled]=\\\"loader.pay\\\"><i aria-hidden=\\\"true\\\" class=\\\"fa fa-arrow-left\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n          <button class=\\\"btnGreen\\\" name=\\\"button\\\" (click)=\\\"generateCV($event)\\\" [disabled]=\\\"loader.pay\\\">{{ 'COMMON.FINISH'|translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n<ng-template #alertPopup let-modal>\\n  <!-- <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span> -->\\n  <div class=\\\"modal-body\\\" style=\\\"text-align:center\\\">\\n    {{alertPopupMsg.message}}\\n    {{ alertPopupMsg.detailsMessage }}\\n    <div class=\\\"profileDesc\\\" *ngIf=\\\"alertPopupMsg.page && alertPopupMsg.page == 'cv_build'\\\">\\n      <a class=\\\"modBtn\\\" [routerLink]=\\\"['/cv/build']\\\">{{ 'CV.CV_BUILD'|translate }}</a>\\n    </div>\\n  </div>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N2YnVpbGRlci9wYXltZW50L3BheW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 22-03-2019\n# Module                : PaymentComponent                     \n# Object name           : PaymentComponent    \n# Functionality         : All cv building payment operations\n# Purpose               : constructor, ngOnInit, gobackToCVUpdate, setActiveTemplate, setActiveCurrency, generateCV\n*******************************************************/\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport {CommonService} from '../../services/common.service';\nimport {CvcardService} from '../../services/cvcard.service';\nimport * as global from '../../globalConfig';\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss']\n})\nexport class PaymentComponent implements OnInit {\n  @ViewChild('alertPopup') alertPopup;// for alert popup\n  myCarouselOptions = {items: 5, margin:24, dots: false, nav: true, responsive:{ 0: {items:1}, 415:{items:2}, 767:{items:3}, 1023:{items:4}, 1199:{items:5}}};\n  templateList:Array<any> = [];\n  priceConversionRate: any = 1;\n  currencyList:Array<any> = [];\n  currencySymbols:any = {\n    \"USD\":\"$\",\n    \"EGP\":\"£\",\n    \"AED\":\"د.إ\",\n    \"SAR\":\"ر.س\"\n  }\n  activeCurrency:any =  'USD';\n  activeCurrenySymbol:any = '$';\n  activeTemplate:any = null;\n  activeTemplatePrice:any = 0;\n  loader : any = {\n    template: false,\n    pay:false,\n  }\n  cvGenerateError: any = '';\n  alertPopupMsg: any = {\n    detailsMessage:'',\n    message : '',\n    page : ''\n  };\n  cvForm: any = {\n    name : '',\n    comment: '',\n    payStatus:false,\n    submit: false\n  }\n  cvName: any = '';\n  cvConsultComment: any = null;\n  cvType:any = '';\n  years:Array<any> = [];\n  months:Array<any> = [];\n  currentYear:any = new Date().getFullYear();\n  payForm: any = {\n    \"cardHolderName\":'',\n    \"cardNumber\":'',\n    \"expMonth\":1,\n    \"expYear\":'',\n    \"cvvCode\":'',\n    \"submit\":false,\n    \"successMsg\":\"\",\n    \"errorMsg\":\"\",\n  };\n  cvDetails : any = null;\n  \n  /* Function Name : constructor\n\t* Author :\n\t* Created Date : 19-03-2019\n\t* Modified Date : *\n\t* Purpose : to assign the helpfull obj\n\t* PARAMS :\n  */\n  constructor(\n    private route :Router,\n    private translate: TranslateService,\n    private cvCardService:CvcardService,\n    private cService:CommonService,\n    private modalService: NgbModal,\n  ) {\n    this.cService.activelang.subscribe((lang)=>{\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n  }\n  /* Function Name : ngOnInit\n\t* Author :\n\t* Created Date : 19-03-2019\n\t* Modified Date : *\n\t* Purpose : to get teh content of cv template\n\t* PARAMS :\n  */\n  ngOnInit() {\n\n    this.payForm.expYear = this.currentYear;\n    for (let y = this.currentYear ; y< this.currentYear+100; y++) {\n      this.years.push(y);\n    }\n    for (let m = 1; m<=12; m++) {\n      this.months.push(m);\n    }\n\n    this.cvType = localStorage.getItem('_cvt');\n    let cvContent = localStorage.getItem('_cvinfo');\n    let cvError = 0;\n    if (!cvContent) {\n      cvError = 1;\n    } else {\n      cvContent = JSON.parse(cvContent);\n      if (cvContent['personal'] == null) {\n        cvError = 1;\n      }\n    }\n    if (cvError == 1) {\n      this.translate.get('CV.CHECK_CV_DETAILS_ERROR')\n      .subscribe((tData)=>{\n        this.alertPopupMsg.detailsMessage = tData;\n        this.alertPopupMsg.page = 'cv_build';\n        this.modalService.open(this.alertPopup, { backdrop: 'static',keyboard: false, size: 'sm', centered: true, windowClass: 'DefaultModal' });\n      });\n    } else {\n      this.alertPopupMsg.detailsMessage = '';\n      this.alertPopupMsg.message = '';\n      this.alertPopupMsg.page = '';\n      this.loader.template = true;\n      this.cvCardService.getTemplateList({\n        type:1\n      })\n      .subscribe((responseData:any)=>{\n        if (responseData.statustext == 'success'){\n          this.templateList = responseData.data;\n        }\n        this.loader.template = false;\n      });\n\n      this.cvCardService.getCurrencyList()\n      .subscribe((responseData:any)=>{\n        if (responseData.statustext == 'success') {\n          this.currencyList = responseData.data;\n        }\n\n      });\n      let cvId = localStorage.getItem('_cvid');\n      if (cvId) {\n        this.cvCardService.getCvDetails(cvId)\n        .subscribe((responseData:any)=>{\n          if (responseData.statustext == 'success') {\n            this.cvDetails = responseData.data;\n            this.setActiveTemplate(this.cvDetails.template);\n            this.cvForm.name = this.cvDetails.cv_name;\n          }\n        });\n      }\n    }\n  }\n  /* Function Name : gobackToCVUpdate\n\t* Author :\n\t* Created Date : 19-03-2019\n\t* Modified Date : *\n\t* Purpose : to go back to cv edit page\n\t* PARAMS :\n  */\n  gobackToCVUpdate() {\n    this.route.navigate(['/cv/build']);\n  }\n  /* Function Name : setActiveTemplate\n\t* Author :\n\t* Created Date : 19-03-2019\n\t* Modified Date : *\n\t* Purpose : to set the active template;\n\t* PARAMS :  template\n  */\n  setActiveTemplate(template) {\n    this.activeTemplate = template.id;\n    this.activeTemplatePrice = this.priceConversionRate*template.price;\n    if (template.price == 0) {\n      this.cvForm.payStatus = true;\n    } else {\n      this.cvForm.payStatus = false;\n    }\n    this.cvForm.submit = false;\n    this.cvGenerateError = '';\n  }\n  /* Function Name : setActiveCurrency\n\t* Author :\n\t* Created Date : 19-03-2019\n\t* Modified Date : *\n\t* Purpose : to set active currency\n\t* PARAMS :\n  */\n  setActiveCurrency() {\n    let activeCurrency = this.currencyList.find((item)=>{\n      return item.name === this.activeCurrency;\n    });\n    this.priceConversionRate = activeCurrency.value;\n    this.activeCurrenySymbol = this.currencySymbols[activeCurrency.name];\n  }\n  /* Function Name : generateCV\n\t* Author :\n\t* Created Date : 25-03-2019\n\t* Modified Date : *\n\t* Purpose : to generate the cv\n\t* PARAMS :\n  */\n  generateCV(event) {\n    this.cvForm.submit = true;\n    this.cvForm.payStatus = true;\n    let cvType  = 0;\n    if (this.cvType == 'consult') {\n      cvType = 1;\n    }\n    \n    let errorCount = 0;\n    if (!this.activeTemplate) {\n      this.translate.get('CV.SELECT_CV_ERR')\n      .subscribe((tData)=>{\n        errorCount +=1;  \n        this.cvGenerateError = tData;\n      });\n    }\n    if (!this.cvForm.name) {\n      errorCount +=1;\n    }\n    if (!this.cvDetails && this.cvType == 'consult'  && !this.cvForm.comment) {\n        errorCount +=1;\n    }\n    if (!this.cvDetails && this.cvType == 'consult' && this.cvForm.payStatus == false) { //only add mode\n      errorCount += 1;\n    } else if (this.cvDetails && this.cvDetails.template_id != this.activeTemplate && this.cvType == 'consult' && this.cvForm.payStatus == false) {\n      errorCount += 1;\n      this.cvForm.payStatus = false;\n    }\n\n    if (errorCount == 0) {\n      let cvContent = localStorage.getItem('_cvinfo');\n      \n\n      let postData = {\n        \"cvType\": cvType,\n        \"cvData\": cvContent,\n        \"name\": this.cvForm.name,\n        \"comment\": this.cvForm.comment,\n        \"templateId\": this.activeTemplate,\n        \"templatePrice\": this.activeTemplatePrice,\n        \"paymentStatus\": Number(this.cvForm.payStatus)\n      };\n      // console.log(postData);\n      // return false;\n\n      if (this.cvDetails) { // edit mode\n        postData['id'] = btoa(this.cvDetails.id);\n        this.cvCardService.saveCVData(postData)\n        .subscribe((responseData:any)=>{\n          if (responseData.statustext == 'success'  ) {\n            setTimeout(()=>{\n              this.route.navigate(['/cv/success', responseData.data.token]);\n            },1000);\n          }\n        });\n      } else { // add mode\n\n        this.cvCardService.sendCVGenerateRequest(postData)\n        .subscribe((responseData:any)=>{\n          if (responseData.statustext == 'success'  ) {\n            setTimeout(()=>{\n              this.route.navigate(['/cv/success', responseData.data.token]);\n            },1000);\n          }\n        });\n      }\n    } else {\n      global.SCROLL_TO_TOP();\n    }\n    \n  }\n\n  submitPayForm()\n  {\n    this.payForm.submit = true;\n    // this.loader.pay = true;\n    let errorCount = 0;\n    if (!this.payForm.cardHolderName) {\n      errorCount += 1;\n    }\n    if (!this.payForm.cardNumber) {\n      errorCount += 1;\n    }\n    if (!this.payForm.cvvCode) {\n      errorCount += 1;\n    }\n\n    if (errorCount == 0) {\n      this.loader.pay = true;\n      setTimeout(()=>{\n        this.payForm = {\n          \"cardHolderName\":'',\n          \"cardNumber\":'',\n          \"expMonth\":1,\n          \"expYear\":this.currentYear,\n          \"cvvCode\":'',\n          \"submit\":false\n        };\n        this.loader.pay = false;\n        this.cvForm.payStatus = true;\n        this.payForm.successMsg = 'Payment is completed, Now you can continue';\n        setTimeout(()=>{\n          this.payForm.successMsg = '';\n        },5000);\n\n      },5000);\n    }\n  }\n\n  resetPayForm() {\n    this.payForm = {\n      \"cardHolderName\":'',\n      \"cardNumber\":'',\n      \"expMonth\":1,\n      \"expYear\":this.currentYear,\n      \"cvvCode\":'',\n      \"successMsg\":\"\",\n      \"errorMsg\":\"\",\n      \"submit\":false\n    };\n  }\n\n  onlyNumberCheck(e) {\n    if ((e.keyCode >= 96 && e.keyCode<=105) || \n      (e.keyCode >= 48 && e.keyCode<=57) || \n      (e.keyCode >= 37 && e.keyCode<=40) || \n      e.keyCode==8) { \n      return true;\n    } \n    else { \n      e.preventDefault(); \n    }\n  }\n\n}\n"],"sourceRoot":""}