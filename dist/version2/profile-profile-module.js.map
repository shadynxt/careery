{"version":3,"sources":["webpack:///./node_modules/ng-circle-progress/index.js","webpack:///./src/app/profile/all-invitations/all-invitations.component.html","webpack:///./src/app/profile/all-invitations/all-invitations.component.scss","webpack:///./src/app/profile/all-invitations/all-invitations.component.ts","webpack:///./src/app/profile/all-recommendations/all-recommendations.component.html","webpack:///./src/app/profile/all-recommendations/all-recommendations.component.scss","webpack:///./src/app/profile/all-recommendations/all-recommendations.component.ts","webpack:///./src/app/profile/blocks/blocks.component.html","webpack:///./src/app/profile/blocks/blocks.component.scss","webpack:///./src/app/profile/blocks/blocks.component.ts","webpack:///./src/app/profile/cardbuilder/cardbuilder.component.html","webpack:///./src/app/profile/cardbuilder/cardbuilder.component.scss","webpack:///./src/app/profile/cardbuilder/cardbuilder.component.ts","webpack:///./src/app/profile/cardbuildersuccess/cardbuildersuccess.component.html","webpack:///./src/app/profile/cardbuildersuccess/cardbuildersuccess.component.scss","webpack:///./src/app/profile/cardbuildersuccess/cardbuildersuccess.component.ts","webpack:///./src/app/profile/changepassword/changepassword.component.html","webpack:///./src/app/profile/changepassword/changepassword.component.scss","webpack:///./src/app/profile/changepassword/changepassword.component.ts","webpack:///./src/app/profile/chat-history/chat-history.component.html","webpack:///./src/app/profile/chat-history/chat-history.component.scss","webpack:///./src/app/profile/chat-history/chat-history.component.ts","webpack:///./src/app/profile/connections/connections.component.html","webpack:///./src/app/profile/connections/connections.component.scss","webpack:///./src/app/profile/connections/connections.component.ts","webpack:///./src/app/profile/controllpanelsettings/controllpanelsettings.component.html","webpack:///./src/app/profile/controllpanelsettings/controllpanelsettings.component.scss","webpack:///./src/app/profile/controllpanelsettings/controllpanelsettings.component.ts","webpack:///./src/app/profile/lifetime/lifetime.component.html","webpack:///./src/app/profile/lifetime/lifetime.component.scss","webpack:///./src/app/profile/lifetime/lifetime.component.ts","webpack:///./src/app/profile/list/list.component.html","webpack:///./src/app/profile/list/list.component.scss","webpack:///./src/app/profile/list/list.component.ts","webpack:///./src/app/profile/myblocklist/myblocklist.component.html","webpack:///./src/app/profile/myblocklist/myblocklist.component.scss","webpack:///./src/app/profile/myblocklist/myblocklist.component.ts","webpack:///./src/app/profile/notifications/notifications.component.html","webpack:///./src/app/profile/notifications/notifications.component.scss","webpack:///./src/app/profile/notifications/notifications.component.ts","webpack:///./src/app/profile/notificationsettings/notificationsettings.component.html","webpack:///./src/app/profile/notificationsettings/notificationsettings.component.scss","webpack:///./src/app/profile/notificationsettings/notificationsettings.component.ts","webpack:///./src/app/profile/privacysettings/privacysettings.component.html","webpack:///./src/app/profile/privacysettings/privacysettings.component.scss","webpack:///./src/app/profile/privacysettings/privacysettings.component.ts","webpack:///./src/app/profile/profile-routing.module.ts","webpack:///./src/app/profile/profile.guard.ts","webpack:///./src/app/profile/profile.module.ts","webpack:///./src/app/profile/profileedit/profileedit.component.html","webpack:///./src/app/profile/profileedit/profileedit.component.scss","webpack:///./src/app/profile/profileedit/profileedit.component.ts","webpack:///./src/app/profile/profileview/profileview.component.html","webpack:///./src/app/profile/profileview/profileview.component.scss","webpack:///./src/app/profile/profileview/profileview.component.ts","webpack:///./src/app/profile/publicprofile/publicprofile.component.html","webpack:///./src/app/profile/publicprofile/publicprofile.component.scss","webpack:///./src/app/profile/publicprofile/publicprofile.component.ts","webpack:///./src/app/profile/seemorenotifications/seemorenotifications.component.html","webpack:///./src/app/profile/seemorenotifications/seemorenotifications.component.scss","webpack:///./src/app/profile/seemorenotifications/seemorenotifications.component.ts","webpack:///./src/app/profile/testimonial/testimonial.component.html","webpack:///./src/app/profile/testimonial/testimonial.component.scss","webpack:///./src/app/profile/testimonial/testimonial.component.ts","webpack:///./src/app/services/testimonial.service.ts","webpack:///./src/app/setupprofile.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAClC;AAClB;;AAE7B;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE,cAAc;AAC3C;AACA,2BAA2B,EAAE,kBAAkB;AAC/C;AACA,2BAA2B,EAAE;AAC7B;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA,uCAAuC,uDAAuD;AAC9F;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA,0CAA0C,uDAAuD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,sBAAsB,EAAE,qBAAqB,EAAE;AAC5E,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2CAA2C,kDAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2CAA2C,kDAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;A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","file":"profile-profile-module.js","sourcesContent":["import { Component, EventEmitter, Input, NgModule, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { timer } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\n\r\nvar CircleProgressOptions = /** @class */ (function () {\r\n    function CircleProgressOptions() {\r\n        this.class = '';\r\n        this.backgroundColor = 'transparent';\r\n        this.backgroundOpacity = 1;\r\n        this.backgroundStroke = 'transparent';\r\n        this.backgroundStrokeWidth = 0;\r\n        this.backgroundPadding = 5;\r\n        this.percent = 0;\r\n        this.radius = 90;\r\n        this.space = 4;\r\n        this.toFixed = 0;\r\n        this.maxPercent = 1000;\r\n        this.renderOnClick = true;\r\n        this.units = '%';\r\n        this.unitsFontSize = '10';\r\n        this.unitsColor = '#444444';\r\n        this.outerStrokeWidth = 8;\r\n        this.outerStrokeColor = '#78C000';\r\n        this.outerStrokeLinecap = 'round';\r\n        this.innerStrokeColor = '#C7E596';\r\n        this.innerStrokeWidth = 4;\r\n        this.titleFormat = undefined;\r\n        this.title = 'auto';\r\n        this.titleColor = '#444444';\r\n        this.titleFontSize = '20';\r\n        this.subtitleFormat = undefined;\r\n        this.subtitle = 'progress';\r\n        this.subtitleColor = '#A9A9A9';\r\n        this.subtitleFontSize = '10';\r\n        this.imageSrc = undefined;\r\n        this.imageHeight = undefined;\r\n        this.imageWidth = undefined;\r\n        this.animation = true;\r\n        this.animateTitle = true;\r\n        this.animateSubtitle = false;\r\n        this.animationDuration = 500;\r\n        this.showTitle = true;\r\n        this.showSubtitle = true;\r\n        this.showUnits = true;\r\n        this.showImage = false;\r\n        this.showBackground = true;\r\n        this.showInnerStroke = true;\r\n        this.clockwise = true;\r\n        this.responsive = false;\r\n        this.startFromZero = true;\r\n    }\r\n    return CircleProgressOptions;\r\n}());\r\nvar CircleProgressComponent = /** @class */ (function () {\r\n    function CircleProgressComponent(defaultOptions) {\r\n        var _this = this;\r\n        this.onClick = new EventEmitter();\r\n        this.options = new CircleProgressOptions();\r\n        this.defaultOptions = new CircleProgressOptions();\r\n        this._lastPercent = 0;\r\n        this.render = function () {\r\n            _this.applyOptions();\r\n            if (_this.options.animation && _this.options.animationDuration > 0) {\r\n                _this.animate(_this._lastPercent, _this.options.percent);\r\n            }\r\n            else {\r\n                _this.draw(_this.options.percent);\r\n            }\r\n            _this._lastPercent = _this.options.percent;\r\n        };\r\n        this.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\r\n            var /** @type {?} */ angleInRadius = angleInDegrees * Math.PI / 180;\r\n            var /** @type {?} */ x = centerX + Math.sin(angleInRadius) * radius;\r\n            var /** @type {?} */ y = centerY - Math.cos(angleInRadius) * radius;\r\n            return { x: x, y: y };\r\n        };\r\n        this.draw = function (percent) {\r\n            // make percent reasonable\r\n            percent = (percent === undefined) ? _this.options.percent : Math.abs(percent);\r\n            // circle percent shouldn't be greater than 100%.\r\n            var /** @type {?} */ circlePercent = (percent > 100) ? 100 : percent;\r\n            // determine box size\r\n            var /** @type {?} */ boxSize = _this.options.radius * 2 + _this.options.outerStrokeWidth * 2;\r\n            if (_this.options.showBackground) {\r\n                boxSize += (_this.options.backgroundStrokeWidth * 2 + _this.max(0, _this.options.backgroundPadding * 2));\r\n            }\r\n            // the centre of the circle\r\n            var /** @type {?} */ centre = { x: boxSize / 2, y: boxSize / 2 };\r\n            // the start point of the arc\r\n            var /** @type {?} */ startPoint = { x: centre.x, y: centre.y - _this.options.radius };\r\n            // get the end point of the arc\r\n            var /** @type {?} */ endPoint = _this.polarToCartesian(centre.x, centre.y, _this.options.radius, 360 * (_this.options.clockwise ?\r\n                circlePercent :\r\n                (100 - circlePercent)) / 100); // ####################\r\n            // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.\r\n            if (circlePercent === 100) {\r\n                endPoint.x = endPoint.x + (_this.options.clockwise ? -0.01 : +0.01);\r\n            }\r\n            // largeArcFlag and sweepFlag\r\n            var /** @type {?} */ largeArcFlag, /** @type {?} */ sweepFlag;\r\n            if (circlePercent > 50) {\r\n                _a = _this.options.clockwise ? [1, 1] : [1, 0], largeArcFlag = _a[0], sweepFlag = _a[1];\r\n            }\r\n            else {\r\n                _b = _this.options.clockwise ? [0, 1] : [0, 0], largeArcFlag = _b[0], sweepFlag = _b[1];\r\n            }\r\n            // percent may not equal the actual percent\r\n            var /** @type {?} */ titlePercent = _this.options.animateTitle ? percent : _this.options.percent;\r\n            var /** @type {?} */ titleTextPercent = titlePercent > _this.options.maxPercent ?\r\n                _this.options.maxPercent.toFixed(_this.options.toFixed) + \"+\" : titlePercent.toFixed(_this.options.toFixed);\r\n            var /** @type {?} */ subtitlePercent = _this.options.animateSubtitle ? percent : _this.options.percent;\r\n            // get title object\r\n            var /** @type {?} */ title = {\r\n                x: centre.x,\r\n                y: centre.y,\r\n                textAnchor: 'middle',\r\n                color: _this.options.titleColor,\r\n                fontSize: _this.options.titleFontSize,\r\n                texts: [],\r\n                tspans: []\r\n            };\r\n            // from v0.9.9, both title and titleFormat(...) may be an array of string.\r\n            if (_this.options.titleFormat !== undefined && _this.options.titleFormat.constructor.name === 'Function') {\r\n                var /** @type {?} */ formatted = _this.options.titleFormat(titlePercent);\r\n                if (formatted instanceof Array) {\r\n                    title.texts = formatted.slice();\r\n                }\r\n                else {\r\n                    title.texts.push(formatted.toString());\r\n                }\r\n            }\r\n            else {\r\n                if (_this.options.title === 'auto') {\r\n                    title.texts.push(titleTextPercent);\r\n                }\r\n                else {\r\n                    if (_this.options.title instanceof Array) {\r\n                        title.texts = _this.options.title.slice();\r\n                    }\r\n                    else {\r\n                        title.texts.push(_this.options.title.toString());\r\n                    }\r\n                }\r\n            }\r\n            // get subtitle object\r\n            var /** @type {?} */ subtitle = {\r\n                x: centre.x,\r\n                y: centre.y,\r\n                textAnchor: 'middle',\r\n                color: _this.options.subtitleColor,\r\n                fontSize: _this.options.subtitleFontSize,\r\n                texts: [],\r\n                tspans: []\r\n            };\r\n            // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.\r\n            if (_this.options.subtitleFormat !== undefined && _this.options.subtitleFormat.constructor.name === 'Function') {\r\n                var /** @type {?} */ formatted = _this.options.subtitleFormat(subtitlePercent);\r\n                if (formatted instanceof Array) {\r\n                    subtitle.texts = formatted.slice();\r\n                }\r\n                else {\r\n                    subtitle.texts.push(formatted.toString());\r\n                }\r\n            }\r\n            else {\r\n                if (_this.options.subtitle instanceof Array) {\r\n                    subtitle.texts = _this.options.subtitle.slice();\r\n                }\r\n                else {\r\n                    subtitle.texts.push(_this.options.subtitle.toString());\r\n                }\r\n            }\r\n            // get units object\r\n            var /** @type {?} */ units = {\r\n                text: \"\" + _this.options.units,\r\n                fontSize: _this.options.unitsFontSize,\r\n                color: _this.options.unitsColor\r\n            };\r\n            // get total count of text lines to be shown\r\n            var /** @type {?} */ rowCount = 0, /** @type {?} */ rowNum = 1;\r\n            _this.options.showTitle && (rowCount += title.texts.length);\r\n            _this.options.showSubtitle && (rowCount += subtitle.texts.length);\r\n            // calc dy for each tspan for title\r\n            if (_this.options.showTitle) {\r\n                for (var _i = 0, _c = title.texts; _i < _c.length; _i++) {\r\n                    var span = _c[_i];\r\n                    title.tspans.push({ span: span, dy: _this.getRelativeY(rowNum, rowCount) });\r\n                    rowNum++;\r\n                }\r\n            }\r\n            // calc dy for each tspan for subtitle\r\n            if (_this.options.showSubtitle) {\r\n                for (var _d = 0, _e = subtitle.texts; _d < _e.length; _d++) {\r\n                    var span = _e[_d];\r\n                    subtitle.tspans.push({ span: span, dy: _this.getRelativeY(rowNum, rowCount) });\r\n                    rowNum++;\r\n                }\r\n            }\r\n            // Bring it all together\r\n            // Bring it all together\r\n            _this.svg = {\r\n                viewBox: \"0 0 \" + boxSize + \" \" + boxSize,\r\n                // Set both width and height to '100%' if it's responsive\r\n                width: _this.options.responsive ? '100%' : boxSize,\r\n                height: _this.options.responsive ? '100%' : boxSize,\r\n                backgroundCircle: {\r\n                    cx: centre.x,\r\n                    cy: centre.y,\r\n                    r: _this.options.radius + _this.options.outerStrokeWidth / 2 + _this.options.backgroundPadding,\r\n                    fill: _this.options.backgroundColor,\r\n                    fillOpacity: _this.options.backgroundOpacity,\r\n                    stroke: _this.options.backgroundStroke,\r\n                    strokeWidth: _this.options.backgroundStrokeWidth,\r\n                },\r\n                path: {\r\n                    // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)\r\n                    d: \"M \" + startPoint.x + \" \" + startPoint.y + \"\\n        A \" + _this.options.radius + \" \" + _this.options.radius + \" 0 \" + largeArcFlag + \" \" + sweepFlag + \" \" + endPoint.x + \" \" + endPoint.y,\r\n                    stroke: _this.options.outerStrokeColor,\r\n                    strokeWidth: _this.options.outerStrokeWidth,\r\n                    strokeLinecap: _this.options.outerStrokeLinecap,\r\n                    fill: 'none'\r\n                },\r\n                circle: {\r\n                    cx: centre.x,\r\n                    cy: centre.y,\r\n                    r: _this.options.radius - _this.options.space - _this.options.outerStrokeWidth / 2 - _this.options.innerStrokeWidth / 2,\r\n                    fill: 'none',\r\n                    stroke: _this.options.innerStrokeColor,\r\n                    strokeWidth: _this.options.innerStrokeWidth,\r\n                },\r\n                title: title,\r\n                units: units,\r\n                subtitle: subtitle,\r\n                image: {\r\n                    x: centre.x - _this.options.imageWidth / 2,\r\n                    y: centre.y - _this.options.imageHeight / 2,\r\n                    src: _this.options.imageSrc,\r\n                    width: _this.options.imageWidth,\r\n                    height: _this.options.imageHeight,\r\n                },\r\n            };\r\n            var _a, _b;\r\n        };\r\n        this.getAnimationParameters = function (previousPercent, currentPercent) {\r\n            var /** @type {?} */ MIN_INTERVAL = 10;\r\n            var /** @type {?} */ times, /** @type {?} */ step, /** @type {?} */ interval;\r\n            var /** @type {?} */ fromPercent = _this.options.startFromZero ? 0 : (previousPercent < 0 ? 0 : previousPercent);\r\n            var /** @type {?} */ toPercent = currentPercent < 0 ? 0 : _this.min(currentPercent, _this.options.maxPercent);\r\n            var /** @type {?} */ delta = Math.abs(Math.round(toPercent - fromPercent));\r\n            if (delta >= 100) {\r\n                // we will finish animation in 100 times\r\n                times = 100;\r\n                if (!_this.options.animateTitle && !_this.options.animateSubtitle) {\r\n                    step = 1;\r\n                }\r\n                else {\r\n                    // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.\r\n                    step = Math.round(delta / times);\r\n                }\r\n            }\r\n            else {\r\n                // we will finish in as many times as the number of percent.\r\n                times = delta;\r\n                step = 1;\r\n            }\r\n            // Get the interval of timer\r\n            interval = Math.round(_this.options.animationDuration / times);\r\n            // Readjust all values if the interval of timer is extremely small.\r\n            if (interval < MIN_INTERVAL) {\r\n                interval = MIN_INTERVAL;\r\n                times = _this.options.animationDuration / interval;\r\n                if (!_this.options.animateTitle && !_this.options.animateSubtitle && delta > 100) {\r\n                    step = Math.round(100 / times);\r\n                }\r\n                else {\r\n                    step = Math.round(delta / times);\r\n                }\r\n            }\r\n            // step must be greater than 0.\r\n            if (step < 1) {\r\n                step = 1;\r\n            }\r\n            return { times: times, step: step, interval: interval };\r\n        };\r\n        this.animate = function (previousPercent, currentPercent) {\r\n            if (_this._timerSubscription && !_this._timerSubscription.closed) {\r\n                _this._timerSubscription.unsubscribe();\r\n            }\r\n            var /** @type {?} */ fromPercent = _this.options.startFromZero ? 0 : previousPercent;\r\n            var /** @type {?} */ toPercent = currentPercent;\r\n            var _a = _this.getAnimationParameters(fromPercent, toPercent), step = _a.step, interval = _a.interval;\r\n            var /** @type {?} */ count = fromPercent;\r\n            if (fromPercent < toPercent) {\r\n                _this._timerSubscription = timer(0, interval).subscribe(function () {\r\n                    count += step;\r\n                    if (count <= toPercent) {\r\n                        if (!_this.options.animateTitle && !_this.options.animateSubtitle && count >= 100) {\r\n                            _this.draw(toPercent);\r\n                            _this._timerSubscription.unsubscribe();\r\n                        }\r\n                        else {\r\n                            _this.draw(count);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this.draw(toPercent);\r\n                        _this._timerSubscription.unsubscribe();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                _this._timerSubscription = timer(0, interval).subscribe(function () {\r\n                    count -= step;\r\n                    if (count >= toPercent) {\r\n                        if (!_this.options.animateTitle && !_this.options.animateSubtitle && toPercent >= 100) {\r\n                            _this.draw(toPercent);\r\n                            _this._timerSubscription.unsubscribe();\r\n                        }\r\n                        else {\r\n                            _this.draw(count);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this.draw(toPercent);\r\n                        _this._timerSubscription.unsubscribe();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        this.emitClickEvent = function (event) {\r\n            if (_this.options.renderOnClick) {\r\n                _this.animate(0, _this.options.percent);\r\n            }\r\n            _this.onClick.emit(event);\r\n        };\r\n        this.applyOptions = function () {\r\n            // the options of <circle-progress> may change already\r\n            for (var _i = 0, _a = Object.keys(_this.options); _i < _a.length; _i++) {\r\n                var name_1 = _a[_i];\r\n                if (_this.hasOwnProperty(name_1) && _this[name_1] !== undefined) {\r\n                    _this.options[name_1] = _this[name_1];\r\n                }\r\n                else if (_this.templateOptions && _this.templateOptions[name_1] !== undefined) {\r\n                    _this.options[name_1] = _this.templateOptions[name_1];\r\n                }\r\n            }\r\n            // make sure key options valid\r\n            // make sure key options valid\r\n            _this.options.radius = Math.abs(+_this.options.radius);\r\n            _this.options.space = +_this.options.space;\r\n            _this.options.percent = +_this.options.percent > 0 ? +_this.options.percent : 0;\r\n            _this.options.maxPercent = Math.abs(+_this.options.maxPercent);\r\n            _this.options.animationDuration = Math.abs(_this.options.animationDuration);\r\n            _this.options.outerStrokeWidth = Math.abs(+_this.options.outerStrokeWidth);\r\n            _this.options.innerStrokeWidth = Math.abs(+_this.options.innerStrokeWidth);\r\n            _this.options.backgroundPadding = +_this.options.backgroundPadding;\r\n        };\r\n        this.getRelativeY = function (rowNum, rowCount) {\r\n            // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)\r\n            var /** @type {?} */ initialOffset = -0.18, /** @type {?} */ offset = 1;\r\n            return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\r\n        };\r\n        this.min = function (a, b) {\r\n            return a < b ? a : b;\r\n        };\r\n        this.max = function (a, b) {\r\n            return a > b ? a : b;\r\n        };\r\n        Object.assign(this.options, defaultOptions);\r\n        Object.assign(this.defaultOptions, defaultOptions);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CircleProgressComponent.prototype.isDrawing = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return (this._timerSubscription && !this._timerSubscription.closed);\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    CircleProgressComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        this.render();\r\n    };\r\n    CircleProgressComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'circle-progress',\r\n                    template: \"\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" *ngIf=\\\"svg\\\"\\n             [attr.viewBox]=\\\"svg.viewBox\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"\\n             [attr.height]=\\\"svg.height\\\" [attr.width]=\\\"svg.width\\\" (click)=\\\"emitClickEvent($event)\\\" [attr.class]=\\\"options.class\\\">\\n            <circle *ngIf=\\\"options.showBackground\\\"\\n                    [attr.cx]=\\\"svg.backgroundCircle.cx\\\"\\n                    [attr.cy]=\\\"svg.backgroundCircle.cy\\\"\\n                    [attr.r]=\\\"svg.backgroundCircle.r\\\"\\n                    [attr.fill]=\\\"svg.backgroundCircle.fill\\\"\\n                    [attr.fill-opacity]=\\\"svg.backgroundCircle.fillOpacity\\\"\\n                    [attr.stroke]=\\\"svg.backgroundCircle.stroke\\\"\\n                    [attr.stroke-width]=\\\"svg.backgroundCircle.strokeWidth\\\"/>\\n            <circle *ngIf=\\\"options.showInnerStroke\\\"\\n                    [attr.cx]=\\\"svg.circle.cx\\\"\\n                    [attr.cy]=\\\"svg.circle.cy\\\"\\n                    [attr.r]=\\\"svg.circle.r\\\"\\n                    [attr.fill]=\\\"svg.circle.fill\\\"\\n                    [attr.stroke]=\\\"svg.circle.stroke\\\"\\n                    [attr.stroke-width]=\\\"svg.circle.strokeWidth\\\"/>\\n            <path\\n                    [attr.d]=\\\"svg.path.d\\\"\\n                    [attr.stroke]=\\\"svg.path.stroke\\\"\\n                    [attr.stroke-width]=\\\"svg.path.strokeWidth\\\"\\n                    [attr.stroke-linecap]=\\\"svg.path.strokeLinecap\\\"\\n                    [attr.fill]=\\\"svg.path.fill\\\"/>\\n            <text *ngIf=\\\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\\\"\\n                  alignment-baseline=\\\"baseline\\\"\\n                  [attr.x]=\\\"svg.circle.cx\\\"\\n                  [attr.y]=\\\"svg.circle.cy\\\"\\n                  [attr.text-anchor]=\\\"svg.title.textAnchor\\\">\\n                <ng-container *ngIf=\\\"options.showTitle\\\">\\n                    <tspan *ngFor=\\\"let tspan of svg.title.tspans\\\"\\n                           [attr.x]=\\\"svg.title.x\\\"\\n                           [attr.y]=\\\"svg.title.y\\\"\\n                           [attr.dy]=\\\"tspan.dy\\\"\\n                           [attr.font-size]=\\\"svg.title.fontSize\\\"\\n                           [attr.fill]=\\\"svg.title.color\\\">{{tspan.span}}\\n                    </tspan>\\n                </ng-container>\\n                <tspan *ngIf=\\\"options.showUnits\\\"\\n                       [attr.font-size]=\\\"svg.units.fontSize\\\"\\n                       [attr.fill]=\\\"svg.units.color\\\">{{svg.units.text}}\\n                </tspan>\\n                <ng-container *ngIf=\\\"options.showSubtitle\\\">\\n                    <tspan *ngFor=\\\"let tspan of svg.subtitle.tspans\\\"\\n                           [attr.x]=\\\"svg.subtitle.x\\\"\\n                           [attr.y]=\\\"svg.subtitle.y\\\"\\n                           [attr.dy]=\\\"tspan.dy\\\"\\n                           [attr.font-size]=\\\"svg.subtitle.fontSize\\\"\\n                           [attr.fill]=\\\"svg.subtitle.color\\\">{{tspan.span}}\\n                    </tspan>\\n                </ng-container>\\n            </text>\\n            <image *ngIf=\\\"options.showImage\\\" preserveAspectRatio=\\\"none\\\" \\n                [attr.height]=\\\"svg.image.height\\\"\\n                [attr.width]=\\\"svg.image.width\\\"\\n                [attr.xlink:href]=\\\"svg.image.src\\\"\\n                [attr.x]=\\\"svg.image.x\\\"\\n                [attr.y]=\\\"svg.image.y\\\"\\n            />\\n        </svg>\\n    \"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    CircleProgressComponent.ctorParameters = function () { return [\r\n        { type: CircleProgressOptions }\r\n    ]; };\r\n    CircleProgressComponent.propDecorators = {\r\n        onClick: [{ type: Output }],\r\n        class: [{ type: Input }],\r\n        backgroundColor: [{ type: Input }],\r\n        backgroundOpacity: [{ type: Input }],\r\n        backgroundStroke: [{ type: Input }],\r\n        backgroundStrokeWidth: [{ type: Input }],\r\n        backgroundPadding: [{ type: Input }],\r\n        radius: [{ type: Input }],\r\n        space: [{ type: Input }],\r\n        percent: [{ type: Input }],\r\n        toFixed: [{ type: Input }],\r\n        maxPercent: [{ type: Input }],\r\n        renderOnClick: [{ type: Input }],\r\n        units: [{ type: Input }],\r\n        unitsFontSize: [{ type: Input }],\r\n        unitsColor: [{ type: Input }],\r\n        outerStrokeWidth: [{ type: Input }],\r\n        outerStrokeColor: [{ type: Input }],\r\n        outerStrokeLinecap: [{ type: Input }],\r\n        innerStrokeColor: [{ type: Input }],\r\n        innerStrokeWidth: [{ type: Input }],\r\n        titleFormat: [{ type: Input }],\r\n        title: [{ type: Input }],\r\n        titleColor: [{ type: Input }],\r\n        titleFontSize: [{ type: Input }],\r\n        subtitleFormat: [{ type: Input }],\r\n        subtitle: [{ type: Input }],\r\n        subtitleColor: [{ type: Input }],\r\n        subtitleFontSize: [{ type: Input }],\r\n        imageSrc: [{ type: Input }],\r\n        imageHeight: [{ type: Input }],\r\n        imageWidth: [{ type: Input }],\r\n        animation: [{ type: Input }],\r\n        animateTitle: [{ type: Input }],\r\n        animateSubtitle: [{ type: Input }],\r\n        animationDuration: [{ type: Input }],\r\n        showTitle: [{ type: Input }],\r\n        showSubtitle: [{ type: Input }],\r\n        showUnits: [{ type: Input }],\r\n        showImage: [{ type: Input }],\r\n        showBackground: [{ type: Input }],\r\n        showInnerStroke: [{ type: Input }],\r\n        clockwise: [{ type: Input }],\r\n        responsive: [{ type: Input }],\r\n        startFromZero: [{ type: Input }],\r\n        templateOptions: [{ type: Input, args: ['options',] }]\r\n    };\r\n    return CircleProgressComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar NgCircleProgressModule = /** @class */ (function () {\r\n    function NgCircleProgressModule() {\r\n    }\r\n    /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    NgCircleProgressModule.forRoot = /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    function (options) {\r\n        if (options === void 0) { options = {}; }\r\n        return {\r\n            ngModule: NgCircleProgressModule,\r\n            providers: [\r\n                { provide: CircleProgressOptions, useValue: options }\r\n            ]\r\n        };\r\n    };\r\n    NgCircleProgressModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        CircleProgressComponent,\r\n                    ],\r\n                    exports: [\r\n                        CircleProgressComponent,\r\n                    ]\r\n                },] },\r\n    ];\r\n    return NgCircleProgressModule;\r\n}());\n\nexport { NgCircleProgressModule, CircleProgressOptions, CircleProgressComponent };\n","module.exports = \"<div class=\\\"proEdit forAllInvitations\\\">\\n  <h2 class=\\\"withLine\\\"><span>{{\\\"INVITATIONS.MANAGE_ALL\\\" | translate}}</span></h2>\\n\\n  <div class=\\\"inviteBlock\\\">\\n    <div class=\\\"inviteBlockTop clearfix\\\" *ngIf=\\\"allInvitations.length > 0\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n          <p>{{\\\"INVITATIONS.INVITATIONS\\\" | translate}} ({{totalRows}})</p>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div>\\n      <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">{{ successMessage }}</div>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"allInvitations.length > 0\\\">\\n      <div class=\\\"inviteBlockSingle\\\" *ngFor=\\\"let invitaion of allInvitations\\\" id=\\\"invitaion-{{invitaion.id}}\\\">\\n         <div class=\\\"inviteBlockImg\\\" [class.boxSinglenoImg]=\\\"!invitaion?.friend_profile_pic\\\">\\n           <img *ngIf=\\\"invitaion?.friend_profile_pic\\\" [src]=\\\"(invitaion?.friend_profile_pic) | picturepath:'users'\\\" alt=\\\"\\\">\\n           <img  *ngIf=\\\"invitaion && !invitaion.friend_profile_pic && invitaion.friend_gender && invitaion.friend_experience_level\\\" src=\\\"assets/images/charachter/{{ invitaion.friend_gender+'_'+invitaion.friend_experience_level }}.png\\\" alt=\\\"\\\">\\n          </div>\\n        \\n        <h3>\\n          <a [routerLink]= \\\"['/',invitaion?.friend_cpp]\\\">\\n          {{invitaion.friend_full_name}}\\n        </a></h3>\\n        <p>{{invitaion.friend_position_local_name}}</p>\\n        <h4><i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i> {{ invitaion.mutualFriendCount }} {{'LISTPAGES.MUTUAL_CONNECTION'|translate}}</h4>\\n        <div class=\\\"inviteBlockBtn\\\">\\n          <a href=\\\"javascript:void(0);\\\" (click)=\\\"ignoreInvitation(invitaion)\\\">{{\\\"INVITATIONS.IGNORE\\\" | translate}}</a>\\n          <a class=\\\"green\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"acceptInvitation(invitaion)\\\">{{\\\"INVITATIONS.ACCEPT\\\" | translate}}</a>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"text-center\\\" *ngIf=\\\"allInvitations.length == 0\\\">\\n      {{\\\"INVITATIONS.NO_RECORD_FOUND\\\" | translate}}\\n    </div>\\n\\n\\n\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvYWxsLWludml0YXRpb25zL2FsbC1pbnZpdGF0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from \"../../services/common.service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport * as global from '../../globalConfig';\nimport swal from 'sweetalert';\nimport * as CryptoJS from 'crypto-js';\n@Component({\n\tselector: 'app-all-invitations',\n\ttemplateUrl: './all-invitations.component.html',\n\tstyleUrls: ['./all-invitations.component.scss']\n})\nexport class AllInvitationsComponent implements OnInit {\n\n\tallInvitations: Array<any> = []; // all invitaions\n\tallNotifications: Array<any> = []; // all notifications \n\tpaginationConfig: any = null; // set pagination config\n\ttotalRows: any = null;\n\tsuccessMessage: string = ''; // set success message\n\tloggedInUser: any = null;\n\tactiveLoggedUser:any = null;\n\tconstructor(\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate cService: CommonService,\n\t\tprivate translate: TranslateService,\n\t\tprivate route: Router) {\n\t\tthis.cService.activelang.subscribe((lang) => {\n\n\t\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\t\ttranslate.setDefaultLang(lang);\n\n\t\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\t\ttranslate.use(lang);\n\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.loggedInUser = this.cService.getLoggedUserData();\n\t\tthis.connectionInvitations();\n\n\t}\n\n\n\t/* Function Name : connectionInvitations\n\t* Author : \n\t* Created Date : 25-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get all connection invitation list\n\t* PARAMS :\n\t*/\n\n\tconnectionInvitations() {\n\n\t\tthis.cService.connectionInvitationList().subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tthis.allInvitations = response.data.list;\n\t\t\t\tthis.activeLoggedUser = response.data.user;\n\t\t\t\tthis.totalRows = response.data.list.length;\n\t\t\t\tthis.getMutualFriend();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.activatedRoute.fragment.subscribe((fragement) => {\n\t\t\t\t\t\twindow.scrollTo(0, document.getElementById(fragement).scrollHeight + 100);\n\t\t\t\t\t});\n\n\t\t\t\t}, 1000);\n\t\t\t}\n\n\t\t});\n\t}\n\n\tgetMutualFriend() {\n\t\tlet userFriendIdList: any = [];\n\t\tlet currentUserId = this.activeLoggedUser.id.toString();\n\t\tif (this.activeLoggedUser.friendsIds) {\n\t\t\tuserFriendIdList = this.activeLoggedUser.friendsIds.friend_ids;\n\t\t\tuserFriendIdList = userFriendIdList.split(\",\");\n\t\t}\n\t\tlet listData = null;\n\t\tlistData = this.allInvitations;\n\n\t\tif (listData.length > 0) {\n\n\t\t\tlistData.forEach((item, index) => {\n\t\t\t\tlistData[index]['mutualFriendCount'] = 0;\n\t\t\t\tif (\n\t\t\t\t\titem &&\n\t\t\t\t\t(localStorage.getItem('_user') && this.activeLoggedUser.id != item.id) &&\n\t\t\t\t\t(item.friendsIds && item.friendsIds.friend_ids)) {\n\t\t\t\t\tlet friendList = item.friendsIds.friend_ids;\n\t\t\t\t\tfriendList = friendList.split(\",\");\n\t\t\t\t\tfriendList.splice(friendList.indexOf(currentUserId), 1);\n\n\t\t\t\t\tlet mutualFriendList = userFriendIdList.filter(function (obj) { return friendList.indexOf(obj) > -1; });\n\t\t\t\t\tlistData[index]['mutualFriendCount'] = mutualFriendList.length;\n\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.allInvitations = listData;\n\n\t}\n\n\t/* Function Name : acceptInvitation\n\t* Author : \n\t* Created Date : 25-03-2019 \n\t* Modified Date : *\n\t* Purpose : to accept invitaion\n\t* PARAMS : formPostData,friend\n\t*/\n\n\tacceptInvitation(friend: any) {\n\t\tlet formPostData = {\n\t\t\t\"to_id\": btoa(friend.friend_id),\n\t\t\t\"status\": 1\n\t\t};\n\t\tthis.cService.connectionRequest(formPostData).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tthis.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n\t\t\t\t\tswal({\n\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\ttext: response['message'],\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.cService.emitNotification(friend.friend_cpp, 'CA');\n\t\t\t\tthis.cService.emitNotification(this.loggedInUser._cpp, 'CA');\n\t\t\t\tthis.connectionInvitations();\n\n\t\t\t}\n\t\t});\n\t}\n\n\t/* Function Name : ignoreInvitation\n\t* Author : \n\t* Created Date : 25-03-2019 \n\t* Modified Date : *\n\t* Purpose : to ignore invitaion\n\t* PARAMS : friend\n\t*/\n\n\tignoreInvitation(friend: any) {\n\t\tlet formPostData = {\n\t\t\t\"to_id\": btoa(friend.friend_id),\n\t\t\t\"status\": 2\n\t\t};\n\t\tthis.cService.connectionRequest(formPostData).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tthis.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n\t\t\t\t\tswal({\n\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\ttext: response['message'],\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.cService.emitNotification(friend.friend_cpp, 'CD');\n\t\t\t\tthis.cService.emitNotification(this.loggedInUser._cpp, 'CD');\n\t\t\t\tthis.successMessage = response.message;\n\t\t\t\tthis.connectionInvitations();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.successMessage = '';\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\n}\n","module.exports = \"<div class=\\\"searchWrap\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xl-9 col-lg-8\\\">\\n      <h2 class=\\\"withLine\\\"><span>{{\\\"RECOMMENDATIONS.RECOMMENDATIONS\\\" | translate}}</span></h2>\\n      <div class=\\\"row searchResult\\\">\\n        <div class=\\\"col-xl-3 col-lg-4 col-md-4 col-6 searchCol\\\" *ngFor=\\\"let recommendation of recommendationList\\\">\\n          <div class=\\\"searchResultSingle\\\" >\\n            <div (click)=\\\"gotoProfile(recommendation.recommend_user_cpp)\\\">\\n            <div class=\\\"profileDescImg\\\" [class.inactive]=\\\"(currentTime - recommendation.recommend_user_last_active_time) > (5*60) \\\">\\n            <img *ngIf=\\\"recommendation.recommend_user_profile_pic\\\" alt=\\\"\\\" [src]=\\\"recommendation.recommend_user_profile_pic| picturepath:'users'\\\">\\n            <img  *ngIf=\\\"recommendation && !recommendation.recommend_user_profile_pic && recommendation.recommend_user_gender && recommendation.recommend_user_experience_level\\\" src=\\\"assets/images/charachter/{{ recommendation.recommend_user_gender+'_'+recommendation.recommend_user_experience_level }}.png\\\" alt=\\\"\\\">\\n          </div>\\n            <h2>{{ recommendation.recommend_user_first_name }}  {{ recommendation.recommend_user_last_name }}</h2>\\n            <h3>{{ recommendation.recommend_user_position_local_name }}</h3>\\n            <h4><i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i>{{ recommendation.mutualFriendCount }}  {{'LISTPAGES.MUTUAL_CONNECTION'|translate}}</h4>\\n          </div>\\n            <!-- <button class=\\\"blockBtn\\\" type=\\\"button\\\" (click)=\\\"openLg(content)\\\">Block</button> -->\\n            \\n          </div>\\n        </div>\\n        \\n      </div>\\n      <ngx-pager  [config]=\\\"paginationConfig\\\"  [totalrow]='totalRows' class=\\\"defaultPagination\\\"></ngx-pager>\\n    \\n      <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12 searchCol\\\" *ngIf=\\\"recommendationList.length == 0\\\">\\n          {{\\\"PROFILEEDIT.NO_RECORD_FOUND\\\" | translate}}\\n      </div>\\n      \\n\\n    </div>\\n\\n    <div class=\\\"col-xl-3 col-lg-4\\\">\\n\\n      <app-notifications></app-notifications>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvYWxsLXJlY29tbWVuZGF0aW9ucy9hbGwtcmVjb21tZW5kYXRpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from \"../../services/users.service\";\nimport {CommonService} from \"../../services/common.service\";\nimport {TranslateService} from '@ngx-translate/core';\nimport { Router } from \"@angular/router\";\nimport * as global from '../../globalConfig';\n\n@Component({\n  selector: 'app-all-recommendations',\n  templateUrl: './all-recommendations.component.html',\n  styleUrls: ['./all-recommendations.component.scss']\n})\nexport class AllRecommendationsComponent implements OnInit {\n\n  paginationConfig : any = null; // set pagination config\n  totalRows:any = null;\n  currentPage : any = 1; // set current page\n  connectionList: Array<any> = []; // set connection list\n  recommendationList: Array<any> = []; // set connection list\n  currentUserData: any = null; // set current user data\n  currentTime : any = null; // set current time\n  profile_image_path: string = global.s3URL+'userspic/'; // set user profile image path\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and define the languages data\n\t* PARAMS : uService, cService, translate, route\n\t*/  \n  constructor(\n    private uService: UsersService, \n    private cService:CommonService, \n    private translate: TranslateService,\n    private route: Router) {\n    this.cService.activelang.subscribe((lang)=>{\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n    \n  }\n\n  /* Function Name : getMutualFriend\n  * Author : \n  * Created Date : 25-03-2019\n  * Modified Date : *\n  * Purpose : to calculate multal connections\n  * PARAMS : \n  */    \n  getMutualFriend() {\n    let userFriendIdList:any = [];\n    let currentUserId = this.currentUserData.id.toString();\n    if (this.currentUserData.friendsIds && this.currentUserData.friendsIds.friend_ids) {\n      userFriendIdList = this.currentUserData.friendsIds.friend_ids;\n      userFriendIdList = userFriendIdList.split(\",\");\n    }\n    this.currentTime = (new Date()).getTime()/1000;\n    \n    this.recommendationList.forEach((item, index)=>{\n      this.recommendationList[index]['mutualFriendCount'] = 0;\n      if (item.allFriends.friend_ids) {\n        let friendList = item.allFriends.friend_ids;\n        friendList = friendList.split(\",\");\n        friendList.splice( friendList.indexOf(currentUserId), 1 );\n\n        let mutualFriendList = userFriendIdList.filter(function(obj) { return friendList.indexOf(obj) > -1; });\n        this.recommendationList[index]['mutualFriendCount'] = mutualFriendList.length;\n\n      }\n    });\n  }\n  \n\n     \n  ngOnInit() {\n    \n    this.paginationConfig = {\n      perPage: 10,\n      render : (page)=>{  \n        this.uService.recommendationList().subscribe((responseData:any)=>{\n          if (responseData.statustext == 'success') {\n             \n             if (responseData && responseData.data) {\n               this.currentUserData = responseData.data.user;\n               this.recommendationList = responseData.data.list;\n               this.totalRows = responseData.data.pagination.rowCount;\n               this.getMutualFriend();\n             }\n          }\n        });\n\n    \n      }\n    }\n  }\n\n\n  /* Function Name : gotoProfile\n  * Author : \n  * Created Date : 25-03-2019 \n  * Modified Date : *\n  * Purpose : to go to a user profile\n  * PARAMS : recommendCpp\n  */  \n  gotoProfile(recommendCpp) {\n    this.route.navigate(['/', recommendCpp]);\n  }\n\n  \n\n\n\n}\n","module.exports = \"<div class=\\\"searchWrap\\\">\\n    <div class=\\\"row\\\">\\n  \\n      <div class=\\\"col-xl-9 col-lg-8\\\">\\n        <h2 class=\\\"withLine\\\"><span>{{ 'LISTPAGES.CONNECTIONS' |translate }}</span></h2>\\n        <div class=\\\"row searchResult\\\">\\n          <div class=\\\"col-xl-3 col-lg-4 col-md-4 col-6 searchCol\\\" *ngFor=\\\"let connection of connectionList\\\" >\\n            <div class=\\\"searchResultSingle\\\">\\n              <span class=\\\"searchClose\\\" (click)=\\\"removeConnection(connection, i)\\\"></span>\\n              <div (click)=\\\"gotoProfile(connection.friend_cpp)\\\">\\n              <div class=\\\"profileDescImg\\\" [class.inactive]=\\\"(currentTime - connection.friend_last_active_time) > (5*60) \\\">\\n              <img *ngIf=\\\"connection.friend_profile_pic\\\" alt=\\\"\\\" [src]=\\\"connection.friend_profile_pic| picturepath:'users'\\\">\\n              <img  *ngIf=\\\"connection && !connection.friend_profile_pic && connection.friend_gender && connection.friend_experience_level\\\" src=\\\"assets/images/charachter/{{ connection.friend_gender+'_'+connection.friend_experience_level }}.png\\\" alt=\\\"\\\">\\n            </div>\\n              <h2>{{ connection.friend_first_name }}  {{ connection.friend_last_name }}</h2>\\n              <h3>{{ connection.friend_position_local_name }}</h3>\\n              <h4><i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i> {{ connection.mutualFriendCount }} {{'LISTPAGES.MUTUAL_CONNECTION'|translate}}</h4>\\n            </div>\\n              \\n              <button *ngIf='connection.already_block==1' class=\\\"blockBtn\\\" type=\\\"button\\\" (click)=\\\"unblock(connection.friend_id)\\\">{{ 'BLOCKS.UNBLOCK'|translate }}</button>\\n\\n              <button *ngIf='!connection.already_block || connection.already_block==0' class=\\\"blockBtn\\\" type=\\\"button\\\" (click)=\\\"openBlock(connection.friend_id)\\\">{{ 'BLOCKS.BLOCK'|translate }}</button>\\n           \\n            </div>\\n          </div>\\n          \\n          <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12 searchCol\\\" *ngIf=\\\"connectionList.length == 0\\\">\\n            {{\\\"PROFILEEDIT.NO_RECORD_FOUND\\\" | translate}}\\n          </div>\\n        </div>\\n  \\n        <app-pagination *ngIf=\\\"paginationConfig && connectionList.length>0\\\" [config]=\\\"paginationConfig\\\" (pager)=\\\"clickPager($event)\\\"></app-pagination>\\n  \\n  \\n      </div>\\n  \\n      <div class=\\\"col-xl-3 col-lg-4\\\">\\n  \\n        <app-notifications></app-notifications>\\n      </div>\\n    </div>\\n  </div>\\n <!-- tell us reasone model start --> \\n <app-blocksmodal></app-blocksmodal>\\n\\n  <!-- <ng-template #content let-modal>\\n    <h2><span>Tell Us Why:</span></h2>\\n    <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n    <div class=\\\"modal-body\\\">\\n      <div>\\n     \\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{ errorMessage }}</div>\\n      </div>\\n\\n      <div class=\\\"proEdit\\\">\\n        <div class=\\\"formWrap alt\\\">\\n         \\n          <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"reasonList\\\" [(ngModel)]=\\\"blockForm.block_reason_id\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"></ng-select>\\n        </div>\\n        <div class=\\\"txtOr\\\">OR:</div>\\n        <div class=\\\"formWrap alt\\\">\\n           <textarea class=\\\"inpField fullWidth\\\" [(ngModel)]=\\\"blockForm.block_comment\\\" placeholder=\\\"Type Blocking Reson......\\\"></textarea>\\n        </div>\\n        <div class=\\\"buttonGr\\\">\\n          <div class=\\\"text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"btnOrange\\\" name=\\\"button\\\" (click)=submitBlockReasonFrom()>Confirm Blocking</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template> -->\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvYmxvY2tzL2Jsb2Nrcy5jb21wb25lbnQuc2NzcyJ9 */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 18-02-2019\n# Module                : BlocksComponent                     \n# Object name           : BlocksComponent    \n# Functionality         : Block users list\n# Purpose               : constructor, ngOnInit, getConnectionList, gotoProfile\n*******************************************************/\n\nimport { Component, OnInit,ViewChild  } from '@angular/core';\nimport {UsersService} from \"../../services/users.service\";\nimport {CommonService} from \"../../services/common.service\";\nimport {TranslateService} from '@ngx-translate/core';\nimport { Router } from \"@angular/router\";\nimport * as global from '../../globalConfig';\nimport {BlocksmodalComponent} from '../../global/blocksmodal/blocksmodal.component';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-blocks',\n  templateUrl: './blocks.component.html',\n  styleUrls: ['./blocks.component.scss'],\n})\nexport class BlocksComponent implements OnInit {\n  @ViewChild(BlocksmodalComponent) blockModal:BlocksmodalComponent; // get the block component obj\n  paginationConfig : any = null; // pagination config\n  currentPage : any = 1; // set current page\n  connectionList: Array<any> = []; // set connection list\n  currentUserData: any = null; // set current user data\n  currentTime : any = null; // set current time\n  profile_image_path: string = global.s3URL+'userspic/'; // user profile pic path\n  \n    // BLOCKFORM CONFIG //\n  blockForm :any =  { // block form\n    \"id\":null,\n    \"block_reason_id\":null,\n    \"block_comment\":'',\n    \"error\":0,\n    \"submit\":false\n  };\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and defin the languages data\n\t* PARAMS : uService, cService, modalService, translate,route\n\t*/\n  constructor(\n    private uService: UsersService, \n    private cService:CommonService, \n    private translate: TranslateService,\n    private route: Router) {\n    this.cService.activelang.subscribe((lang)=>{\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n    this.cService.listData.subscribe((listData:any)=>{\n      if (listData ) {\n        this.connectionList = listData.data.list.list;\n        this.paginationConfig = listData.data.list.pager;\n        this.currentUserData = listData.data.user;\n        this.getMutualFriend();\n      }\n    });\n\n\n  }\n  /* Function Name : getConnectionList\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get all connection list\n\t* PARAMS : \n\t*/\n  getConnectionList() {\n    this.uService.userConnectionList(this.currentPage)\n    .subscribe((responseData:any)=>{\n      if (responseData.statustext == 'success') {\n        this.connectionList = responseData.data.connections.list;\n        this.paginationConfig = responseData.data.connections.pager;\n        this.currentUserData = responseData.data.user;\n        if (this.currentUserData.blocksIds.blocks_ids) {\n          let blockIds = this.currentUserData.blocksIds.blocks_ids.split(\",\");\n          //console.log(blockIds);\n          this.connectionList.forEach((item, index)=>{\n            this.connectionList[index]['already_block'] = 0; \n            if (blockIds.indexOf(item.friend_id.toString()) > -1) {\n              this.connectionList[index]['already_block'] = 1;\n            }\n          });\n          // console.log(this.connectionList);\n        }\n\n        this.getMutualFriend();\n      }\n    })\n  }\n  /* Function Name : getMutualFriend\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to calculate the mutural connections\n\t* PARAMS : \n\t*/  \n  getMutualFriend() {\n    let userFriendIdList:any = [];\n    let currentUserId = this.currentUserData.id.toString();\n    if (this.currentUserData.friendsIds && this.currentUserData.friendsIds.friend_ids) {\n      userFriendIdList = this.currentUserData.friendsIds.friend_ids;\n      userFriendIdList = userFriendIdList.split(\",\");\n    }\n    this.currentTime = (new Date()).getTime()/1000;\n    \n    this.connectionList.forEach((item, index)=>{\n      this.connectionList[index]['mutualFriendCount'] = 0;\n      if (item.allFriends.friend_ids) {\n        let friendList = item.allFriends.friend_ids;\n        friendList = friendList.split(\",\");\n        friendList.splice( friendList.indexOf(currentUserId), 1 );\n\n        let mutualFriendList = userFriendIdList.filter(function(obj) { return friendList.indexOf(obj) > -1; });\n        this.connectionList[index]['mutualFriendCount'] = mutualFriendList.length;\n\n      }\n    });\n  }\n  /* Function Name : ngOnInit\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS : \n\t*/  \n  ngOnInit() {\n    localStorage.setItem('_sp', 'connection');\n    this.getConnectionList();\n    this.blockModal.closeBlock.subscribe((res)=>{\n      this.getConnectionList();\n    });\n  }\n  /* Function Name : clickPager\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to click on pagination page\n\t* PARAMS : e\n\t*/\n  clickPager(e) {\n    this.currentPage = e;\n    this.getConnectionList();\n  }\n  /* Function Name : gotoProfile\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to go to a user profile\n\t* PARAMS :  friendCpp\n\t*/\n  gotoProfile(friendCpp) {\n    this.route.navigate(['/', friendCpp]);\n  }\n\n    /* Function Name : openBlock\n\t* Author : \n\t* Created Date : 04-02-2019 \n\t* Modified Date : *\n\t* Purpose : open block modal\n\t* PARAMS : userId\n\t*/\n  openBlock(userId) {\n    this.blockModal.openBlockReasonModal(userId);\n  }\n  /* Function Name : unblock\n\t* Author : \n\t* Created Date : 04-02-2019 \n\t* Modified Date : *\n\t* Purpose : to unblock a user\n\t* PARAMS : userId\n\t*/  \n  unblock(userId) {\n    this.blockModal.unblockUser(userId);\n  }\n\n  /* Function Name : removeConnection\n\t* Author : \n\t* Created Date : 09-07-2019 \n\t* Modified Date : *\n\t* Purpose : to remove connection\n\t* PARAMS : connection\n\t*/\n  removeConnection(connection, connectionIndex) {\n    this.uService.userConnectionRemove({\n      c_u_id: btoa(connection.friend_id)\n    }).subscribe((responsData: any) => {\n      if (responsData.statustext == 'success') {\n        this.translate.get(['COMMON.SUCCESS']).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.SUCCESS'],\n            text: responsData.message,\n            icon: 'success'\n          }).then(()=>{\n            this.getConnectionList();\n          });\n        });\n      } else {\n        this.translate.get(['COMMON.ERROR']).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.ERROR'],\n            text: responsData.message,\n            icon: 'error'\n          });\n        });\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"proEdit forCardBuilder\\\">\\n  <div class=\\\"formWrap withSelect\\\">\\n    <h2 class=\\\"withLine\\\"><span>{{ 'CV.CHOOSE_TEMPLATE'| translate }}</span></h2>\\n    <span class=\\\"selectAbs\\\">\\n      <select class=\\\"inpField\\\" name=\\\"\\\" [(ngModel)]=\\\"activeCurrency\\\" (change)=\\\"setActiveCurrency()\\\">\\n        <option value=\\\"\\\">{{ 'CV.CURRENCY'|translate }}</option>\\n        <option *ngFor=\\\"let currency of currencyList\\\" [value]=\\\"currency.name\\\">{{ currency.name }}</option>\\n      </select>\\n    </span>\\n  </div>\\n  <div *ngIf=\\\"cardForm.submit == true && entryType != 'browse' && !activeTemplate\\\" class=\\\"alert alert-danger\\\">\\n    {{ 'CV.SELECT_CV_ERR'|translate }}\\n  </div>\\n  <div class=\\\"cardSelect carouselNext\\\">\\n    <div class=\\\"cardSelectRow alt\\\" *ngIf=\\\"templateList.length > 0\\\">\\n      <owl-carousel [options]=\\\"myCarouselOptions\\\" [carouselClasses]=\\\"['owl-theme', 'sliding']\\\">\\n        <div class=\\\"item\\\" *ngFor=\\\"let template of templateList\\\">\\n          <div class=\\\"singleCardSelect\\\" [class.active]=\\\"activeTemplate==template.id\\\"\\n            (click)=\\\"setActiveTemplate(template)\\\">\\n            <img src=\\\"{{ template.picture | picturepath:'templates' }}\\\" alt=\\\"\\\">\\n            <div class=\\\"cardTxt\\\" *ngIf=\\\"template.price>0\\\">\\n\\n              <span>{{ activeCurrenySymbol }}</span>\\n              {{ priceConversionRate*template.price }}\\n            </div>\\n            <div class=\\\"cardTxt\\\" *ngIf=\\\"template.price==0\\\">\\n              {{ 'CV.FREE'|translate }}\\n            </div>\\n          </div>\\n        </div>\\n      </owl-carousel>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"cardForm\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"profile-edit-form-main-content\\\">\\n            <div class=\\\"profile-edit-form-container\\\">\\n              <span class=\\\"formWrap\\\">\\n                <input type=\\\"text\\\" class=\\\"inpField fullWidth\\\" [(ngModel)]=\\\"cardForm.title\\\" placeholder=\\\"{{ 'CARD.CARD_TITLE'| translate }}\\\" />\\n                <span *ngIf=\\\"cardForm.submit &&  !cardForm.title\\\" class=\\\"alert alert-danger\\\">\\n                    {{ 'CARD.TITLE_REQUIRED'|translate }}\\n                  </span>\\n              </span>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"formWrap\\\">\\n          <label class=\\\"customCheck nobG\\\">{{ 'CV.UPLOAD_YOUR_CARD' | translate }} :\\n            <input type=\\\"radio\\\" name=\\\"type\\\" (click)=\\\"setCardEntryType('browse')\\\" [checked]=\\\"entryType == 'browse'\\\">\\n            <span class=\\\"checkmark\\\"></span>\\n          </label>\\n          <div *ngIf=\\\"entryType=='browse'\\\" class=\\\"profile-edit-form-main-content\\\">\\n              <div class=\\\"profile-edit-form-container\\\">\\n            <div class=\\\"fileUpload nobG\\\">\\n              <label for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">{{ 'PROFILEEDIT.BROWSE' | translate }}</label>\\n              <input id=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg, .gif\\\"\\n                (change)=\\\"ownCardImageManage($event)\\\" />\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"entryType == 'browse' && photoErr.size\\\">\\n              {{ 'PROFILEEDIT.PROFILE_PIC_SIZE_ERROR'|translate }}</div>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"entryType == 'browse' && photoErr.type\\\">\\n              {{ 'PROFILEEDIT.PROFILE_PIC_TYPE_ERROR'|translate }}</div>\\n            <div class=\\\"uploadView\\\">\\n              <img [src]=\\\"cardPhoto\\\" *ngIf=\\\"cardPhoto\\\" />\\n            </div>\\n          </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-9 \\\">\\n        \\n\\n          <div class=\\\"formWrap\\\">\\n            <label class=\\\"customCheck nobG withSpace\\\">{{ 'CV.ADD_DATA_MANUALLY' | translate }}\\n              <input type=\\\"radio\\\" name=\\\"type\\\" (click)=\\\"setCardEntryType('manual')\\\" [checked]=\\\"entryType == 'manual'\\\">\\n              <span class=\\\"checkmark\\\"></span>\\n            </label>\\n            <label class=\\\"customCheck nobG\\\">{{ 'CV.USE_CURRENT_CV_DATA' | translate }}\\n              <input type=\\\"radio\\\" name=\\\"type\\\" (click)=\\\"setCardEntryType('cv')\\\" [checked]=\\\"entryType == 'cv'\\\">\\n              <span class=\\\"checkmark\\\"></span>\\n            </label>\\n  \\n          </div>\\n          <p class=\\\"cv-loader\\\" *ngIf=\\\"loader.cv\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i> {{ 'CARD.PLEASE_WAIT_CV_DATA'| translate }}</p>\\n          <div class=\\\"profile-edit-form-main-content\\\" *ngIf=\\\"entryType=='manual' || entryType=='cv'\\\">\\n              <div class=\\\"profile-edit-form-container\\\">\\n          \\n    \\n            <div class=\\\"row\\\" >\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"formWrap alt\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.NAME'|translate }} :</label>\\n                  <span class=\\\"formWrap\\\">\\n    \\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"cardForm.name\\\" class=\\\"col-xl-8 inpField fullWidth\\\" value=\\\"\\\">\\n                    <span *ngIf=\\\"cardForm.submit &&  !cardForm.name\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'PROFILEEDIT.NAME_REQUIRED'|translate }}\\n                    </span>\\n                  </span>\\n                </div>\\n                <div class=\\\"formWrap alt\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.MOBILE'|translate }} :</label>\\n                  <span class=\\\"formWrap\\\">\\n    \\n                    <input appOnlynumaricinput type=\\\"text\\\" [(ngModel)]=\\\"cardForm.mobile\\\" class=\\\"col-xl-8 inpField fullWidth\\\" value=\\\"\\\">\\n                    <span *ngIf=\\\"cardForm.submit &&  !cardForm.mobile\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'PROFILEEDIT.MOBILE_REQUIRED'|translate }}\\n                    </span>\\n                  </span>\\n                </div>\\n                <div class=\\\"formWrap alt\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.ADDRESS'|translate }} :</label>\\n                  <span class=\\\"formWrap\\\">\\n    \\n                    <ng-select class=\\\"inpField width200 withSpace\\\" [items]=\\\"countryList\\\" [(ngModel)]=\\\"cardForm.country_id\\\"\\n                      bindLabel=\\\"name\\\" bindValue=\\\"id\\\" (change)=\\\"getCityList()\\\"></ng-select>\\n                      <span *ngIf=\\\"cardForm.submit &&  !cardForm.country_id\\\" class=\\\"alert alert-danger\\\">\\n                          {{ 'PROFILEEDIT.COUNTRY_REQUIRED'|translate }}\\n                        </span>\\n                  </span>\\n                  <span class=\\\"formWrap\\\">\\n    \\n                    <ng-select class=\\\"inpField autoWidth\\\" [items]=\\\"cityList\\\" [(ngModel)]=\\\"cardForm.city_id\\\" bindLabel=\\\"name\\\"\\n                      bindValue=\\\"id\\\"></ng-select>\\n                    \\n                    <span *ngIf=\\\"cardForm.submit &&  !cardForm.city_id\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'PROFILEEDIT.CITY_REQUIRED'|translate }}\\n                    </span>\\n                  </span>\\n                </div>\\n                <div class=\\\"formWrap alt\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.PHOTO'|translate }} :</label>\\n                  <span class=\\\"formWrap\\\">\\n    \\n                    <div class=\\\"fileUpload withMargin\\\">\\n                      <button class=\\\"custom-file-upload\\\"\\n                        (click)=\\\"openBrowsePhoto()\\\">{{ 'PROFILEEDIT.BROWSE'| translate }}</button>\\n                      <input type=\\\"file\\\" id=\\\"cardPhoto\\\" accept=\\\".png, .jpg, .jpeg, .gif\\\" id=\\\"cardImage\\\"\\n                        class=\\\"col-xl-6 inpField inpField fullWidth\\\" (change)=\\\"manageCardPhoto($event)\\\" />\\n                    </div>\\n                    <span *ngIf=\\\"cardForm.submit &&  photoErr.size == true\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'PROFILEEDIT.PROFILE_PIC_SIZE_ERROR'|translate }}\\n                    </span>\\n                    <span *ngIf=\\\"cardForm.submit &&  photoErr.type == true\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'PROFILEEDIT.PROFILE_PIC_TYPE_ERROR'|translate }}\\n                    </span>\\n                  </span>\\n                </div>\\n                <div class=\\\"formWrap alt\\\">\\n                  <div class=\\\"card-photo-content\\\" *ngIf=\\\"cardForm.photo\\\">\\n                    <img [src]=\\\"cardForm.photo\\\" />\\n                  </div>\\n                </div>\\n              </div>\\n    \\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"formWrap alt\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.POSITION'|translate }} :</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"cardForm.position\\\" class=\\\"col-xl-8 inpField fullWidth\\\" value=\\\"\\\">\\n                </div>\\n                <div class=\\\"formWrap alt\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.WEBSITE'|translate }} :</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"cardForm.website\\\" class=\\\"col-xl-8 inpField fullWidth\\\" value=\\\"\\\">\\n                </div>\\n                <div class=\\\"formWrap alt\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.EMAIL'|translate }} : </label>\\n                  <span class=\\\"formWrap\\\">\\n    \\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"cardForm.email\\\" class=\\\"col-xl-8 inpField fullWidth\\\" value=\\\"\\\">\\n                    <span *ngIf=\\\"cardForm.submit &&  !cardForm.email\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'PROFILEEDIT.EMAIL_REQUIRED'|translate }}\\n                    </span>\\n                  </span>\\n                </div>\\n                <div class=\\\"formWrap alt\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">Description :</label>\\n                  <span class=\\\"formWrap\\\">\\n    \\n                    <input type=\\\"text\\\" class=\\\"col-xl-8 inpField fullWidth\\\" [(ngModel)]=\\\"cardForm.desc\\\" />\\n                    <span *ngIf=\\\"cardForm.submit &&  cardForm.desc && cardForm.desc.split(' ').length>7\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      maximum 7 words you can add\\n                    </span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n    <div class=\\\"buttonGr\\\">\\n      <div class=\\\"text-right\\\"><input class=\\\"btnGreen\\\" (click)=\\\"saveCardForm()\\\" type=\\\"button\\\" name=\\\"\\\" value=\\\"Save\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"formTable\\\">\\n      <table class=\\\"table table-borderless\\\">\\n        <thead>\\n          <tr>\\n            <th>{{ 'CV.NAME'|translate }}</th>\\n            <th class=\\\"text-center\\\">{{ 'CV.STATUS'|translate }}</th>\\n            <th class=\\\"text-center\\\">{{ 'CV.ACTION'|translate }}</th>\\n            <th class=\\\"text-center\\\">{{ 'CV.CURRENT'|translate }}</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let card of userCardList\\\">\\n            <td>{{ card.card_title }}</td>\\n            <td class=\\\"text-center\\\">\\n              <span *ngIf=\\\"card.price == '0.00'\\\">{{ 'CV.FREE'|translate }}</span>\\n              <span *ngIf=\\\"card.price != '0.00'\\\">{{ 'CV.PAID'|translate }}</span>\\n            </td>\\n            <td class=\\\"text-center\\\">\\n\\n              <a (click)=\\\"goToCard(card)\\\" ><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i></a> \\n              <a *ngIf=\\\"!card.preview\\\" (click)=\\\"removeCard(card)\\\" ><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></a>\\n             \\n\\n            </td>\\n            <td class=\\\"text-center\\\">\\n              <label class=\\\"customRadio\\\">\\n                <input type=\\\"radio\\\" name=\\\"default\\\" [checked]=\\\"card.is_default || (card.preview && !defaultCard)\\\" (click)=\\\"setIsDefault(card)\\\">\\n                <span class=\\\"checkmark\\\"></span>\\n              </label>\\n            </td>\\n          </tr>\\n          <tr *ngIf=\\\"userCardList.length == 0\\\" >\\n            <td colspan=\\\"4\\\" class=\\\"text-center\\\">{{ 'PROFILEEDIT.NO_RECORD_FOUND'| translate }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n</div>\\n\\n<ng-template #alertPopup let-modal>\\n  <!-- <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span> -->\\n  <div class=\\\"modal-body\\\" style=\\\"text-align:center\\\">\\n    <p class=\\\"text-center\\\" *ngIf=\\\"alertPopupMsg.type=='limit' && loader.limit\\\">\\n      <i class=\\\"fa fa-cog fa-spin\\\"></i><br/>\\n      <span>{{ 'CARD.PLEASE_WAIT_CARD_LIMIT'|translate }}</span>\\n    </p>\\n    {{alertPopupMsg.message}}\\n    <div class=\\\"profileDesc\\\" *ngIf=\\\"alertPopupMsg.type=='limit'\\\">\\n      <a class=\\\"modBtn\\\" [routerLink]=\\\"['/profile']\\\">{{ 'CV.GO_TO_LIST'|translate }}</a>\\n    </div>\\n    <div class=\\\"profileDesc\\\" *ngIf=\\\"alertPopupMsg.type!='limit'\\\">\\n        <a class=\\\"modBtn\\\" (click)=\\\"modal.dismiss()\\\">{{ 'LANDING.OK'|translate }}</a>\\n      </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #paymentModal let-modal>\\n    <div class=\\\"modal-body\\\" >\\n        <div class=\\\"row justify-content-center proEdit\\\">\\n\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"loader-container pay\\\" *ngIf=\\\"loader.pay\\\">\\n                <div class=\\\"loader-content\\\" >\\n                  <i class=\\\"fa fa-cog fa-spin\\\"></i><br />\\n                  {{ 'CV.TRANSACTION_LOAD_MSG' | translate }}\\n                </div>\\n              </div>\\n              <div class=\\\"paymentOpt\\\">\\n\\n                  <div class=\\\"alert alert-success text-center\\\"\\n                  *ngIf=\\\"payForm.successMsg\\\">{{ payForm.successMsg }}</div>\\n\\n                  <div class=\\\"alert alert-danger text-center\\\"\\n                  *ngIf=\\\"payForm.errorMsg\\\">{{ payForm.errorMsg }}</div>\\n\\n                <div class=\\\"formWrap inlineAll\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.PAY_ACCEPTED_CARD'| translate }} :</label>\\n                  <span><img src=\\\"assets/images/card.png\\\" alt=\\\"\\\"></span>\\n                </div>\\n                <div class=\\\"formWrap\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.PAY_CARD_HOLDER_NAME'| translate }} :</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"payForm.cardHolderName\\\" name=\\\"cardHolderName\\\"\\n                    class=\\\"col-xl-8 inpField fullWidth\\\" value=\\\"\\\">\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"payForm.submit && !payForm.cardHolderName\\\">{{ 'CV.PAY_NAME_REQUIRED'| translate }}\\n                      </div>\\n                </div>\\n                <div class=\\\"formWrap\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.PAY_CARD_NUMBER'| translate }} :</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"payForm.cardNumber\\\" name=\\\"cardNumber\\\" class=\\\"col-xl-8 inpField fullWidth\\\"\\n                    value=\\\"\\\" maxlength=\\\"16\\\" appOnlynumaricinput>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"payForm.submit && !payForm.cardNumber\\\">{{ 'CV.PAY_CARD_REQUIRED'| translate }}\\n                      </div>\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"payForm.submit && payForm.cardNumber && payForm.cardNumber.length != 16\\\">{{ 'CV.PAY_CARD_LENGTH'| translate }}\\n                        </div>\\n                </div>\\n                <div class=\\\"formWrap inlineAll\\\">\\n                  <label class=\\\"col-xl-4 noGap\\\" for=\\\"\\\">{{ 'CV.PAY_EXP_DATE'| translate }} :</label>\\n\\n                  <select class=\\\"inpField autoWidth withSpace\\\" [(ngModel)]=\\\"payForm.expMonth\\\" name=\\\"expMonth\\\">\\n                    <option *ngFor=\\\"let month of months\\\" value=\\\"{{ month }}\\\">{{ ((month<10)?'0'+month:month) }}</option>\\n                  </select>\\n\\n\\n                  <select class=\\\"inpField autoWidth withSpace\\\" [(ngModel)]=\\\"payForm.expYear\\\" name=\\\"expYear\\\">\\n                    <option *ngFor=\\\"let year of years\\\" value=\\\"{{ year }}\\\">{{ year }}</option>\\n                  </select>\\n\\n\\n                  <label for=\\\"\\\" class=\\\"cvv-label\\\">CVV :</label>\\n                  <input class=\\\"inpField cvcInp\\\" type=\\\"text\\\" [(ngModel)]=\\\"payForm.cvvCode\\\" name=\\\"cvvCode\\\" value=\\\"\\\" maxlength=\\\"3\\\" pattern= \\\"[0-9]\\\" appOnlynumaricinput>\\n                  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"payForm.submit && !payForm.cvvCode\\\">{{ 'CV.PAY_CVV_REQUIRED'| translate }}\\n                      </div>\\n\\n                </div>\\n\\n                <div class=\\\"formWrap alt\\\">\\n                  <div class=\\\"text-center\\\">\\n                    <input class=\\\"submBtn\\\" type=\\\"submit\\\" name=\\\"\\\" (click)=\\\"resetPayForm()\\\" value=\\\"{{ 'CV.CANCEL'| translate }}\\\">\\n                    <input class=\\\"submBtn black\\\" type=\\\"submit\\\" name=\\\"\\\" value=\\\"{{ 'CV.PAY'| translate }}\\\" (click)=\\\"submitPayForm()\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n    </div>\\n  </ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY2FyZGJ1aWxkZXIvY2FyZGJ1aWxkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 05-04-2019\n# Module                : CardbuilderComponent                     \n# Object name           : CardbuilderComponent    \n# Functionality         : All card building  operations\n# Purpose               : constructor, ngOnInit, \n*******************************************************/\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UsersService } from \"../../services/users.service\";\nimport { CvcardService } from \"../../services/cvcard.service\";\nimport { CommonService } from \"../../services/common.service\";\nimport { Router } from '@angular/router';\nimport * as global from '../../globalConfig';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { PicturepathPipe } from '../../global/picturepath.pipe';\nimport { LoaderService } from '../../loader/loader.service';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-cardbuilder',\n  templateUrl: './cardbuilder.component.html',\n  styleUrls: ['./cardbuilder.component.scss'],\n  providers: [PicturepathPipe]\n})\nexport class CardbuilderComponent implements OnInit {\n  @ViewChild('alertPopup') alertPopup;// for alert popup\n  @ViewChild('paymentModal') paymentModal;// for payment popup\n\n\n  myCarouselOptions = { items: 5, margin: 24, dots: false, nav: true, responsive: { 0: { items: 1 }, 415: { items: 2 }, 767: { items: 3 }, 1023: { items: 4 }, 1199: { items: 5 } } };\n  priceConversionRate: any = 1;\n  activeCurrency: any = 'USD';\n  activeCurrenySymbol: any = '$';\n  entryType: string = 'manual';\n  currencyList: Array<any> = [];\n  currencySymbols: any = {\n    \"USD\": \"$\",\n    \"EGP\": \"£\",\n    \"AED\": \"د.إ\",\n    \"SAR\": \"ر.س\"\n  }\n  templateList: Array<any> = [];\n  activeTemplate: any = null;\n  activeTemplatePrice: any = null;\n  cardPhoto: any = null;\n  cardForm: any = {\n    \"title\": '',\n    \"name\": '',\n    \"position\": '',\n    \"mobile\": '',\n    \"email\": '',\n    \"country_id\": null,\n    \"country_name\": \"\",\n    \"city_id\": null,\n    \"city_name\": \"\",\n    \"website\": '',\n    \"photo\": '',\n    \"desc\": '',\n    \"payStatus\": false,\n    \"submit\": false\n\n  };\n  photoErr: any = {\n    size: false,\n    type: false\n  };\n  countryList: Array<any> = []; // country list from db\n  cityList: Array<any> = []; // city list from db\n  loader: any = {\n    template: false,\n    limit: false,\n    pay: false,\n    cv: false\n  };\n  alertPopupMsg: any = {\n    message: '',\n    type: ''\n  }\n  payForm: any = {\n    \"cardHolderName\": '',\n    \"cardNumber\": '',\n    \"expMonth\": 1,\n    \"expYear\": '',\n    \"cvvCode\": '',\n    \"submit\": false,\n    \"successMsg\": \"\",\n    \"errorMsg\": \"\",\n  };\n  years: Array<any> = [];\n  months: Array<any> = [];\n  currentYear: any = new Date().getFullYear();\n  userCardList: Array<any> = [];\n  limitStatus: any = 1;\n  loggedInUser: any = null;\n  defaultCard:any = null;\n  /* Function Name : constructor\n* Author : \n* Created Date : 05-04-2019 \n* Modified Date : *\n* Purpose : to assign the helpfull obj\n* PARAMS :  \n*/\n  constructor(\n    private router: Router,\n    private translate: TranslateService,\n    private userService: UsersService,\n    private cvCardService: CvcardService,\n    private cService: CommonService,\n    private loderService: LoaderService,\n    private filePathPipe: PicturepathPipe,\n    private modalService: NgbModal) {\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n  }\n  /* Function Name : ngOnInit\n\t* Author :\n\t* Created Date : 05-04-2019\n\t* Modified Date : *\n\t* Purpose : to check the card limit after html render\n\t* PARAMS :\n  */\n  ngOnInit() {\n\n    this.getUserCard();\n    this.payForm.expYear = this.currentYear;\n    for (let y = this.currentYear; y < this.currentYear + 100; y++) {\n      this.years.push(y);\n    }\n    for (let m = 1; m <= 12; m++) {\n      this.months.push(m);\n    }\n\n\n    this.cvCardService.getCurrencyList()\n      .subscribe((responseData: any) => {\n        if (responseData.statustext == 'success') {\n          this.currencyList = responseData.data;\n        }\n\n      });\n\n    this.cvCardService.getTemplateList({\n      type: 2\n    })\n      .subscribe((responseData: any) => {\n        if (responseData.statustext == 'success') {\n          this.templateList = responseData.data;\n        }\n        this.loader.template = false;\n      });\n\n    this.userService.getCvContent('personal')\n      .subscribe((responseCountryList: any) => {\n        if (responseCountryList.statustext == 'success') {\n          this.countryList = responseCountryList.data.country;\n          this.getCityList();\n        }\n      });\n\n\n\n  }\n\n  /* Function Name : getUserCard\n\t* Author : \n\t* Created Date : 27-08-2019 \n\t* Modified Date : *\n\t* Purpose : to get card list\n\t* PARAMS :  \n\t*/\n  getUserCard() {\n    this.loggedInUser = this.cService.getLoggedUserData();\n    this.cvCardService.getCardList({\n      id: btoa((this.loggedInUser._i))\n    }).subscribe((responseData: any) => {\n      if (responseData.statustext == 'success') {\n        let cardList = responseData.data.list;\n        this.userCardList = cardList;\n        this.userCardList.push({\n          card_title: \"Preview Card\",\n          price: '0.00',\n          preview: true\n        });\n        this.limitStatus = responseData.data.limitStatus;\n        this.defaultCard = null;\n        this.defaultCard = this.userCardList.find((item)=>{\n          return item.is_default == 1;\n        });\n      }\n    });\n\n  }\n\n  /* Function Name : getCityList\n\t* Author : \n\t* Created Date : 05-04-2019 \n\t* Modified Date : *\n\t* Purpose : to get city list\n\t* PARAMS :  \n\t*/\n  getCityList() {\n    this.cityList = [];\n    let countryId = this.cardForm.country_id;\n    this.cService.getCityList(countryId)\n      .subscribe((responseData: any) => {\n        if (responseData.statustext === 'success') {\n          this.cityList = responseData.data;\n        }\n      })\n  }\n  /* Function Name : setCardEntryType\n* Author :\n* Created Date : 08-04-2019\n* Modified Date : *\n* Purpose : to set card entry type\n* PARAMS : type(browse/manual/cv)\n*/\n  setCardEntryType(type) {\n    this.resetCardForm();\n    this.entryType = type;\n    if (this.entryType == 'cv') {\n      this.loader.cv = true;\n      this.cvCardService.getDefaultCv()\n        .subscribe((responseData: any) => {\n          this.loader.cv = false;\n          if (responseData.statustext == 'success') {\n            let defaultCv = JSON.parse(responseData.data.cv_details);\n            this.cardForm.name = defaultCv.personal.first_name + ' ' + defaultCv.personal.last_name;\n            this.cardForm.mobile = defaultCv.personal.mobile_no;\n            this.cardForm.country_id = defaultCv.personal.country_id;\n            this.getCityList();\n            this.cardForm.city_id = defaultCv.personal.city_id;\n            this.cardForm.website = defaultCv.personal.website;\n            this.cardForm.email = defaultCv.personal.email;\n            this.cardForm.photo = defaultCv.profilePic;\n          } else {\n            this.translate.get(['COMMON.ERROR', 'CARD.CV_DATA_ERROR']).subscribe((tData) => {\n              swal({\n                title: tData['COMMON.ERROR'],\n                text: tData['CARD.CV_DATA_ERROR'],\n                icon: 'error'\n              });\n              // this.alertPopupMsg.message = tData;\n              // this.alertPopupMsg.type='default_cv';\n              // this.modalService.open(this.alertPopup, {  size: 'sm', centered: true, windowClass: 'DefaultModal' });\n            })\n          }\n        })\n    }\n  }\n  /* Function Name : setActiveCurrency\n* Author :\n* Created Date : 08-04-2019\n* Modified Date : *\n* Purpose : to set active currency\n* PARAMS :\n*/\n  setActiveCurrency() {\n    let activeCurrency = this.currencyList.find((item) => {\n      return item.name === this.activeCurrency;\n    });\n    this.priceConversionRate = activeCurrency.value;\n    this.activeCurrenySymbol = this.currencySymbols[activeCurrency.name];\n  }\n  /* Function Name : setActiveTemplate\n\t* Author :\n\t* Created Date : 08-04-2019\n\t* Modified Date : *\n\t* Purpose : to set the active template;\n\t* PARAMS :  template\n  */\n  setActiveTemplate(template) {\n    this.activeTemplate = template.id;\n    this.activeTemplatePrice = this.priceConversionRate * template.price;\n    this.cardForm.submit = false;\n    if (this.activeTemplatePrice == 0) {\n      this.cardForm.payStatus = true;\n    } else {\n      this.cardForm.payStatus = false;\n    }\n  }\n  /* Function Name : saveCardForm\n\t* Author :\n\t* Created Date : 09-04-2019\n\t* Modified Date : *\n\t* Purpose : to save card \n\t* PARAMS :  \n  */\n  saveCardForm() {\n    if (this.limitStatus == 0) {\n\n      this.translate.get(['COMMON.ERROR', 'CARD.BUILD_LIMIT_COMPLETE']).subscribe((tData) => {\n        swal({\n          title: tData['COMMON.ERROR'],\n          text: tData['CARD.BUILD_LIMIT_COMPLETE'],\n          icon: \"error\",\n        })\n      })\n    } else {\n\n      this.cardForm.submit = true;\n\n      let errorCount = 0;\n      if (this.entryType != 'browse') {\n\n        if (\n          (!this.cardForm.title ||\n            !this.cardForm.name ||\n            !this.cardForm.mobile ||\n            !this.cardForm.country_id ||\n            !this.cardForm.city_id ||\n            !this.cardForm.email)\n        ) {\n          errorCount += 1;\n        }\n        if (!this.activeTemplate) {\n          errorCount += 1;\n        }\n        if (this.cardForm.photo && (this.photoErr.size || this.photoErr.type)) {\n          errorCount += 1;\n        }\n        if (this.cardForm.desc && this.cardForm.desc.split(\" \").length > 7) {\n          errorCount += 1;\n        }\n      } else {\n\n        if (!this.cardForm.title || !this.cardPhoto) {\n          this.photoErr.type = true;\n          errorCount += 1;\n        } else {\n          this.photoErr.type = false;\n        }\n      }\n      if (errorCount == 0) {\n        /* if (this.entryType != 'browse' && (this.cardForm.payStatus == false)) {\n          this.modalService.open(this.paymentModal, {\n            backdrop: 'static',\n            keyboard: false, size: 'lg', centered: true, windowClass: 'DefaultModal'\n          });\n        } else {*/\n\n          let postdata = {};\n          if (this.entryType == 'browse') {\n            postdata = {\n              \"title\": this.cardForm.title,\n              \"type\": this.entryType,\n              \"card_photo\": this.cardPhoto\n            }\n          } else {\n            let selectedCountry = this.countryList.find((item) => {\n              return item.id == this.cardForm.country_id;\n            });\n            this.cardForm.country_name = selectedCountry.name;\n\n            let selectedCity = this.cityList.find((item) => {\n              return item.id == this.cardForm.city_id;\n            });\n            this.cardForm.city_name = selectedCity.name;\n\n            postdata = {\n              card_title: this.cardForm.title,\n              \"type\": this.entryType,\n              template_id: this.activeTemplate,\n              template_price: this.activeTemplatePrice,\n              card_details: JSON.stringify(this.cardForm)\n            };\n          }\n          this.cvCardService.saveCard(postdata).subscribe((responseData: any) => {\n            if (responseData.statustext == 'success') {\n              this.router.navigate(['/card/success', responseData.data.token]);\n            }\n\n          });\n        /* } */\n      } else {\n        global.SCROLL_TO_TOP();\n      }\n    }\n  }\n  /* Function Name : openBrowsePhoto\n\t* Author :\n\t* Created Date : 10-04-2019\n\t* Modified Date : *\n\t* Purpose : to browse own card image\n\t* PARAMS :  \n  */\n  openBrowsePhoto() {\n    document.getElementById('cardImage').click();\n  }\n  /* Function Name : manageCardPhoto\n    * Author :\n    * Created Date : 10-04-2019\n    * Modified Date : *\n    * Purpose : to manage card image for form\n    * PARAMS :  \n    */\n  manageCardPhoto(e) {\n    if (e.target.files) {\n      this.photoErr.size = false;\n      this.photoErr.type = false;\n      this.cardForm.photo = null;\n      let file = e.target.files[0];\n      if (file.size > 256000) { // check image size < 250kb\n        this.photoErr.size = true;\n      } else if (file.type.indexOf(\"image/\") == -1) {\n        this.photoErr.type = true;\n      } else {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          this.cardForm.photo = reader.result;\n        };\n      }\n    }\n  }\n  /* Function Name : ownCardImageManage\n    * Author :\n    * Created Date : 11-04-2019\n    * Modified Date : *\n    * Purpose : to manage  own card image\n    * PARAMS :  \n    */\n  ownCardImageManage(e) {\n    let file = e.target.files;\n    if (file) {\n      file = file[0];\n      this.photoErr.size = false;\n      this.photoErr.type = false;\n      this.cardPhoto = '';\n      if (file.size > 256000) { // check image size < 250kb\n        this.photoErr.size = true;\n      } else if (file.type.indexOf(\"image/\") == -1) {\n        this.photoErr.type = true;\n      } else {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          this.cardPhoto = reader.result;\n        };\n      }\n    }\n  }\n  /* Function Name : submitPayForm\n    * Author :\n    * Created Date : 12-04-2019\n    * Modified Date : *\n    * Purpose : to submit payment form\n    * PARAMS :  \n    */\n  submitPayForm() {\n    this.payForm.submit = true;\n    // this.loader.pay = true;\n    let errorCount = 0;\n    if (!this.payForm.cardHolderName) {\n      errorCount += 1;\n    }\n    if (!this.payForm.cardNumber) {\n      errorCount += 1;\n    }\n    if (!this.payForm.cvvCode) {\n      errorCount += 1;\n    }\n\n    if (errorCount == 0) {\n      this.loader.pay = true;\n      setTimeout(() => {\n        this.resetPayForm();\n        this.loader.pay = false;\n        this.cardForm.payStatus = true;\n        this.saveCardForm();\n\n      }, 5000);\n    }\n  }\n  /* Function Name : resetPayForm\n    * Author :\n    * Created Date : 12-04-2019\n    * Modified Date : *\n    * Purpose : to reset the payment form\n    * PARAMS :  \n    */\n  resetPayForm() {\n    this.payForm = {\n      \"cardHolderName\": '',\n      \"cardNumber\": '',\n      \"expMonth\": 1,\n      \"expYear\": this.currentYear,\n      \"cvvCode\": '',\n      \"successMsg\": \"\",\n      \"errorMsg\": \"\",\n      \"submit\": false\n    };\n    this.modalService.dismissAll();\n  }\n  /* Function Name : resetCardForm\n    * Author :\n    * Created Date : 12-04-2019\n    * Modified Date : *\n    * Purpose : to reset the card form\n    * PARAMS :  \n    */\n  resetCardForm() {\n    this.cardForm = {\n      \"title\": '',\n      \"name\": '',\n      \"position\": '',\n      \"mobile\": '',\n      \"email\": '',\n      \"country_id\": null,\n      \"country_name\": \"\",\n      \"city_id\": null,\n      \"city_name\": \"\",\n      \"website\": '',\n      \"photo\": '',\n      \"desc\": '',\n      \"payStatus\": false,\n      \"submit\": false\n    };\n    this.photoErr = {\n      size: false,\n      type: false\n    };\n  }\n  /* Function Name : goToCard\n      * Author :\n      * Created Date : 27-08-2019\n      * Modified Date : *\n      * Purpose : to go to the user card\n      * PARAMS :  card\n      */\n  goToCard(card) {\n    let userId = this.loggedInUser._i;\n    if (card.preview) {\n      this.cvCardService.saveDefaultCard({\n        user_id: btoa(userId)\n      })\n        .subscribe((responseData) => {\n          setTimeout(() => {\n            this.loderService.show();\n          }, 100)\n          setTimeout(() => {\n            this.loderService.hide();\n            let cvPath = this.filePathPipe.transform('careery-' + userId + '-card.pdf', 'card');\n            var win = window.open(cvPath, '_blank');\n            win.focus();\n          }, 3000);\n        })\n    } else {\n      let cardPath = this.filePathPipe.transform(card.card_file, 'card');\n      var win = window.open(cardPath, '_blank');\n      win.focus();\n    }\n  }\n\n  /* Function Name : removeCard\n    * Author :\n    * Created Date : 27-08-2019\n    * Modified Date : *\n    * Purpose : to remove user card\n    * PARAMS :  card\n    */\n  removeCard(card) {\n    this.translate.get(['CARD.CARD_REMOVE_CONFIRM']).subscribe((tData) => {\n      swal({\n        title: '',\n        text: tData['CARD.CARD_REMOVE_CONFIRM'],\n        icon: \"warning\",\n        buttons: {\n          cancel: true,\n          confirm: true,\n        },\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.loader.card_remove = true;\n          this.cvCardService.removeCard({\n            cardId: btoa(card.id)\n          })\n            .subscribe((responseData: any) => {\n              this.loader.card_remove = false;\n              if (responseData.statustext == 'success') {\n                this.getUserCard();\n              }\n            })\n        }\n      });\n    });\n  }\n/* Function Name : setIsDefault\n    * Author :\n    * Created Date : 27-08-2019\n    * Modified Date : *\n    * Purpose : to set user card as default\n    * PARAMS :  card\n    */\n  setIsDefault(card) {\n      this.cvCardService.setCardDefault({\n        card_id: card.id\n      }).subscribe((responsData:any)=>{\n        if (responsData.statustext == 'success') {\n           this.getUserCard();\n        }\n      });\n  }\n}\n","module.exports = \"<div class=\\\"commonWrap\\\">\\n  <h2 class=\\\"withLine\\\"><span>{{ 'CARD.CARD_BUILDER'| translate }}</span></h2>\\n  <div class=\\\"wrapPagenotFound\\\">\\n    <h3>{{ 'COMMON.SUCCESS'| translate }}!</h3>\\n    <div>\\n      {{ 'CARD.SUCCESS_MSG' | translate }}\\n    </div>\\n    \\n    <div >\\n      <a [routerLink]=\\\"['/card/build']\\\" class=\\\"cv-action-btn\\\">{{ 'CARD.MY_CARDS'| translate }}</a>\\n      <a download=\\\"mycard.pdf\\\" [href]=\\\"cardDetails?.card_file| picturepath:'card'\\\" target=\\\"_blank\\\" class=\\\"cv-action-btn\\\">{{ 'CV.DOWNLOAD'| translate }}</a>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY2FyZGJ1aWxkZXJzdWNjZXNzL2NhcmRidWlsZGVyc3VjY2Vzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CommonService } from \"../../services/common.service\";\nimport { CvcardService } from \"../../services/cvcard.service\";\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-cardbuildersuccess',\n  templateUrl: './cardbuildersuccess.component.html',\n  styleUrls: ['./cardbuildersuccess.component.scss']\n})\nexport class CardbuildersuccessComponent implements OnInit {\n  cardDetails: any = null;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private translate: TranslateService,\n    private cService: CommonService,\n    private cvcardService: CvcardService) {\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe((params)=>{\n      let token = params.token;\n      this.cvcardService.getCardDetails({\n        \"card_token\": token\n      }).subscribe((responsData:any)=>{\n        if (responsData.statustext == 'success') {\n          this.cardDetails = responsData.data;\n        }\n      })\n    });\n  }\n\n}\n","module.exports = \"<h2 class=\\\"withLine\\\"><span>{{ 'CHANGE_PASSWORD.CHANGEPASSWORD' | translate }}</span></h2>\\n\\n<div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"loginSearch\\\">\\n            <div class=\\\"loginSearchLeft\\\">\\n\\n                <div class=\\\"forLogin\\\">\\n                    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"passwordForm\\\" (submit)=\\\"passwordAction()\\\" novalidate>\\n                        <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">{{successMessage}}</div>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n                        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"passwordForm.hasError('notSame')\\\">\\n                            {{ 'CHANGE_PASSWORD.CONFIRM_PASSWORD_MISMATCH'| translate }}</div>\\n                        <div class=\\\"formWrap\\\">\\n                            <label for=\\\"email\\\">{{ 'CHANGE_PASSWORD.OLDPASSWORD' | translate }} <small><i class=\\\"fa fa-asterisk landing-req-sign\\\" aria-hidden=\\\"true\\\"></i></small>:</label>\\n\\n                            <input class=\\\"txtField\\\" type=\\\"password\\\" name=\\\"oldpassword\\\" id=\\\"oldpassword\\\" formControlName=\\\"oldpassword\\\" placeholder=\\\"{{ 'CHANGE_PASSWORD.OLDPASSWORD' | translate }}\\\" required>\\n\\n                            <div *ngIf=\\\"passwordForm.controls['oldpassword'].invalid && (passwordForm.controls['oldpassword'].dirty || passwordForm.controls['oldpassword'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"passwordForm.controls['oldpassword'].errors.required\\\">{{ 'CHANGE_PASSWORD.OLD_PASSWORD_REQUIRED' | translate }}</div>\\n                                <div *ngIf=\\\"passwordForm.controls['oldpassword'].hasError('whitespace')\\\">{{ 'LANDING.INVALID'| translate }}</div>\\n                            </div>\\n\\n                        </div>\\n\\n                        <div class=\\\"formWrap\\\">\\n                            <label for=\\\"email\\\">{{'CHANGE_PASSWORD.NEWPASSWORD' | translate}} <small><i class=\\\"fa fa-asterisk landing-req-sign\\\" aria-hidden=\\\"true\\\"></i></small>:</label>\\n                            <input class=\\\"txtField\\\" type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"{{'CHANGE_PASSWORD.NEWPASSWORD' | translate}}\\\" required>\\n                            <div *ngIf=\\\"passwordForm.controls['password'].invalid && (passwordForm.controls['password'].dirty || passwordForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"passwordForm.controls['password'].errors.required\\\">{{ 'CHANGE_PASSWORD.NEW_PASSWORD_REQUIRED' | translate }}</div>\\n                                 <div *ngIf=\\\"passwordForm.controls['password'].hasError('whitespace')\\\">{{ 'LANDING.INVALID'| translate }}</div>\\n                                 <div *ngIf=\\\"passwordForm.controls['password'].errors.pattern\\\">\\n                                    {{ 'LANDING.PASSWORD_PATTERN'| translate }}</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"formWrap\\\">\\n                            <label for=\\\"email\\\">{{'CHANGE_PASSWORD.CONFIRMPASSWORD' | translate}} <small><i class=\\\"fa fa-asterisk landing-req-sign\\\" aria-hidden=\\\"true\\\"></i></small>:</label>\\n                            <input class=\\\"txtField\\\" type=\\\"password\\\" name=\\\"confirm_password\\\" id=\\\"confirm_password\\\" formControlName=\\\"confirm_password\\\" placeholder=\\\"{{'CHANGE_PASSWORD.CONFIRMPASSWORD' | translate}}\\\" required>\\n                            <div *ngIf=\\\"passwordForm.controls['confirm_password'].invalid && (passwordForm.controls['confirm_password'].dirty || passwordForm.controls['confirm_password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"passwordForm.controls['confirm_password'].errors.required\\\">{{ 'CHANGE_PASSWORD.CONFIRM_PASSWORD_REQUIRED' | translate }}</div>\\n                                <div *ngIf=\\\"passwordForm.controls['confirm_password'].hasError('whitespace')\\\">{{ 'LANDING.INVALID'| translate }}</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"formWrap\\\">\\n\\n                            <button class=\\\"btnGreen\\\" type=\\\"submit\\\" [disabled]=\\\"passwordForm.pristine || passwordForm.invalid\\\">\\n                            <span *ngIf=\\\"loader.changePassword\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\" ></i></span>\\n                            {{'CHANGE_PASSWORD.SUBMIT' | translate}}</button>\\n\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","module.exports = \".loginSearch .loginSearchLeft .forLogin {\\n  background: none !important;\\n  box-shadow: none; }\\n\\nh2.withLine {\\n  margin-top: 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9jaGFuZ2VwYXNzd29yZC9DOlxcVXNlcnNcXHNoYWR5Lm1vaGFtZWRcXERvd25sb2Fkc1xcY2FyZWVyeUFuZy9zcmNcXGFwcFxccHJvZmlsZVxcY2hhbmdlcGFzc3dvcmRcXGNoYW5nZXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQXlDLDRCQUEwQjtFQUFFLGlCQUFlLEVBQUc7O0FBQ3ZGO0VBQWEsaUJBQWUsRUFBRyIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY2hhbmdlcGFzc3dvcmQvY2hhbmdlcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW5TZWFyY2ggLmxvZ2luU2VhcmNoTGVmdCAuZm9yTG9naW57IGJhY2tncm91bmQ6bm9uZSAhaW1wb3J0YW50OyBib3gtc2hhZG93Om5vbmU7fVxuaDIud2l0aExpbmV7IG1hcmdpbi10b3A6NjBweDt9Il19 */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 25-01-2019\n# Module                : ChangepasswordComponent                     \n# Object name           : ChangepasswordComponent    \n# Functionality         : Block users list\n# Purpose               : constructor, ngOnInit, noWhitespaceValidator, settimeoutMSG, createPasswordForm, passwordAction\n*******************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport { FormBuilder,FormGroup, Validators, NgForm } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport {UsersService} from '../../services/users.service';\nimport {CommonService} from '../../services/common.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.scss']\n})\nexport class ChangepasswordComponent implements OnInit {\n\tpasswordForm  : FormGroup; // passowrd form\n\terrorMessage : string = \"\"; // error message\n\tsuccessMessage : string;  // success message\n  confirmMismatchErr: string = ''; // confirm password error message\n\n  loader :any =  { // loader \n    \"changePassword\":false\n  };\n\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and define the languages data\n\t* PARAMS : route, fb , usersService, translate, cService\n\t*/\n  constructor(\n    private route: Router, \n    private fb: FormBuilder,\n    public usersService : UsersService, \n    translate: TranslateService,\n    private cService:CommonService\n  \t) { \n\n\t\tthis.cService.activelang.subscribe((lang)=>{\n\n\t\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\t\ttranslate.setDefaultLang(lang);\n\n\t\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\t\ttranslate.use(lang);\n\t\t});\n\n    translate.get('CHANGE_PASSWORD.CONFIRM_PASSWORD_MISMATCH').subscribe((tData)=>{\n      this.confirmMismatchErr = tData;\n    });\n\t\tthis.createPasswordForm();\n\n  }\n  /* Function Name : ngOnInit\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS : \n\t*/  \n  ngOnInit() {\n\n  \t\n  }\n\n  /* Function Name : noWhitespaceValidator\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to validate white space from input box\n\t* PARAMS : control\n\t*/  \n  public noWhitespaceValidator(control: FormControl) {\n      const isWhitespace = (control.value || '').trim().length === 0;\n      const isValid = !isWhitespace;\n      return isValid ? null : { 'whitespace': true };\n  }\n  \n  /* Function Name : settimeoutMSG\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to message display\n\t* PARAMS :  type\n\t*/  \n  settimeoutMSG(type='') {\n    setTimeout(\n      function() {\n        if(type == 'error')\n        {\n          this.errorMessage = \"\";\n\n        } else {\n          this.successMessage = '';\n        }    \n      }, 5000);\n  }\n\n\n  /* Function Name : createPasswordForm\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to create the change password form\n\t* PARAMS : \n\t*/  \n  createPasswordForm() {\n    this.passwordForm = this.fb.group({\n    oldpassword: ['', [Validators.required, this.noWhitespaceValidator] ],\n    password: ['', [Validators.required, this.noWhitespaceValidator, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{5,}')] ],\n    confirm_password: ['', [Validators.required, this.noWhitespaceValidator] ],\n    \n    }, {validator: this.confirmpasswordValidation });\n  }\n\n  /* Function Name : passwordAction\n\t* Author : \n\t* Created Date : 19-02-2019 \n\t* Modified Date : *\n\t* Purpose : to submit the change password form\n\t* PARAMS : \n\t*/  \n  passwordAction()\n  {\n    let formPostData = this.passwordForm.value;\n    //console.log(formPostData);\n    \n      if (this.passwordForm.value.password === this.passwordForm.value.confirm_password) {\n        this.loader.changePassword = true;\n\n        this.usersService.changePassword(formPostData).subscribe((response:any)=>{\n          if(response['statustext'] === 'success'){\n            this.errorMessage = '';\n            this.successMessage = response['message'];\n            this.passwordForm.reset();\n            this.route.navigate(['change-password']);\n\n          } else {\n            this.successMessage = '';\n            this.errorMessage = response['message'];\n            this.settimeoutMSG('error');\n          }\n          this.loader.changePassword = false;\n        \n      });\n\n    } else {\n\n      this.successMessage = '';\n      this.errorMessage = this.confirmMismatchErr;\n      this.settimeoutMSG('error');\n      this.loader.changePassword = false;\n    }\n\n  }\n\n  public confirmpasswordValidation(group: FormGroup) {\n    let pass = group.controls.password.value;\n    let confirmPass = group.controls.confirm_password.value;\n    if (pass && confirmPass) {\n      return  pass === confirmPass ? null : { notSame: true }     \n    } else {\n      return null;\n    }\n  }\n\n\n\n\n}\n","module.exports = \"<div class=\\\"proEdit forAllInvitations\\\">\\n  <h2 class=\\\"withLine\\\"><span>{{ 'COMMON.ALL_MESSAGES'|translate }}</span></h2>\\n\\n  <div class=\\\"inviteBlock\\\">\\n    <div *ngIf=\\\"messagesList.length > 0\\\">\\n      <div class=\\\"notification-row alt\\\" *ngFor=\\\"let message of messagesList; let i = index\\\"\\n        [ngClass]=\\\"((i%2==0)?'noBg':'')\\\">\\n\\n              <div class=\\\"notificationImg\\\" *ngIf=\\\"message?.profile_pic\\\"><img *ngIf=\\\"message?.profile_pic\\\" [src]=\\\"(message?.profile_pic) | picturepath:'users'\\\" alt=\\\"\\\"></div>\\n              <div class=\\\"notificationImg\\\" *ngIf=\\\"!message?.profile_pic\\\" >\\n                  \\n                  <img  *ngIf=\\\"message && !message.profile_pic && message.gender && message.experience_level\\\" src=\\\"assets/images/charachter/{{ message.gender+'_'+message.experience_level }}.png\\\" alt=\\\"\\\">\\n              </div>\\n              <div class=\\\"notificationBody\\\">\\n                <h3>{{message?.first_name + ' '+ message?.last_name}}</h3>\\n                <p class=\\\"tXt\\\">\\n                  <span *ngIf=\\\"message.type == 0\\\">{{ message.message }}</span>\\n                  <span *ngIf=\\\"message.type == 1 && message.is_image == 1\\\"><i class=\\\"fa fa-camera-retro\\\"></i> photo</span>\\n                  <span *ngIf=\\\"message.type == 1 && !message.is_image\\\"><i class=\\\"fa fa-file\\\"></i> media</span>\\n                </p>\\n              </div>\\n              <div class=\\\"notificationTime\\\">\\n                  <p class=\\\"time\\\">{{ (message?.posted_on) | amTimeAgo:true   }} {{ 'NOTIFICATIONS.AGO' | translate }}</p>\\n                  \\n                \\n                      <div class=\\\"inviteBlockBtn\\\">\\n                          <a class=\\\"green\\\" href=\\\"javascript:void(0);\\\" class=\\\"green\\\" (click)=\\\"setChatPerson(message.room)\\\" >{{ 'COMMON.MESSAGE' | translate }}</a>\\n                      </div>\\n                      \\n                    \\n              </div>\\n\\n      </div>\\n    </div>\\n    <ngx-pager [config]=\\\"paginationConfig\\\" [totalrow]='totalRows' class=\\\"defaultPagination\\\"></ngx-pager>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY2hhdC1oaXN0b3J5L2NoYXQtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from \"../../services/users.service\";\nimport { CommonService } from \"../../services/common.service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport * as CryptoJS from 'crypto-js';\n@Component({\n\tselector: 'app-chat-history',\n\ttemplateUrl: './chat-history.component.html',\n\tstyleUrls: ['./chat-history.component.scss']\n})\nexport class ChatHistoryComponent implements OnInit {\n\tmessagesList: Array<any> = [];\n\tpaginationConfig: any = null; // set pagination config\n\ttotalRows: any = null;\n\tcurrentPage: any = 1; // set current page\n\tloggedUser: any = null;\n\tconstructor(\n\t\tprivate uService: UsersService,\n\t\tprivate cService: CommonService,\n\t\tprivate translate: TranslateService\n\t) {\n\t\tthis.cService.activelang.subscribe((lang) => {\n\n\t\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\t\tthis.translate.setDefaultLang(lang);\n\n\t\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\t\tthis.translate.use(lang);\n\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\t\n\t\tthis.loggedUser = this.cService.getLoggedUserData();\n\n\t\tthis.getMessages();\n\t}\n\t/* Function Name : getMessages\n  * Author : \n  * Created Date : 26-06-2019 \n  * Modified Date : *\n  * Purpose : get the messages \n  * PARAMS :  \n  */\n\tgetMessages() {\n\t\tlet user = this.loggedUser;\n\t\tthis.messagesList = [];\n\t\tthis.paginationConfig = {\n\t\t\tperPage: 10,\n\t\t\trender: (page) => {\n\t\t\t\tthis.uService.getChatNotification({\n\t\t\t\t\tcpp: user._cpp,\n\t\t\t\t\t\"page\": page\n\t\t\t\t}).subscribe((responseData: any) => {\n\t\t\t\t\tif ((responseData['statustext'] === 'success')) {\n\t\t\t\t\t\tthis.totalRows = responseData.data.pagination.rowCount;\n\t\t\t\t\t\tthis.messagesList = responseData.data.list.map((item) => {\n\t\t\t\t\t\t\tlet msg = item;\n\t\t\t\t\t\t\tmsg.message = (item.type == 0) ? decodeURIComponent(item.message) : item.message;\n\t\t\t\t\t\t\treturn msg;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t}\n\t\t};\n\t}\n\n\n\t/* Function Name : setChatPerson\n* Author :\n* Created Date : 24-04-2019\n* Modified Date : *\n* Purpose : to set the current chat config\n* PARAMS :\n*/\n\tsetChatPerson(room) {\n\t\tthis.cService.setChatRoomEmit(room);\n\t}\n}\n","module.exports = \"<div class=\\\"searchWrap\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xl-9 col-lg-8\\\">\\n      <h2 class=\\\"withLine\\\"><span>{{ 'LISTPAGES.CONNECTIONS' |translate }}</span></h2>\\n      <div class=\\\"row searchResult\\\">\\n        <div class=\\\"col-xl-3 col-lg-4 col-md-4 col-6 searchCol\\\" *ngFor=\\\"let connection of connectionList; let i=index\\\" [class.hide]=\\\"connection.hide\\\">\\n          <div class=\\\"searchResultSingle\\\" >\\n            <div class=\\\"search-result-loader-container\\\" *ngIf=\\\"connectionList[i].loader\\\">\\n              <div class=\\\"loader-content\\\">\\n                <i class=\\\"fa fa-cog fa-spin\\\"></i>\\n                {{ 'PROFILE.PLEASE_WAIT' | translate }}\\n              </div>\\n            </div>\\n            <span class=\\\"searchClose\\\" (click)=\\\"removeConnection(connection, i)\\\"></span>\\n            <div (click)=\\\"gotoProfile(connection.friend_cpp)\\\">\\n            <div class=\\\"profileDescImg\\\" [class.inactive]=\\\"(currentTime - connection.friend_last_active_time) > (5*60) \\\">\\n            <img *ngIf=\\\"connection.friend_profile_pic\\\" alt=\\\"\\\" [src]=\\\"connection.friend_profile_pic| picturepath:'users'\\\">\\n            <img  *ngIf=\\\"connection && !connection.friend_profile_pic && connection.friend_gender && connection.friend_experience_level\\\" src=\\\"assets/images/charachter/{{ connection.friend_gender+'_'+connection.friend_experience_level }}.png\\\" alt=\\\"\\\">\\n          </div>\\n            \\n\\n            <h2>{{ connection.friend_first_name }}  {{ connection.friend_last_name }}</h2>\\n            <h3>{{ connection.friend_position_local_name }}</h3>\\n            <h4><i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i> {{ connection.mutualFriendCount }}  {{'LISTPAGES.MUTUAL_CONNECTION'|translate}}</h4>\\n          </div>\\n            <!-- <button class=\\\"blockBtn\\\" type=\\\"button\\\" (click)=\\\"openLg(content)\\\">Block</button> -->\\n      \\n          </div>\\n        </div>\\n        \\n      </div>\\n      <ngx-pager  [config]=\\\"paginationConfig\\\"  [totalrow]='totalRows' class=\\\"defaultPagination\\\"></ngx-pager>\\n    \\n      <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12 searchCol\\\" *ngIf=\\\"connectionList.length == 0\\\">\\n          {{\\\"PROFILEEDIT.NO_RECORD_FOUND\\\" | translate}}\\n      </div>\\n      \\n\\n    </div>\\n\\n    <div class=\\\"col-xl-3 col-lg-4\\\">\\n\\n      <app-notifications></app-notifications>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #content let-modal>\\n  <h2><span>Tell Us Why:</span></h2>\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"proEdit\\\">\\n      <div class=\\\"formWrap alt\\\">\\n        <select class=\\\"inpField fullWidth\\\" name=\\\"\\\">\\n          <option value=\\\"\\\">Select blocking reason</option>\\n        </select>\\n      </div>\\n      <div class=\\\"txtOr\\\">OR:</div>\\n      <div class=\\\"formWrap alt\\\">\\n        <textarea class=\\\"inpField fullWidth\\\" name=\\\"name\\\" placeholder=\\\"Type Blocking Reson......\\\"></textarea>\\n      </div>\\n      <div class=\\\"buttonGr\\\">\\n        <div class=\\\"text-center\\\">\\n          <button type=\\\"button\\\" class=\\\"btnOrange\\\" name=\\\"button\\\">Confirm Blocking</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY29ubmVjdGlvbnMvY29ubmVjdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 05-02-2019\n# Module                : ConnectionsComponent                     \n# Object name           : ConnectionsComponent    \n# Functionality         : get connection list of a user\n# Purpose               : constructor, ngOnInit, getConnectionList, getMutualFriend, clickPager, gotoProfile\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { UsersService } from \"../../services/users.service\";\nimport { CommonService } from \"../../services/common.service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from \"@angular/router\";\nimport * as global from '../../globalConfig';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-connections',\n  templateUrl: './connections.component.html',\n  styleUrls: ['./connections.component.scss']\n})\nexport class ConnectionsComponent implements OnInit {\n  paginationConfig: any = null; // set pagination config\n  totalRows: any = null;\n  currentPage: any = 1; // set current page\n  connectionList: Array<any> = []; // set connection list\n  currentUserData: any = null; // set current user data\n  currentTime: any = null; // set current time\n  profile_image_path: string = global.s3URL + 'userspic/'; // set user profile image path\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and define the languages data\n\t* PARAMS : uService, cService, translate, route\n\t*/\n  constructor(\n    private uService: UsersService,\n    private cService: CommonService,\n    private translate: TranslateService,\n    private route: Router) {\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n\n  }\n  /* Function Name : getConnectionList\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get all connection list of a user\n\t* PARAMS : \n\t*/\n  getConnectionList() {\n    this.uService.userConnectionList(this.currentPage)\n      .subscribe((responseData: any) => {\n        if (responseData.statustext == 'success') {\n          this.defineConnections(responseData.data.connections.list, responseData.data.user);\n        }\n      })\n  }\n\n  defineConnections(list, user) {\n    this.connectionList = list;\n    // this.paginationConfig = responseData.data.connections.pager;\n    this.currentUserData = user;\n    this.getMutualFriend();\n  }\n  /* Function Name : getMutualFriend\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to calculate multal connections\n\t* PARAMS : \n\t*/\n  getMutualFriend() {\n    let userFriendIdList: any = [];\n    let currentUserId = this.currentUserData.id.toString();\n    if (this.currentUserData.friendsIds && this.currentUserData.friendsIds.friend_ids) {\n      userFriendIdList = this.currentUserData.friendsIds.friend_ids;\n      userFriendIdList = userFriendIdList.split(\",\");\n    }\n    this.currentTime = (new Date()).getTime() / 1000;\n\n    this.connectionList.forEach((item, index) => {\n      this.connectionList[index]['mutualFriendCount'] = 0;\n      if (item.allFriends.friend_ids) {\n        let friendList = item.allFriends.friend_ids;\n        friendList = friendList.split(\",\");\n        friendList.splice(friendList.indexOf(currentUserId), 1);\n\n        let mutualFriendList = userFriendIdList.filter(function (obj) { return friendList.indexOf(obj) > -1; });\n        this.connectionList[index]['mutualFriendCount'] = mutualFriendList.length;\n\n      }\n    });\n  }\n  /* Function Name : ngOnInit\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS : \n\t*/\n  ngOnInit() {\n    localStorage.setItem('_sp', 'connection');\n    this.paginationConfig = {\n      perPage: 10,\n      render: (page) => {\n        this.currentPage = page;\n        this.cService.listData.subscribe((listData: any) => {\n          if (listData && listData.data) {\n            this.defineConnections(listData.data.list.list, listData.data.user);\n            this.totalRows = listData.data.list.pager.rowCount;\n          }\n        });\n        this.uService.userConnectionList(this.currentPage)\n          .subscribe((responseData: any) => {\n            if (responseData.statustext == 'success' && responseData.data.connections) {\n              this.defineConnections(responseData.data.connections.list, responseData.data.user);\n              this.totalRows = responseData.data.connections.pager.rowCount;\n            }\n          })\n\n      }\n    }\n  }\n  /* Function Name : clickPager\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to click on pagination page\n\t* PARAMS : e\n\t*/\n  clickPager(e) {\n    this.currentPage = e;\n    this.getConnectionList();\n  }\n  /* Function Name : gotoProfile\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to go to a user profile\n\t* PARAMS : friendCpp\n\t*/\n  gotoProfile(friendCpp) {\n    this.route.navigate(['/', friendCpp]);\n  }\n  /* Function Name : removeConnection\n\t* Author : \n\t* Created Date : 09-07-2019 \n\t* Modified Date : *\n\t* Purpose : to remove connection\n\t* PARAMS : connection\n\t*/\n  removeConnection(connection, connectionIndex) {\n    this.connectionList[connectionIndex]['loader'] = true;\n    this.uService.userConnectionRemove({\n      c_u_id: btoa(connection.friend_id)\n    }).subscribe((responsData: any) => {\n      this.connectionList[connectionIndex]['loader'] = false;\n      if (responsData.statustext == 'success') {\n        this.translate.get(['COMMON.SUCCESS']).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.SUCCESS'],\n            text: responsData.message,\n            icon: 'success'\n          }).then(()=>{\n            this.getConnectionList();\n          });\n        });\n      } else {\n        this.translate.get(['COMMON.ERROR']).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.ERROR'],\n            text: responsData.message,\n            icon: 'error'\n          });\n        });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"proEdit privacyWrap\\\">\\n  <h2 class=\\\"withLine\\\"><span>Control panel setting for points</span></h2>\\n\\n  <div class=\\\"\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-7\\\">\\n\\n        <div class=\\\"formTable\\\">\\n          <table class=\\\"table table-borderless\\\">\\n            <thead>\\n              <tr>\\n                <th>#</th>\\n                <th class=\\\"text-right\\\">Points</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td class=\\\"align-middle\\\">Courses</td>\\n                <td class=\\\"text-right\\\"><input type=\\\"number\\\" name=\\\"\\\" min=\\\"1\\\" value=\\\"0\\\"></td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"align-middle\\\">Daily Meal</td>\\n                <td class=\\\"text-right\\\"><input type=\\\"number\\\" name=\\\"\\\" min=\\\"1\\\" value=\\\"0\\\"></td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"align-middle\\\">CV Update</td>\\n                <td class=\\\"text-right\\\"><input type=\\\"number\\\" name=\\\"\\\" min=\\\"1\\\" value=\\\"0\\\"></td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"align-middle\\\">Profile Update</td>\\n                <td class=\\\"text-right\\\"><input type=\\\"number\\\" name=\\\"\\\" min=\\\"1\\\" value=\\\"0\\\"></td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"align-middle\\\">Recommendation</td>\\n                <td class=\\\"text-right\\\"><input type=\\\"number\\\" name=\\\"\\\" min=\\\"1\\\" value=\\\"0\\\"></td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"align-middle\\\">Connections</td>\\n                <td class=\\\"text-right\\\"><input type=\\\"number\\\" name=\\\"\\\" min=\\\"1\\\" value=\\\"0\\\"></td>\\n              </tr>\\n              <tr>\\n                <td class=\\\"align-middle\\\">Share</td>\\n                <td class=\\\"text-right\\\"><input type=\\\"number\\\" name=\\\"\\\" min=\\\"1\\\" value=\\\"0\\\"></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY29udHJvbGxwYW5lbHNldHRpbmdzL2NvbnRyb2xscGFuZWxzZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-controllpanelsettings',\n  templateUrl: './controllpanelsettings.component.html',\n  styleUrls: ['./controllpanelsettings.component.scss']\n})\nexport class ControllpanelsettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"profileMain\\\">\\n  <!-- <app-pagination [config]=\\\"paginationConfig\\\" (pager)=\\\"clickPager($event)\\\"></app-pagination> -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-3 col-xs-12\\\"></div>\\n    <div class=\\\"col-xl-6 col-xs-12\\\"></div>\\n    <div class=\\\"col-xl-6 col-xs-12\\\"></div>\\n</div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvbGlmZXRpbWUvbGlmZXRpbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lifetime',\n  templateUrl: './lifetime.component.html',\n  styleUrls: ['./lifetime.component.scss']\n})\nexport class LifetimeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"searchWrap\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"{{ (loggedInUser)? 'col-xl-9 col-lg-8':'col-xl-12 col-lg-12' }}\\\">\\n      <h2 class=\\\"withLine\\\"><span>Search Result</span></h2>\\n      <div class=\\\"row searchResult\\\">\\n\\n        <div class=\\\"col-xl-3 col-lg-4 col-md-4 col-6 searchCol\\\" *ngFor=\\\"let list of searchList; let i = index\\\" [class.hide]=\\\"searchList[i].hide\\\">\\n          <div class=\\\"searchResultSingle\\\">\\n            <div (click)=\\\"goToProfile(list)\\\">\\n              <div class=\\\"profileDescImg\\\" [class.inactive]=\\\"(currentTime - list.last_active_time) > (5*60) \\\">\\n                <img alt=\\\"\\\" *ngIf=\\\"list.profile_pic\\\" [src]=\\\"list.profile_pic| picturepath:'users'\\\">\\n\\n                <img  *ngIf=\\\"list && !list?.profile_pic && list.gender && list.experience_level\\\" src=\\\"assets/images/charachter/{{ list.gender+'_'+list.experience_level }}.png\\\" alt=\\\"\\\">\\n              </div>\\n              <h2>{{list?.first_name}}</h2>\\n              <h3>CPP: {{list?.cpp}}</h3>\\n              <h3>{{(list.position_name)?list.position_name:'--'}}</h3>\\n            </div>\\n            <div *ngIf=\\\"loggedInUser\\\">\\n              <h4 *ngIf=\\\"list.mutualFriendCount\\\"><i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i> {{list.mutualFriendCount}} {{'LISTPAGES.MUTUAL_CONNECTION'|translate}}</h4>\\n              <button class=\\\"blockBtn\\\" type=\\\"button\\\" (click)=\\\"openBlock(list.id, i)\\\" *ngIf=\\\"list.buttons && list.buttons.block\\\">{{ 'BLOCKS.BLOCK' | translate }}</button>\\n              <button class=\\\"blockBtn\\\" type=\\\"button\\\" (click)=\\\"unblock(list.id, i)\\\" *ngIf=\\\"list.buttons && list.buttons.unblock\\\">{{ 'BLOCKS.UNBLOCK' | translate }}</button>\\n              \\n              <button  type=\\\"button\\\" *ngIf=\\\"list.buttons && list.buttons.connection\\\" (click)=\\\"connectionSend(list, i, 'searchitem')\\\">{{ 'COMMON.CONNECT' | translate }}</button>\\n            </div>\\n          \\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12 searchCol\\\" *ngIf=\\\"searchList.length == 0\\\">\\n          <div class=\\\"searchResultSingle\\\">\\n\\n           {{\\\"PROFILEEDIT.NO_RECORD_FOUND\\\" | translate}}\\n\\n          </div>\\n        </div>\\n        \\n      </div>\\n      <ngx-pager  [config]=\\\"paginationConfig\\\"  [totalrow]='totalRows'></ngx-pager>\\n\\n      <div class=\\\"recentSearch\\\">\\n        <div class=\\\"row searchResult\\\">\\n          <div class=\\\"col-lg-3 searchCol\\\">\\n            <h3 class=\\\"titleSearch\\\">{{ 'LANDING.RECENTLY' | translate }} <br> {{ 'LANDING.SEARCH' | translate }}</h3>\\n          </div>\\n\\n          <div class=\\\"col-lg-9 searchCol\\\">\\n            <div class=\\\"carousalWrapSearch\\\">\\n\\n              <owl-carousel [options]=\\\"recentSearchCaro\\\" #recentCarousel [carouselClasses]=\\\"['owl-theme', 'sliding']\\\" >\\n                  <div class=\\\"item\\\" *ngFor=\\\"let item of recentSearchList\\\">\\n                      <div class=\\\"searchResultSingle\\\">\\n                        <div class=\\\"profileDescImg\\\" [class.inactive]=\\\"(currentTime - item.last_active_time) > (5*60) \\\"><img alt=\\\"\\\" *ngIf=\\\"item.profile_pic\\\" [src]=\\\"item.profile_pic| picturepath:'users'\\\">\\n\\n                          <img  *ngIf=\\\"item && !item?.profile_pic && item.gender && item.experience_level\\\" src=\\\"assets/images/charachter/{{ item.gender+'_'+item.experience_level }}.png\\\" alt=\\\"\\\">\\n                        </div>\\n                        <h2>{{ item.user_full_name }}</h2>\\n                        <h3>CPP: {{item?.cpp}}</h3>\\n                        <h3>{{ (item.position_local_name)?item.position_local_name:'--' }}</h3>\\n                        <div style=\\\"min-height:50px\\\">\\n                            <div *ngIf=\\\"loggedInUser\\\">\\n                              <h4 *ngIf=\\\"item.mutualFriendCount\\\"><i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i> {{item.mutualFriendCount}} {{'LISTPAGES.MUTUAL_CONNECTION'|translate}}</h4>\\n                              <button class=\\\"blockBtn\\\" type=\\\"button\\\" (click)=\\\"openBlock(item.id, i)\\\" *ngIf=\\\"item.buttons && item.buttons.block\\\">{{ 'BLOCKS.BLOCK' | translate }}</button>\\n                              <button class=\\\"blockBtn\\\" type=\\\"button\\\" (click)=\\\"unblock(item.id, i)\\\" *ngIf=\\\"item.buttons && item.buttons.unblock\\\">{{ 'BLOCKS.UNBLOCK' | translate }}</button>\\n                              \\n                              <button  type=\\\"button\\\" *ngIf=\\\"item.buttons && item.buttons.connection\\\" (click)=\\\"connectionSend(item, i, 'recentsearch')\\\">{{ 'COMMON.CONNECT' | translate }}</button>\\n                            </div>\\n                        </div>\\n                      </div>\\n                  </div>\\n                \\n                \\n              </owl-carousel>\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"col-xl-3 col-lg-4\\\" *ngIf=\\\"loggedInUser\\\">\\n      <app-notifications ></app-notifications>\\n    </div>\\n  </div>\\n</div>\\n<!-- ASK FOR SIGN UP -->\\n<ng-template #askForSignUpModal let-modal >\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body\\\" style=\\\"text-align:center\\\">\\n    {{'LANDING.ASK_FOR_SIGNUP'|translate}}\\n    <a href=\\\"javascript:\\\" (click)=\\\"goToHomePage()\\\">{{ 'LANDING.SIGNUP'| translate }}</a>\\n  </div>\\n</ng-template>\\n<app-blocksmodal></app-blocksmodal>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 07-02-2019\n# Module                : ListComponent                     \n# Object name           : ListComponent    \n# Functionality         : get search user list\n# Purpose               : constructor, ngOnInit, defineSearchResult, goToProfile, goToHomePage, getMutualFriend\n*******************************************************/\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { UsersService } from '../../services/users.service';\nimport { CommonService } from '../../services/common.service';\nimport { BlocksmodalComponent } from '../../global/blocksmodal/blocksmodal.component';\nimport * as global from '../../globalConfig';\nimport { OwlCarousel } from 'ngx-owl-carousel';\nimport { TranslateService } from '@ngx-translate/core';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  @ViewChild('askForSignUpModal') askForSignUpModal; // reference of sign modal\n  @ViewChild(BlocksmodalComponent) blockModal: BlocksmodalComponent; // block component obj\n  @ViewChild('recentCarousel') recentCarousel: OwlCarousel;\n  searchList: Array<any> = []; // get search user list\n  paginationConfig: any = null; // pagination config\n  totalRows: any = null;\n  currentPage: any = 1; // set current\n  currentUserData: any = null; // set current user data\n  loggedInUser: any = null; // loggedin user data\n  currentTime: any = null; // set current time\n  keyword: string = \"\"; // search keyword\n  scrollbarOptions = { axis: 'y', theme: 'minimal-dark' }; // set scroll config\n  recentSearchCaro = { items: 3, dots: false, nav: true, responsive: { 0: { items: 1 }, 568: { items: 2 }, 768: { items: 3 }, 1024: { items: 2 }, 1138: { items: 3 } } }; // recent search slider config\n  closeResult: string; // close the result\n  images: any = null; // get images\n  activeListItemIndex: any = null;\n  recentSearchList: any = [];\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 07-02-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and define the languages data\n\t* PARAMS : route, activeRoute, userService, modalService, cService\n\t*/\n  constructor(private route: Router, private activeRoute: ActivatedRoute, private userService: UsersService, private modalService: NgbModal, private cService: CommonService, private translate: TranslateService,) {\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      this.translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      this.translate.use(lang);\n\n    });\n  }\n  /* Function Name : ngOnInit\n\t* Author : \n\t* Created Date : 07-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS : \n\t*/\n  ngOnInit() {\n    localStorage.setItem('_sp', 'user');\n\n\n    this.paginationConfig = {\n      perPage: 10,\n      render: (page) => {\n        this.currentPage = page;\n        this.cService.listData.subscribe((listData: any) => {\n          if (listData) {\n            this.defineSearchResult(listData);\n            this.totalRows = listData.data.result.pager.rowCount;\n          }\n        });\n        this.activeRoute.queryParams.subscribe(params => {\n          let pageName = localStorage.getItem('_sp');\n          let postData = {\n            \"page_name\": pageName,\n            \"keyword\": params[\"key\"],\n            \"page\": this.currentPage\n          }\n\n          this.userService.searchUsers(postData).subscribe((responseData: any) => {\n            this.defineSearchResult(responseData);\n            this.totalRows = responseData.data.result.pager.rowCount;\n          });\n\n        });\n\n      }\n    }\n\n    this.currentTime = (new Date()).getTime() / 1000;\n\n    this.blockModal.closeBlock.subscribe((res) => {\n      let connectionStatus = this.checkConnectionButtonStatus(this.searchList[this.activeListItemIndex]);\n      if (res == 'unblock') {\n        this.searchList[this.activeListItemIndex]['buttons']['unblock'] = false;\n        this.searchList[this.activeListItemIndex]['buttons']['block'] = true;\n        if (connectionStatus) {\n          this.searchList[this.activeListItemIndex]['buttons']['connection'] = true;\n        } else {\n          this.searchList[this.activeListItemIndex]['buttons']['connection'] = false;\n        }\n      } else {\n        this.searchList[this.activeListItemIndex]['buttons']['unblock'] = true;\n        this.searchList[this.activeListItemIndex]['buttons']['block'] = false;\n        if (connectionStatus) {\n          this.searchList[this.activeListItemIndex]['buttons']['connection'] = false;\n        } else {\n          this.searchList[this.activeListItemIndex]['buttons']['connection'] = true;\n        }\n      }\n    });\n\n\n  }\n  /* Function Name : defineSearchResult\n\t* Author : \n\t* Created Date : 07-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get search user result\n\t* PARAMS : listData\n\t*/\n  defineSearchResult(listData: any) {\n    if (listData) {\n      this.searchList = listData.data.result.list;\n      if (listData.data.user) {\n        this.loggedInUser = listData.data.user;\n\n        this.getMutualFriend('search');\n        this.listButtonDisplay();\n      }\n      this.recentSearchData();\n\n\n    }\n  }\n\n  // recentSearchList() {\n  //   let postData = {\n  //     \"page_name\": 'user',\n  //     \"keyword\": this.loggedInUser.last_search_keyword\n  //   }\n  //   this.userService.searchUsers(postData).subscribe((responseData:any)=>{\n  //     this.defineSearchResult(responseData);\n  //   })\n  // }\n  /* Function Name : goToProfile\n  * Author : \n  * Created Date : 07-02-2019 \n  * Modified Date : *\n  * Purpose : to go to a user profile\n  * PARAMS :  user\n  */\n\n  goToProfile(user: any) {\n\n    if (localStorage.getItem(\"_user\")) {\n      this.route.navigate(['/', user.cpp]);\n    } else {\n      if (user.privacySettings) {\n        let guestViewProfile = user.privacySettings.find((item) => { // is guest view user profile\n          return item.options_id == 9;\n        });\n        if (guestViewProfile === undefined || guestViewProfile.show_status === 1) {\n          this.route.navigate(['/', user.cpp]);\n        } else {\n          this.keyword = '';\n          this.modalService.open(this.askForSignUpModal, { size: 'sm', centered: true, windowClass: 'DefaultModal' })\n        }\n      }\n    }\n  }\n  /* Function Name : goToHomePage\n  * Author : \n  * Created Date : 07-02-2019 \n  * Modified Date : *\n  * Purpose : to go to home page\n  * PARAMS :  \n  */\n  goToHomePage() {\n    this.modalService.dismissAll();\n    this.route.navigate(['/']);\n  }\n  /* Function Name : getMutualFriend\n  * Author : \n  * Created Date : 07-02-2019 \n  * Modified Date : *\n  * Purpose : to calculate the mutual connection\n  * PARAMS :  \n  */\n  getMutualFriend(type) {\n    let userFriendIdList: any = [];\n    let currentUserId = this.loggedInUser.id.toString();\n    if (this.loggedInUser.friendsIds) {\n      userFriendIdList = this.loggedInUser.friendsIds.friend_ids;\n      userFriendIdList = userFriendIdList.split(\",\");\n    }\n    let listData = null;\n    if (type == 'search') {\n      listData = this.searchList;\n    } else if (type == 'recent') {\n      listData = this.recentSearchList;\n    }\n    if (listData.length > 0) {\n\n      listData.forEach((item, index) => {\n        listData[index]['mutualFriendCount'] = 0;\n        if (\n          item &&\n          (localStorage.getItem('_user') && this.loggedInUser.id != item.id) &&\n          (item.friendsIds && item.friendsIds.friend_ids)) {\n          let friendList = item.friendsIds.friend_ids;\n          friendList = friendList.split(\",\");\n          friendList.splice(friendList.indexOf(currentUserId), 1);\n\n          let mutualFriendList = userFriendIdList.filter(function (obj) { return friendList.indexOf(obj) > -1; });\n          listData[index]['mutualFriendCount'] = mutualFriendList.length;\n\n        }\n      });\n    }\n    if (type == 'search') {\n      this.searchList = listData;\n    } else if (type == 'recent') {\n      this.recentSearchList = listData;\n    }\n  }\n\n  checkConnectionButtonStatus(item) {\n    let currentUserId = this.loggedInUser.id.toString();\n    let connectionStatus = true;\n    if (item.friendsIds) { // check connection button exist or not if item user is alreday in user connections\n\n      let friendList = item.friendsIds.friend_ids;\n      if (friendList) {\n        friendList = friendList.split(\",\");\n        if (friendList.indexOf(currentUserId) > -1) {\n          connectionStatus = false;\n        }\n      }\n    }\n\n    if (item.friendsPendingIds) { // check connection button exist or not loggedin user already sent request and it is in pending mode\n\n      let friendList = item.friendsPendingIds.friend_ids;\n      if (friendList) {\n        friendList = friendList.split(\",\");\n        if (friendList.indexOf(currentUserId) > -1) {\n          connectionStatus = false;\n        }\n      }\n    }\n\n    if (item.friendsRejectedIds) { // check connection button exist or not if item user already rejected the connection\n\n      let friendList = item.friendsRejectedIds.friend_ids;\n      if (friendList) {\n        friendList = friendList.split(\",\");\n        if (friendList.indexOf(currentUserId) > -1) {\n          connectionStatus = false;\n        }\n      }\n    }\n    if (item.blocksIds) { // check connection button exist or not if search item user block the loggedin user\n\n      let blockList = item.blocksIds.blocks_ids;\n      if (blockList) {\n        blockList = blockList.split(\",\");\n        if (blockList.indexOf(currentUserId) > -1) {\n          connectionStatus = false;\n        }\n      }\n    }\n\n    if (this.loggedInUser.friendsPendingIds) { // check connection button exist or not\n\n      let friendList = this.loggedInUser.friendsPendingIds.friend_ids;\n      if (friendList) {\n        friendList = friendList.split(\",\");\n        if (friendList.indexOf(item.id.toString()) > -1) {\n          connectionStatus = false;\n        }\n      }\n    }\n    return connectionStatus;\n  }\n  /* Function Name : listButtonDisplay\n  * Author : \n  * Created Date : 05-03-2019 \n  * Modified Date : *\n  * Purpose : to display button of users\n  * PARAMS :  \n  */\n  listButtonDisplay() {\n    let currentUserId = this.loggedInUser.id.toString();\n    this.searchList.forEach((item, index) => {\n      this.searchList[index]['buttons'] = {\n        \"block\": false,\n        \"unblock\": false,\n        \"connection\": false,\n        \"acceptConnection\": false\n      };\n      if (localStorage.getItem(\"_user\")) {\n\n        \n        let connectionStatus = this.checkConnectionButtonStatus(item);\n\n\n\n        let blockStatus = true;\n        let unblockStatus = false;\n        if (this.loggedInUser.blocksIds && this.loggedInUser.blocksIds.blocks_ids) { // check block button exist or not\n          let blockList = this.loggedInUser.blocksIds.blocks_ids.split(\",\");\n          if (blockList.indexOf(item.id.toString()) > -1) {\n            blockStatus = false;\n            unblockStatus = true;\n            connectionStatus = false;\n          }\n        }\n        if (this.loggedInUser.id != item.id) {\n          this.searchList[index]['buttons']['connection'] = connectionStatus;\n          this.searchList[index]['buttons']['block'] = blockStatus;\n          this.searchList[index]['buttons']['unblock'] = unblockStatus;\n        }\n      }\n    });\n    // console.log(this.searchList);\n  }\n\n  /* Function Name : recentSearchButtonDisplay\n  * Author : \n  * Created Date : 22-07-2019 \n  * Modified Date : *\n  * Purpose : to display button of users\n  * PARAMS :  \n  */\n recentSearchButtonDisplay() {\n  let currentUserId = this.loggedInUser.id.toString();\n  \n  this.recentSearchList.forEach((item, index) => {\n    this.recentSearchList[index]['buttons'] = {\n      \"block\": false,\n      \"unblock\": false,\n      \"connection\": false,\n      \"acceptConnection\": false\n    };\n    if (localStorage.getItem(\"_user\")) {\n\n\n      let connectionStatus = this.checkConnectionButtonStatus(item);\n      let blockStatus = true;\n      let unblockStatus = false;\n      if (this.loggedInUser.blocksIds && this.loggedInUser.blocksIds.blocks_ids) { // check block button exist or not\n        let blockList = this.loggedInUser.blocksIds.blocks_ids.split(\",\");\n        if (blockList.indexOf(item.id.toString()) > -1) {\n          blockStatus = false;\n          unblockStatus = true;\n          connectionStatus = false;\n        }\n      }\n      if (this.loggedInUser.id  != (item.id)) {\n        this.recentSearchList[index]['buttons']['connection'] = connectionStatus;\n        this.recentSearchList[index]['buttons']['block'] = blockStatus;\n        this.recentSearchList[index]['buttons']['unblock'] = unblockStatus;\n      }\n    }\n  });\n  // console.log(this.searchList);\n}\n\n  /* Function Name : openBlock\n* Author : \n* Created Date : 05-03-2019 \n* Modified Date : *\n* Purpose : to open block modal\n* PARAMS : userId, index\n*/\n  openBlock(userId, index) {\n    this.activeListItemIndex = index;\n    this.blockModal.openBlockReasonModal(userId);\n  }\n  /* Function Name : unblock\n\t* Author : \n\t* Created Date : 05-03-2019 \n\t* Modified Date : *\n\t* Purpose : to unblock a user\n\t* PARAMS : userId, index\n\t*/\n  unblock(userId, index) {\n    this.activeListItemIndex = index;\n    this.blockModal.unblockUser(userId);\n  }\n\n  /* Function Name : connectionSend\n* Author : \n* Created Date : 05-03-2019 \n* Modified Date : *\n* Purpose : to send connection request\n* PARAMS : toid, index, type\n*/\n  connectionSend(connectionItem, index, type) {\n    this.userService.connectionRequestSend(connectionItem.id)\n      .subscribe((responseData: any) => {\n        if (responseData.statustext == 'success') {\n          this.translate.get('COMMON.SUCCESS').subscribe((tData)=>{\n            swal({\n              title: tData,\n              text: responseData.message,\n              icon: 'success'\n            }).then(()=>{\n\n              if (type == 'searchitem'){\n                this.cService.emitNotification(connectionItem.cpp, 'CS');\n                this.searchList[index]['buttons']['connection'] = false;\n              } else if(type == 'recentsearch') {\n                this.recentSearchData();\n              }\n            });\n          });\n        } else if (responseData.statustext == 'error') {\n          this.translate.get('COMMON.ERROR').subscribe((tData)=>{\n          swal({\n            title: tData,\n            text: responseData.message,\n            icon: 'error'\n            \n          })\n        });\n        }\n      });\n  }\n\n  recentSearchData() {\n    this.recentSearchList = [];\n    this.userService.getRecentSearchList()\n      .subscribe((responseData: any) => {\n        if (responseData.statustext == 'success') {\n          this.recentSearchList = responseData.data;\n          if (this.loggedInUser) {\n            this.getMutualFriend('recent');\n            this.recentSearchButtonDisplay();\n          }\n          // console.log(this.recentSearchList);\n          this.recentCarousel.reInit();\n        }\n      });\n  }\n}\n","module.exports = \"<div class=\\\"searchWrap\\\">\\n    <div class=\\\"row\\\">\\n  \\n      <div class=\\\"col-xl-9 col-lg-8\\\">\\n        <h2 class=\\\"withLine\\\"><span>{{ 'BLOCKS.MYBLOCKS' |translate }}</span></h2>\\n        <div class=\\\"row searchResult\\\">\\n\\n          <div class=\\\"col-xl-3 col-lg-4 col-md-4 col-6 searchCol\\\" *ngFor=\\\"let user of blockedUserList\\\" >\\n            <div class=\\\"searchResultSingle\\\">\\n              <span class=\\\"searchClose\\\" (click)=\\\"unblock(user.blockUser.id)\\\" ></span>\\n              <div>\\n              <div class=\\\"profileDescImg\\\" [class.inactive]=\\\"(currentTime - user.blockUser.last_active_time) > (5*60) \\\">\\n              <img *ngIf=\\\"user.blockUser.profile_pic\\\" alt=\\\"\\\" [src]=\\\"user.blockUser.profile_pic| picturepath:'users'\\\">\\n              <img  *ngIf=\\\"user.blockUser && !user.blockUser.profile_pic && user.blockUser.gender && user.blockUser.experience_level\\\" src=\\\"assets/images/charachter/{{ user.blockUser.gender+'_'+user.blockUser.experience_level }}.png\\\" alt=\\\"\\\">\\n            </div>\\n              <h2>{{ user.blockUser.first_name }}  {{ user.blockUser.last_name }}</h2>\\n              <h3>{{ user.blockUser.title }}</h3>\\n              \\n              </div>\\n              \\n            \\n           \\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12 searchCol\\\" *ngIf=\\\"blockedUserList.length == 0\\\">\\n            <div class=\\\"searchResultSingle\\\">\\n\\n             {{\\\"PROFILEEDIT.NO_RECORD_FOUND\\\" | translate}}\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n  \\n       <ngx-pager  [config]=\\\"paginationConfig\\\"  [totalrow]='totalRows'></ngx-pager>\\n  \\n  \\n      </div>\\n  \\n      <div class=\\\"col-xl-3 col-lg-4\\\">\\n  \\n        <app-notifications></app-notifications>\\n      </div>\\n    </div>\\n  </div>\\n  <app-blocksmodal></app-blocksmodal>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvbXlibG9ja2xpc3QvbXlibG9ja2xpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UsersService } from \"../../services/users.service\";\nimport { CommonService } from \"../../services/common.service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { BlocksmodalComponent } from '../../global/blocksmodal/blocksmodal.component';\nimport swal from 'sweetalert';\n\n@Component({\n\tselector: 'app-myblocklist',\n\ttemplateUrl: './myblocklist.component.html',\n\tstyleUrls: ['./myblocklist.component.scss']\n})\nexport class MyblocklistComponent implements OnInit {\n\t@ViewChild(BlocksmodalComponent) blockModal: BlocksmodalComponent; // get the block component obj\n\tpaginationConfig: any = null; // pagination config\n\tcurrentPage: any = 1; // set current page\n\tcurrentTime: any = null; // set current time\n\tblockedUserList: Array<any> = []; // set blocked users list\n\ttotalRows: any = 0;\n\n\n\tconstructor(\n\t\tprivate uService: UsersService,\n\t\tprivate cService: CommonService,\n\t\tprivate translate: TranslateService) {\n\n\t\tthis.cService.activelang.subscribe((lang) => {\n\n\t\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\t\ttranslate.setDefaultLang(lang);\n\n\t\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\t\ttranslate.use(lang);\n\n\t\t});\n\t}\n\n\n\tngOnInit() {\n\t\tthis.getBlockedUsers();\n\t\tthis.paginationConfig = {\n\t\t\tperPage: 10,\n\t\t\trender: (page) => {\n\t\t\t\tthis.currentPage = page;\n\t\t\t\tthis.getBlockedUsers();\n\n\t\t\t}\n\t\t}\n\t\tthis.blockModal.closeBlock.subscribe((res) => {\n\t\t\tif (res) {\n\t\t\t\tthis.getBlockedUsers();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetBlockedUsers() {\n\t\tthis.uService.blockedUserList(this.currentPage)\n\t\t\t.subscribe((responseData: any) => {\n\t\t\t\tif (responseData.statustext == 'success') {\n\t\t\t\t\tthis.blockedUserList = responseData.data.list;\n\t\t\t\t\tthis.totalRows = responseData.data.paginate.rowCount;\n\t\t\t\t}\n\t\t\t})\n\t}\n\n  /* Function Name : unblock\n\t* Author : \n\t* Created Date : 04-02-2019 \n\t* Modified Date : *\n\t* Purpose : to unblock a user\n\t* PARAMS : userId\n\t*/\n\tunblock(userId) {\n\t\tthis.translate.get(['COMMON.ARE_YOU_SURE', 'BLOCKS.WANT_TO_UNBLOCK']).subscribe((tData) => {\n\t\t\tswal({\n\t\t\t\ttitle: tData['COMMON.ARE_YOU_SURE'],\n\t\t\t\ttext: tData['BLOCKS.WANT_TO_UNBLOCK'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n\t\t\t}).then((willDelete) => {\n\t\t\t\tif (willDelete) {\n\t\t\t\t\tthis.blockModal.unblockUser(userId);\n\t\t\t\t\t// this.blockModal.closeBlock.subscribe((res)=>{\n\t\t\t\t\t//   \tthis.getBlockedUsers();\n\t\t\t\t\t// });\t\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\n\n\t}\n\n\n}\n","module.exports = \"\\n    <div class=\\\"leftNoti\\\" *ngIf=\\\"nonvisable.indexOf('notification') == -1\\\">\\n     <div class=\\\"profileMainBox\\\">\\n       <div class=\\\"rightTitle\\\">\\n         <h2>{{ 'NOTIFICATIONS.NOTIFICATION'|translate }}</h2>\\n         <a class=\\\"iconSettings\\\" [routerLink]=\\\"['/notification-settings']\\\"><i class=\\\"fa fa-cog\\\" aria-hidden=\\\"true\\\"></i></a>\\n       </div>\\n       <div class=\\\"defaultScroll\\\" malihu-scrollbar [scrollbarOptions]=\\\"scrollbarOptions\\\" >\\n        <div *ngFor=\\\"let sender of senderDetails\\\">\\n         <div class=\\\"boxSingle\\\" >\\n           <div class=\\\"boxSingleImg\\\" *ngIf=\\\"!sender.testimonial || (sender.testimonial && sender.testimonial.is_anonymous != 1)\\\" [class.inactive]=\\\"(currentTime - sender?.sender.last_active_time) > (5*60) \\\">\\n             <img *ngIf=\\\"sender?.sender.profile_pic\\\" [src]=\\\"(sender?.sender.profile_pic) | picturepath:'users'\\\" alt=\\\"\\\">\\n             <img  class=\\\"no-pro-pic\\\" *ngIf=\\\"sender?.sender && !sender?.sender.profile_pic && sender?.sender.gender && sender?.sender.experience_level\\\" src=\\\"assets/images/charachter/{{ sender?.sender.gender+'_'+sender?.sender.experience_level }}.png\\\" alt=\\\"\\\">\\n\\n            </div>\\n            <div class=\\\"boxSingleImg\\\" *ngIf=\\\"sender.testimonial && sender.testimonial.is_anonymous == 1\\\">\\n                <img class=\\\"no-pro-pic\\\"  src=\\\"assets/images/testimonial_no_img.jpg\\\" alt=\\\"\\\">\\n            </div>\\n           <div class=\\\"timeNotific\\\">{{ (sender?.posted_on*1000) | amTimeAgo:true }} {{ 'NOTIFICATIONS.AGO' |translate }}</div>\\n           <h2>\\n             \\n             <a *ngIf=\\\"sender.testimonial && sender.testimonial.is_anonymous == 1\\\" >\\n                {{ 'TESTIMONIALS.ANONYMOUS'|translate }}\\n             </a>\\n             <a *ngIf=\\\"!sender.testimonial || (sender.testimonial && sender.testimonial.is_anonymous != 1)\\\" [routerLink]=\\\"['/', sender?.sender.cpp ]\\\">{{(sender?.sender.first_name+' '+sender?.sender.last_name)}}</a>\\n             &nbsp;<span>{{ 'NOTIFICATIONS.'+sender?.type | translate }}</span></h2>\\n           <div class=\\\"msgIcon\\\"><i class=\\\"fa fa-commenting\\\" aria-hidden=\\\"true\\\"></i></div>\\n         </div>\\n       \\n         \\n        </div>\\n      </div>\\n      <div class=\\\"no-record-msg text-center\\\" *ngIf=\\\"senderDetails && senderDetails.length == 0\\\">{{ 'NOTIFICATIONS.NO_MESSAGE' | translate }}</div>\\n       <div class=\\\"moreItem\\\" *ngIf=\\\"paginations.notification && paginations.notification.rowCount && senderDetails.length > 0 && (paginations.notification.rowCount > senderDetails.length)\\\">\\n         <a [routerLink]=\\\"['/notifications']\\\">+{{( paginations.notification.rowCount - senderDetails.length )}} {{ 'NOTIFICATIONS.SEE_MORE'|translate }}</a>\\n       </div>\\n     </div>\\n    </div>\\n\\n    <div class=\\\"leftNoti forConnection\\\">\\n     <div class=\\\"profileMainBox\\\">\\n       <div class=\\\"rightTitle\\\">\\n         <h2>{{ 'NOTIFICATIONS.CONNECTIONS'|translate }}</h2>\\n         <a class=\\\"iconSettings\\\" [routerLink]=\\\"['/blocks']\\\"><i class=\\\"fa fa-cog\\\" aria-hidden=\\\"true\\\"></i></a>\\n         <!-- <span class=\\\"btnConnection\\\"></span> -->\\n       </div>\\n       <div class=\\\"connection-message-container\\\">\\n        <div class=\\\"msg-succ\\\" *ngIf=\\\"connectionMsg.success\\\">{{ connectionMsg.success }}</div>\\n        <div class=\\\"msg-err\\\" *ngIf=\\\"connectionMsg.error\\\">{{ connectionMsg.error }}</div>\\n       </div>\\n       <div class=\\\"defaultScroll\\\" malihu-scrollbar [scrollbarOptions]=\\\"scrollbarOptions\\\">\\n         <div class=\\\"boxSingle\\\"   *ngFor=\\\"let connection of notifyConnectionList\\\"  >\\n           <div class=\\\"boxSingleImg\\\" [class.inactive]=\\\"((currentTime - connection.last_active_time) > (5*60)) && !connection.chatRequest \\\">\\n             <img *ngIf=\\\"connection.profile_pic\\\" [src]=\\\"(connection?.profile_pic)| picturepath:'users'\\\" alt=\\\"\\\">\\n\\n             <img  *ngIf=\\\"connection && !connection.profile_pic && connection.gender && connection.experience_level\\\" src=\\\"assets/images/charachter/{{ connection.gender+'_'+connection.experience_level }}.png\\\" alt=\\\"\\\">\\n            </div>\\n             <h2><a [routerLink]=\\\"['/', connection.cpp ]\\\">{{(connection.first_name+' '+connection.last_name)}} </a>\\n              <em *ngIf=\\\"connection.unreadMsgCount\\\">({{ connection.unreadMsgCount }})</em>\\n           <span *ngIf=\\\"connection.position\\\">{{ connection.position.details[0].name  }}</span>\\n              \\n          </h2>\\n           <div class=\\\"lastChat\\\" >{{ 'NOTIFICATIONS.LAST_CHAT' |translate }} <br> {{ (connection.lastChatTime) | amTimeAgo:true }} {{ 'NOTIFICATIONS.AGO' |translate }} <br/>\\n            \\n            <button *ngIf=\\\"!connection.is_friend\\\" (click)=\\\"connectionSend('connection',connection)\\\"  class=\\\"btn btn-sm btn-connection pull-right\\\">{{ 'PROFILE.CONTACT' | translate }}</button>\\n            <button *ngIf=\\\"connection.is_friend\\\" (click)=\\\"setChatPerson(connection)\\\" class=\\\"btn btn-sm btn-connection pull-right\\\">{{ 'COMMON.MESSAGE' | translate }}</button>\\n          </div>\\n         </div>\\n        </div>\\n        <div class=\\\"no-record-msg text-center\\\" *ngIf=\\\"notifyConnectionList && notifyConnectionList.length == 0\\\">{{ 'COMMON.NO_CONNECTION' | translate }}</div>\\n\\n     </div>\\n     \\n    </div>\\n\\n    <div class=\\\"leftNoti knownPeople forConnection\\\">\\n     <div class=\\\"profileMainBox\\\">\\n       <div class=\\\"rightTitle\\\">\\n         <h2>{{ 'NOTIFICATIONS.PEOPLE_MAY_KNOW'|translate }}</h2>\\n         <span class=\\\"iconSettings\\\" (click)=\\\"openContactModal()\\\"><i class=\\\"fa fa-cog\\\" aria-hidden=\\\"true\\\"></i></span>\\n       </div>\\n       <div class=\\\"connection-message-container\\\">\\n          <div class=\\\"msg-succ\\\" *ngIf=\\\"mayConnectionMsg.success\\\">{{ mayConnectionMsg.success }}</div>\\n          <div class=\\\"msg-err\\\" *ngIf=\\\"mayConnectionMsg.error\\\">{{ mayConnectionMsg.error }}</div>\\n       </div>\\n       <div class=\\\"defaultScroll\\\" malihu-scrollbar [scrollbarOptions]=\\\"scrollbarOptions\\\">\\n          <p class=\\\"text-center\\\" *ngIf=\\\"loader.mayconnect\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></p>\\n          <div *ngFor=\\\"let may of mayList\\\">\\n             <div class=\\\"boxSingle\\\">\\n               <div class=\\\"boxSingleImg\\\" [class.inactive]=\\\"((currentTime - may?.last_active_time) > (5*60))\\\">\\n                <img *ngIf=\\\"may.profile_pic\\\" [src]=\\\"(may?.profile_pic)| picturepath:'users'\\\" alt=\\\"\\\">\\n                <img  *ngIf=\\\"!may.profile_pic && may.gender && may.experience_level\\\" src=\\\"assets/images/charachter/{{ may.gender+'_'+may.experience_level }}.png\\\" alt=\\\"\\\">\\n\\n              </div>\\n               <h2><a [routerLink]=\\\"['/', may.cpp ]\\\">{{(may.first_name+' '+may.last_name)}}</a>&nbsp; <span>{{(may.position_local_name)}}</span></h2>\\n               <a class=\\\"contactPeople\\\" href=\\\"javascript:\\\" (click)=\\\"connectionSend('may-connection',may)\\\">Contact</a>\\n               <!-- <div class=\\\"knownClose\\\"><i class=\\\"fa fa-times-circle\\\" aria-hidden=\\\"true\\\"></i></div> -->\\n             </div>\\n          </div>\\n          \\n\\n     </div>\\n     <div class=\\\"no-record-msg text-center\\\" *ngIf=\\\"mayList.length == 0\\\">{{ 'COMMON.NO_CONNECTION' | translate }}</div>\\n     <!-- <div class=\\\"moreItem\\\" *ngIf=\\\"paginations.mayContact && paginations.mayContact.rowCount && (paginations.mayContact.rowCount > mayList.length)\\\">\\n      <a href=\\\"#\\\">+{{( paginations.mayContact.rowCount - mayList.length )}} {{ 'NOTIFICATIONS.SEE_MORE'|translate }}</a>\\n     </div> -->\\n    </div>\\n\\n    <!-- open contact modal --> \\n  <ng-template #connectModal let-modal>\\n    <h2><span>{{ 'NOTIFICATIONS.PEOPLE_YOU_MAY_CONNECT_SETTINGS'|translate }}:</span></h2>\\n    <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n    <div class=\\\"modal-body\\\">\\n    <div>\\n\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMsg\\\">{{ 'NOTIFICATIONS.ERROR'|translate }}</div>\\n    </div>\\n      <div class=\\\"proEdit\\\">\\n        <div class=\\\"formWrap\\\">\\n           <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ 'NOTIFICATIONS.POSITION'|translate }} :</label>\\n           <span class=\\\"formSpan col-xl-9\\\">\\n             <ng-select class=\\\"inpField fullWidth\\\" [hideSelected]=\\\"true\\\" [items]=\\\"positions\\\" [(ngModel)]=\\\"connectForm.positions\\\" bindLabel=\\\"name\\\"\\n             bindValue=\\\"id\\\" [multiple]=\\\"true\\\"></ng-select>\\n           </span>\\n        </div>\\n        <div class=\\\"formWrap\\\">\\n           <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ 'NOTIFICATIONS.DEGREE'|translate }} :</label>\\n           <span class=\\\"formSpan col-xl-9\\\">\\n             <ng-select class=\\\"inpField fullWidth\\\" [hideSelected]=\\\"true\\\" [items]=\\\"degrees\\\" [(ngModel)]=\\\"connectForm.degree\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" [multiple]=\\\"true\\\"></ng-select>\\n           </span>\\n        </div>\\n        <div class=\\\"formWrap\\\">\\n          <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ 'NOTIFICATIONS.COUNTRY'|translate }}</label>\\n          <span class=\\\"formSpan col-xl-9\\\">\\n            <ng-select class=\\\"inpField fullWidth\\\" [hideSelected]=\\\"true\\\" [items]=\\\"countries\\\" [(ngModel)]=\\\"connectForm.country\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" (change)=\\\"getCityList()\\\"></ng-select>\\n          </span>\\n        </div>\\n        <div class=\\\"formWrap\\\">\\n            <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ 'NOTIFICATIONS.CITY'|translate }}</label>\\n            <span class=\\\"formSpan col-xl-9\\\">\\n            <ng-select class=\\\"inpField fullWidth\\\" [hideSelected]=\\\"true\\\" [items]=\\\"cityList\\\" [(ngModel)]=\\\"connectForm.city\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" [multiple]=\\\"true\\\"></ng-select>\\n          </span>\\n        </div>\\n        <div class=\\\"buttonGr\\\">\\n          <div class=\\\"text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"btnOrange\\\" name=\\\"button\\\" (click)=\\\"saveConnectFrom()\\\">{{ 'NOTIFICATIONS.SUBMIT'|translate }}</button>\\n          </div>\\n        </div>\\n      </div>\\n   \\n    </div>\\n  </ng-template>\\n\\n  <!-- <app-chat [config]=\\\"chatConfig\\\"></app-chat> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","/*****************************************************\n# Company Name          : \n# Author                :\n# Created Date          : 10-02-2019\n# Module                : NotificationsComponent\n# Object name           : NotificationsComponent\n# Functionality         : All notification\n# Purpose               : constructor, ngOnInit, changeNotification, getNotification, openContactModal, getCityList, saveConnectFrom, mayContactList, contectList, connectionSend\n*******************************************************/\n\n\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CommonService } from \"../../services/common.service\";\nimport { UsersService } from \"../../services/users.service\";\nimport { ChatService } from \"../../global/chat/chat.service\";\nimport * as global from '../../globalConfig';\nimport { PicturepathPipe } from '../../global/picturepath.pipe';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport * as CryptoJS from 'crypto-js';\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss'],\n  providers: [PicturepathPipe]\n})\nexport class NotificationsComponent implements OnInit {\n  @Input() nonvisable: any = ''; // set the nonvisable item (EX: 'notification, connection, may-connect')\n  @ViewChild('connectModal') connectModal;\n  chatwithUserCpp: any = '';\n  notificationCount: any = null; // notification count\n  senderDetails: any = null; // sender details\n  imagePath: any = null; // set image path\n\n  connectDetails: Array<any> = []; // get contact details\n  positions: Array<any> = []; // set positions\n  degrees: Array<any> = []; // set degrees\n  countries: Array<any> = []; // set countries\n  cityList: Array<any> = []; // set city list\n  mayList: Array<any> = []; // set may setting list\n  notifyConnectionList: Array<any> = []; // get connections list\n  settings: any = null; // set settings\n  currentTime = null; // set current time\n  paginations: any = { // set paginations\n    notification: null,\n    mayContact: null,\n  }\n  scrollbarOptions = { axis: 'y', theme: 'minimal-dark' }; // set scrollbar options\n  // PERSONAL CONFIG //\n  connectForm: any = { // set connect form\n    \"positions\": null,\n    \"degree\": null,\n    \"country\": null,\n    \"city\": null,\n    \"error\": 0,\n    \"submit\": false\n  };\n\n  successMsg: string = ''; // set success message\n  errorMsg: string = ''; // set error message\n  connectionMsg: any = {\n    success: '',\n    error: ''\n  };\n  mayConnectionMsg: any = {\n    success: '',\n    error: ''\n  }\n  loader: any = {\n    'mayconnect': false\n  };\n\n  chatConfig: any = null;\n  loggedUser: any = null;\n  /* Function Name : constructor\n\t* Author :\n\t* Created Date : 10-02-2019\n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and define the languages data\n\t* PARAMS : cService, translate, modalService,userSerivce\n\t*/\n  constructor(\n    private cService: CommonService,\n    private translate: TranslateService,\n    private modalService: NgbModal,\n    private userSerivce: UsersService,\n    private chatService: ChatService,\n    private picPathPipe: PicturepathPipe\n  ) {\n    let user:any =  localStorage.getItem(\"_user\");\n\t\tuser = CryptoJS.AES.decrypt(user, 'careery');\n    this.loggedUser = JSON.parse(user.toString(CryptoJS.enc.Utf8));\n    \n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n\n    this.cService.chatConnection.subscribe((connection) => {\n      if (connection) {\n        this.setChatPerson(connection);\n      }\n    });\n    var loggedUser = this.loggedUser;\n    this.chatService.getInvitation.subscribe((invitation: any) => {\n      if (invitation) {\n\n        let room = invitation.room;\n        let inviteRow = this.notifyConnectionList.findIndex((item) => {\n          return item.room == room;\n        });\n        if (inviteRow != -1) {\n          if (loggedUser._i != invitation.sendBy.id) {\n            this.chatService.addUserToRoom({\n              \"id\": loggedUser._i\n            }, room, true);\n          }\n          this.notifyConnectionList[inviteRow].chatRequest = true;\n        }\n      }\n\n    });\n    this.cService.addUserToRoom(loggedUser._cpp);\n    if (this.nonvisable.indexOf('notification') == -1) {\n      this.cService.notificationEmit.subscribe((emitData: any) => {\n        let notifytype = ['T', 'PS', 'DCV', 'DCA', 'R', 'CS', 'CA', 'CD', 'MCB'];\n        if (emitData && notifytype.indexOf(emitData.type) > -1) {\n          this.getNotification();\n        }\n      });\n    }\n\n  }\n  /* Function Name : ngOnInit\n\t* Author :\n\t* Created Date : 10-02-2019\n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS :\n\t*/\n  ngOnInit() {\n    this.imagePath = global.s3URL + \"userspic/\";\n    this.currentTime = (new Date()).getTime() / 1000;\n    // this.changeNotification();\n    if (this.nonvisable.indexOf('notification') == -1) {\n      this.getNotification();\n    }\n\n    this.mayContactList();\n    this.connectionList();\n\n    this.cService.sendBirthdayNotifications()\n      .subscribe((responseData) => { });\n\n    this.cService.mayContactSettings().subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n        this.positions = response.data.positions;\n        this.degrees = response.data.degree;\n        this.countries = response.data.country;\n        //console.log(this.degrees);\n\n      }\n\n    });\n  }\n\n  /* Function Name : changeNotification\n  * Author :\n  * Created Date : 19-02-2019\n  * Modified Date : *\n  * Purpose : to refesh api after 5 seconds\n  * PARAMS :\n  */\n\n  changeNotification() {\n    // setInterval(() => {\n    //   this.getNotification();\n    //   this.connectionList();\n    //   this.mayContactList();\n    //   // call functions\n    // }, 1 * 60 * 1000); // every 1 min\n  }\n\n  /* Function Name : getNotification\n  * Author :\n  * Created Date : 19-02-2019\n  * Modified Date : *\n  * Purpose :\n  * PARAMS :\n  */\n  getNotification() {\n\n    let formPostData = {\n      \"type\": \"T,TR,PS,DCV,DCA,R,CS,CA,CD,MCB\",\n      \"page\": 1\n    };\n    this.cService.notificationsSubmit(formPostData).subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n        //console.log(response);\n        this.notificationCount = response.data.list.length;\n        this.senderDetails = response.data.list;\n        this.paginations.notification = response.data.pagination;\n      }\n\n    });\n  }\n\n  /* Function Name : openContactModal\n  * Author :\n  * Created Date : 28-02-2019\n  * Modified Date : *\n  * Purpose : to open connect modal\n  * PARAMS : connectModal\n  */\n\n  openContactModal() {\n\n    this.mayContactList();\n    this.modalService.open(this.connectModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n  }\n\n  /* Function Name : getCityList\n  * Author :\n  * Created Date : 28-02-2019\n  * Modified Date : *\n  * Purpose : to get city list\n  * PARAMS :\n  */\n  getCityList() {\n    this.cityList = [];\n    this.connectForm.city = null;\n    let countryId = this.connectForm.country;\n    if (countryId) {\n      this.cService.getCityList(countryId)\n        .subscribe((responseData: any) => {\n          if (responseData.statustext === 'success') {\n            this.cityList = responseData.data;\n          }\n        })\n    }\n  }\n\n  /* Function Name : saveConnectFrom\n  * Author :\n  * Created Date : 28-02-2019\n  * Modified Date : *\n  * Purpose : to save connect form\n  * PARAMS :\n  */\n\n  saveConnectFrom() {\n\n    this.connectForm.submit = true;\n    let formPostData = this.connectForm;\n    if (this.connectForm.positions == null &&\n      this.connectForm.degree == null &&\n      this.connectForm.country == null &&\n      this.connectForm.city == null\n    ) {\n      this.connectForm.error = 1;\n      this.errorMsg = 'NOTIFICATIONS.ERROR';\n      setTimeout(() => {\n        this.errorMsg = '';\n      }, 5000);\n    } else {\n      this.connectForm.error = 0;\n    }\n    //console.log(formPostData); return false;\n    //saveContactSettings\n    if (this.connectForm.error == 0) {\n      this.cService.addContactSettings(formPostData).subscribe((response: any) => {\n        if (response.statustext === 'success') {\n          this.successMsg = response.message;\n          this.modalService.dismissAll();\n          setTimeout(() => {\n            this.successMsg = '';\n          }, 5000);\n        }\n\n      });\n    }\n  }\n\n  /* Function Name : mayContactList\n  * Author :\n  * Created Date : 28-02-2019\n  * Modified Date : *\n  * Purpose : to get may  contact list\n  * PARAMS :\n  */\n\n  mayContactList() {\n\n    let formPostData = {\n      \"page\": 1\n    };\n    this.cService.mayContactList(formPostData).subscribe((responseData: any) => {\n      if (responseData.statustext === 'success') {\n        this.mayList = responseData.data.list;\n        this.imagePath = global.s3URL + 'userspic/';\n        // this.paginations.mayContact = responseData.data.pager;\n        this.settings = responseData.data.settings;\n        if (responseData.data.settings && responseData.data.settings.positions_ids) {\n          let setectPositionList = responseData.data.settings.positions_ids.split(',').map((item) => {\n            return parseInt(item);\n          });\n          this.connectForm.positions = setectPositionList;\n        }\n        if (responseData.data.settings && responseData.data.settings.degree_ids) {\n          let setectDegreeList = responseData.data.settings.degree_ids.split(',').map((item) => {\n            return parseInt(item);\n          });\n          this.connectForm.degree = setectDegreeList;\n        }\n        if (responseData.data.settings && responseData.data.settings.country_ids) {\n\n          this.connectForm.country = responseData.data.settings.country_ids;\n          this.getCityList();\n        }\n        if (responseData.data.settings && responseData.data.settings.city_ids) {\n          let setectCityList = responseData.data.settings.city_ids.split(',').map((item) => {\n            return parseInt(item);\n          });\n          this.connectForm.city = setectCityList;\n        }\n      }\n    })\n  }\n\n  /* Function Name : connectionList\n  * Author :\n  * Created Date : 04-03-2019\n  * Modified Date : *\n  * Purpose : to get user current contact list\n  * PARAMS :\n  */\n\n  connectionList() {\n    this.cService.userNotifyConnectionList({\n      userCpp: this.loggedUser._cpp\n    })\n      .subscribe((responseData: any) => {\n        // console.log(responseData);\n        if (responseData.statustext == 'success') {\n          let msgCountArr = responseData.data.msgCount;\n          let msgLastChatArr = responseData.data.lastChatTimeList;\n          this.notifyConnectionList = responseData.data.list.map((item) => {\n            let rowData = item;\n            rowData['room'] = this.cService.getRoomData(this.loggedUser, item);\n            let sendMsgUser = msgCountArr.find((itemMsg) => {\n              return itemMsg.send_user_id == item.id\n            });\n            if (sendMsgUser) {\n              rowData[\"unreadMsgCount\"] = sendMsgUser.msg_count;\n            }\n\n            let lastMsgUserTime = msgLastChatArr.find((itemMsg) => {\n              return rowData['room'] == itemMsg.room\n            });\n            if (lastMsgUserTime) {\n              rowData[\"lastChatTime\"] = lastMsgUserTime.last_chat_time;\n            }\n\n            if (item.friendsIds && item.friendsIds.friend_ids) {\n              let friends = item.friendsIds.friend_ids.split(',');\n              if (friends.indexOf(this.loggedUser._i.toString()) > -1) {\n                rowData['is_friend'] = 1;\n              }\n            }\n            return rowData;\n          });\n        }\n      })\n  }\n  /* Function Name : connectionSend\n  * Author :\n  * Created Date : 05-03-2019\n  * Modified Date : *\n  * Purpose : to send connection request\n  * PARAMS :\n  */\n  connectionSend(type, connectionItem) {\n    this.loader.mayContact = true;\n    this.userSerivce.connectionRequestSend(connectionItem.id)\n      .subscribe((responseData: any) => {\n        this.loader.mayContact = false;\n        if (type == 'connection') {\n          if (responseData.statustext == 'success') {\n            this.cService.emitNotification(connectionItem.cpp, 'CS');\n            this.connectionMsg.success = responseData.message;\n          } else {\n            this.connectionMsg.error = responseData.message;\n          }\n        } else {\n          if (responseData.statustext == 'success') {\n            `this.cService.emitNotification(connectionItem.cpp, 'CS');`\n            this.mayConnectionMsg.success = responseData.message;\n          } else {\n            this.mayConnectionMsg.error = responseData.message;\n          }\n        }\n        setTimeout(() => {\n          this.connectionMsg.success = '';\n          this.connectionMsg.error = '';\n          this.mayConnectionMsg.success = '';\n          this.mayConnectionMsg.error = '';\n        }, 5000);\n      });\n  }\n  /* Function Name : setChatPerson\n  * Author :\n  * Created Date : 24-04-2019\n  * Modified Date : *\n  * Purpose : to set the current chat config\n  * PARAMS :\n  */\n  setChatPerson(connection) {\n    let room = this.cService.getRoomData(this.loggedUser, connection);\n\n    this.cService.setChatRoomEmit(room);\n\n    // this.chatConfig = {\n    //   request: connection.chatRequest,\n    //   room: this.getRoomData(connection),\n    //   user: {\n    // id: this.loggedUser._i,\n    // cpp: this.loggedUser._cpp\n    //   },\n    //   chatwith: {\n    //     id: connection.id,\n    //     name: connection.first_name + ' ' + connection.last_name,\n    // picture: (connection.profile_pic) ? this.picPathPipe.transform(connection.profile_pic, 'users') : null,\n    // cpp: connection.cpp\n    //   }\n    // };\n    // if (this.notifyConnectionList) {\n    //   let connectionIndex = this.notifyConnectionList.findIndex((item) => {\n    //     return item == connection;\n    //   });\n    //   if (this.notifyConnectionList[connectionIndex]) {\n    //     delete this.notifyConnectionList[connectionIndex][\"unreadMsgCount\"];\n    //   }\n    // }\n\n  }\n  /* Function Name : getRoomData\n  * Author :\n  * Created Date : 24-04-2019\n  * Modified Date : *\n  * Purpose : to get the room name\n  * PARAMS :\n  */\n\n\n\n}\n","module.exports = \"<div class=\\\"proEdit privacyWrap\\\">\\n  <h2 class=\\\"withLine\\\"><span>{{ 'SETTINGS.NOTIFICATION_SETTINGS' | translate }}</span></h2>\\n  <div class=\\\"alert alert-success text-center\\\" *ngIf=\\\"settingsSuccessMessage\\\">{{ settingsSuccessMessage }}</div>\\n  <div class=\\\"alert alert-danger text-center\\\" *ngIf=\\\"settingsErrMessage\\\">{{ settingsErrMessage }}</div>\\n\\n\\n  <form [formGroup]=\\\"settingsForm\\\" novalidate (submit)=\\\"saveNotificationSettings()\\\">\\n      <div >\\n          <div  class=\\\"formWrap inlineAll\\\">\\n              <label class=\\\"col-md-3\\\" for=\\\"\\\">{{ 'SETTINGS.VIEWING_PROFILE' | translate }}</label>\\n              <label class=\\\"switch\\\" >\\n                <input type=\\\"checkbox\\\" formControlName=\\\"viewing_profile\\\"   [value]=\\\"1\\\">\\n                <span class=\\\"slider\\\"></span>\\n              </label>\\n          </div>\\n          <div  class=\\\"formWrap inlineAll\\\">\\n              <label class=\\\"col-md-3\\\" for=\\\"\\\">{{ 'SETTINGS.TESTIMONIAL' | translate }}</label>\\n              <label class=\\\"switch\\\" >\\n                <input type=\\\"checkbox\\\" formControlName=\\\"testimonial\\\"  [value]=\\\"1\\\">\\n                <span class=\\\"slider\\\"></span>\\n              </label>\\n          </div>\\n          <div  class=\\\"formWrap inlineAll\\\">\\n              <label class=\\\"col-md-3\\\" for=\\\"\\\">{{ 'SETTINGS.SEND_REQUEST' | translate }}</label>\\n              <label class=\\\"switch\\\" >\\n                <input type=\\\"checkbox\\\" formControlName=\\\"send_request\\\"  [value]=\\\"1\\\">\\n                <span class=\\\"slider\\\"></span>\\n              </label>\\n          </div>\\n          <div  class=\\\"formWrap inlineAll\\\">\\n              <label class=\\\"col-md-3\\\" for=\\\"\\\">{{ 'SETTINGS.ACCEPT_REQUEST' | translate }}</label>\\n              <label class=\\\"switch\\\" >\\n                <input type=\\\"checkbox\\\" formControlName=\\\"accept_request\\\"  [value]=\\\"1\\\">\\n                <span class=\\\"slider\\\"></span>\\n              </label>\\n          </div>\\n          <div  class=\\\"formWrap inlineAll\\\">\\n              <label class=\\\"col-md-3\\\" for=\\\"\\\">{{ 'SETTINGS.MY_CONNECTION_BIRTHDAY_DAY' | translate }}</label>\\n              <label class=\\\"switch\\\" >\\n                <input type=\\\"checkbox\\\" formControlName=\\\"my_connection_birth_day\\\"  [value]=\\\"1\\\">\\n                <span class=\\\"slider\\\"></span>\\n              </label>\\n          </div>\\n\\n      </div>\\n    <div class=\\\"buttonGr\\\">\\n      <div class=\\\"text-right\\\">\\n        <button class=\\\"btnGreen\\\" name=\\\"button\\\" type=\\\"submit\\\">{{ 'PROFILE.SAVE_BUTTON' | translate }}</button>\\n      </div>\\n    </div>\\n  </form>\\n\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvbm90aWZpY2F0aW9uc2V0dGluZ3Mvbm90aWZpY2F0aW9uc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 12-06-2019\n# Module                : NotificationsettingsComponent                     \n# Object name           : NotificationsettingsComponent    \n# Functionality         : for notification settings \n# Purpose               : constructor, ngOnInit, saveNotificationSettings\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm, FormArray, FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UsersService } from \"../../services/users.service\";\nimport { CommonService } from \"../../services/common.service\";\nimport * as Global from '../../globalConfig';\n@Component({\n  selector: 'app-notificationsettings',\n  templateUrl: './notificationsettings.component.html',\n  styleUrls: ['./notificationsettings.component.scss']\n})\nexport class NotificationsettingsComponent implements OnInit {\n  settingsSuccessMessage:any = '';\n  settingsErrMessage:any = '';\n  settingsForm: FormGroup; // privacy form\n\n    /* Function Name : constructor\n\t* Author : \n\t* Created Date : 12-06-2019\n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and defin the languages data\n\t* PARAMS : \n\t*/\n  constructor(    translate: TranslateService,\n    private uService: UsersService,\n    private cService: CommonService,\n    private formBuilder: FormBuilder) {\n      this.cService.activelang.subscribe((lang) => {\n\n        // this language will be used as a fallback when a translation isn't found in the current language\n        translate.setDefaultLang(lang);\n  \n        // the lang to use, if the lang isn't available, it will use the current loader to get them\n        translate.use(lang);\n      });\n    }\n  /* Function Name : ngOnInit\n\t* Author : \n\t* Created Date : 12-06-2019\n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS : \n\t*/\n  ngOnInit() {\n    this.settingsForm = this.formBuilder.group({\n      \"viewing_profile\": new FormControl(''),\n      \"testimonial\": new FormControl(''),\n      \"send_request\": new FormControl(''),\n      \"accept_request\": new FormControl(''),\n      \"my_connection_birth_day\": new FormControl('')\n    });\n    this.uService.getNotificationSettingsData()\n    .subscribe((responseData:any)=>{\n      if (responseData.statustext == 'success') {\n        if (responseData.data.viewing_profile == '1') {\n          this.settingsForm.controls['viewing_profile'].setValue(responseData.data.viewing_profile);\n        }\n        if (responseData.data.testimonial == '1') {\n          this.settingsForm.controls['testimonial'].setValue(responseData.data.testimonial);\n        }\n        if (responseData.data.send_request == '1') { \n          this.settingsForm.controls['send_request'].setValue(responseData.data.send_request);\n        }\n        if (responseData.data.accept_request == '1') {\n          this.settingsForm.controls['accept_request'].setValue(responseData.data.accept_request);\n        }\n        if (responseData.data.my_connection_birth_day == '1') {\n          this.settingsForm.controls['my_connection_birth_day'].setValue(responseData.data.my_connection_birth_day);\n        }\n\n       \n      }\n    });\n  }\n  /* Function Name : saveNotificationSettings\n\t* Author : \n\t* Created Date : 12-06-2019\n\t* Modified Date : *\n\t* Purpose : to save notification settings of a user\n\t* PARAMS : \n\t*/\n  saveNotificationSettings() {\n    this.settingsErrMessage = '';\n    this.settingsSuccessMessage = '';\n    this.uService.saveNotificationSettingsData(this.settingsForm.value)\n    .subscribe((responseData: any)=>{\n      if (responseData.statustext == 'success') {\n        this.settingsSuccessMessage = responseData.message;\n      } else if (responseData.statustext == 'error') {\n        this.settingsErrMessage = responseData.message;\n      }\n      Global.SCROLL_TO_TOP();\n      setTimeout(()=>{\n        this.settingsErrMessage = '';\n        this.settingsSuccessMessage = '';\n      },5000);\n    }); \n  }\n\n}\n","module.exports = \"<div class=\\\"proEdit privacyWrap\\\">\\n  <h2 class=\\\"withLine\\\"><span>{{ 'SETTINGS.SETTINGS' | translate }}</span></h2>\\n  <div class=\\\"alert alert-success text-center\\\" *ngIf=\\\"successMessage\\\">{{ successMessage }}</div>\\n  <div class=\\\"alert alert-danger text-center\\\" *ngIf=\\\"errMessage\\\">{{ errMessage }}</div>\\n  <ngb-tabset>\\n\\n    <ngb-tab>\\n      <ng-template ngbTabTitle><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i> {{ 'SETTINGS.PRIVACY' |\\n            translate }}</ng-template>\\n      <ng-template ngbTabContent>\\n        \\n        <form [formGroup]=\\\"privacyForm\\\" novalidate (submit)=\\\"savePrivacySettings()\\\">\\n          <div formArrayName=\\\"permissions\\\"\\n            *ngFor=\\\"let item of privacyForm.get('permissions')['controls']; let i = index;\\\">\\n            <div [formGroupName]=\\\"i\\\" class=\\\"formWrap inlineAll\\\">\\n              <label class=\\\"col-md-3\\\" for=\\\"\\\">{{ privacySettingsContent.options[i].name }}</label>\\n              <input type=\\\"hidden\\\" formControlName=\\\"option_id\\\" placeholder=\\\"Option\\\">\\n              <select class=\\\"col-md-9 inpField withSpace\\\" *ngIf=\\\"item.controls.settings_id\\\"\\n                formControlName=\\\"settings_id\\\">\\n                <option *ngFor=\\\"let setting of privacySettingsContent.settings\\\" [value]=\\\"setting.id\\\">\\n                  {{setting.name}}\\n                </option>\\n              </select>\\n              <div class=\\\"specific-connections\\\"\\n                *ngIf=\\\"item.controls.specific_users && item.controls.settings_id && item.controls.settings_id.value==4\\\">\\n                <div class=\\\"specific-add-container\\\">\\n                  <span class=\\\"addBtn withSpace\\\" id=\\\"addDrop\\\" (click)=\\\"openAddBox(i)\\\">\\n                    <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> ADD\\n                  </span>\\n\\n                  <div *ngIf=\\\"specificAddBox == i\\\" class=\\\"search-connections-privacy\\\">\\n                    <input type=\\\"text\\\" name=\\\"\\\" [value]=\\\"specificAddInputValue\\\" (keyup)=\\\"searchConnection(i, $event)\\\">\\n                    <ul>\\n                      <li *ngFor=\\\"let connection of connectionList\\\">\\n                        <span class=\\\"conImg\\\"><img alt=\\\"\\\" src=\\\"assets/images/proimg9.jpg\\\"></span>\\n                        <span class=\\\"conName\\\">{{ connection.friend_full_name }}</span>\\n                        <span class=\\\"toAdd\\\" (click)=\\\"addConnectionToSpacificSettings(i,connection)\\\"><i\\n                            class=\\\"fa fa-plus\\\"></i></span>\\n                      </li>\\n\\n                    </ul>\\n                  </div>\\n\\n                </div>\\n                <div class=\\\"blockBtn\\\" *ngIf=\\\"specificConnections[i] && specificConnections[i].length >0\\\">\\n                  <span *ngFor=\\\"let c of specificConnections[i]\\\">\\n                    {{ c.name }} <i class=\\\"fa fa-times\\\" (click)=\\\"removeConnections(i, c)\\\"></i> <small>|</small>\\n                  </span>\\n                </div>\\n              </div>\\n\\n              <label class=\\\"switch\\\" *ngIf=\\\"item.controls.show_status\\\">\\n                <input type=\\\"checkbox\\\" formControlName=\\\"show_status\\\" [value]=\\\"1\\\">\\n                <span class=\\\"slider\\\"></span>\\n              </label>\\n\\n              <span *ngIf=\\\"item.controls.show_status\\\" class=\\\"siteTooltip\\\" placement=\\\"right\\\"\\n                ngbTooltip=\\\"Example: &#013; Your Profile Now Is Shown\\\"><i class=\\\"fa fa-exclamation-triangle\\\"\\n                  aria-hidden=\\\"true\\\"></i></span>\\n\\n\\n            </div>\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 col-xs-12\\\">\\n              \\n            </div>\\n          </div>\\n          <div class=\\\"buttonGr\\\">\\n            <div class=\\\"text-left\\\">\\n                <a role=\\\"button\\\" class=\\\"btnGreen\\\" [routerLink]=\\\"['/my-blocks']\\\">{{ 'BLOCKS.MYBLOCKS' |translate }}</a>\\n            </div>\\n            <div class=\\\"text-right\\\">\\n              <button class=\\\"btnGreen\\\" name=\\\"button\\\" type=\\\"submit\\\">{{ 'PROFILE.SAVE_BUTTON' | translate }}</button>\\n            </div>\\n          </div>\\n        </form>\\n\\n      </ng-template>\\n    </ngb-tab>\\n    <ngb-tab>\\n      <ng-template ngbTabTitle><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i> {{ 'SETTINGS.GENERAL' |\\n            translate }}</ng-template>\\n      <ng-template ngbTabContent>\\n          <form [formGroup]=\\\"generalSettingsForm\\\" novalidate (submit)=\\\"saveGeneralSettings()\\\">\\n            <div class=\\\"formWrap inlineAll\\\">\\n                <label class=\\\"col-md-3\\\" for=\\\"\\\">{{ 'SETTINGS.PREFFERED_LANG'| translate }}</label>\\n                <select class=\\\"col-md-9 inpField withSpace\\\" \\n                  formControlName=\\\"preffered_lang\\\">\\n                  <option value=\\\"\\\">{{ 'PROFILE.SELECT_ANY_LANG'| translate }}</option>\\n                  <option *ngFor=\\\"let lang of allLanguage\\\" [value]=\\\"lang.id\\\">\\n                    {{lang.lang_name}}\\n                  </option>\\n                </select>\\n            </div>\\n            <div class=\\\"buttonGr\\\">\\n                <div class=\\\"text-right\\\">\\n                  <button class=\\\"btnGreen\\\" name=\\\"button\\\" type=\\\"submit\\\">{{ 'PROFILE.SAVE_BUTTON' | translate }}</button>\\n                </div>\\n              </div>\\n            </form>\\n      </ng-template>\\n    </ngb-tab>\\n  </ngb-tabset>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJpdmFjeXNldHRpbmdzL3ByaXZhY3lzZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 25-01-2019\n# Module                : PrivacysettingsComponent                     \n# Object name           : PrivacysettingsComponent    \n# Functionality         : privacy settings of auser\n# Purpose               : constructor, ngOnInit, createItem, filterSettingsValue, savePrivacySettings\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm, FormArray } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UsersService } from \"../../services/users.service\";\nimport { CommonService } from \"../../services/common.service\";\nimport * as global from \"../../globalConfig\";\nimport swal from 'sweetalert';\n@Component({\n\tselector: 'app-privacysettings',\n\ttemplateUrl: './privacysettings.component.html',\n\tstyleUrls: ['./privacysettings.component.scss']\n})\nexport class PrivacysettingsComponent implements OnInit {\n\n\tprivacyForm: FormGroup; // privacy form\n\tpermissions: FormArray; // permissions\n\tprivacySettingsContent: any; // settings content\n\tsuccessMessage: string = ''; // success message\n\terrMessage: string = ''; // error message\n\tconnectionList: Array<any> = [];\n\tspecificConnections: any = {};\n\tspecificAddBox: any = null;\n\tspecificAddInputValue: any = null;\n\tgeneralSettingsForm: FormGroup;\n\tallLanguage: Array<any> = [];\n\tgeneralSettingsData: any = {};\n\t/* Function Name : constructor\n\t  * Author : \n\t  * Created Date : 25-01-2019 \n\t  * Modified Date : *\n\t  * Purpose : to define the all helpful objects and define the languages data\n\t  * PARAMS : translate, uService, cService, formBuilder\n\t  */\n\tconstructor(\n\t\tprivate translate: TranslateService,\n\t\tprivate uService: UsersService,\n\t\tprivate cService: CommonService,\n\t\tprivate formBuilder: FormBuilder,\n\t) {\n\t\tthis.cService.activelang.subscribe((lang) => {\n\n\t\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\t\tthis.translate.setDefaultLang(lang);\n\n\t\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\t\tthis.translate.use(lang);\n\t\t});\n\t}\n\t/* Function Name : ngOnInit\n\t  * Author : \n\t  * Created Date : 25-01-2019 \n\t  * Modified Date : *\n\t  * Purpose : to get data after html load\n\t  * PARAMS : \n\t  */\n\tngOnInit() {\n\n\t\tthis.privacyForm = this.formBuilder.group({\n\t\t\t\"permissions\": this.formBuilder.array([])\n\t\t});\n\t\tthis.permissions = this.privacyForm.get('permissions') as FormArray;\n\t\tthis.uService.privacySettings().subscribe((responseData: any) => {\n\t\t\tthis.privacySettingsContent = responseData.data;\n\t\t\tif (responseData.data.options && responseData.data.options.length > 0) {\n\t\t\t\tresponseData.data.options.forEach((item, index) => {\n\t\t\t\t\tthis.permissions.push(this.createItem(item, index));\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\n\t\tthis.generalSettingsForm = this.formBuilder.group({\n\t\t\t\"preffered_lang\": [\"\"]\n\t\t});\n\t\tthis.uService.getGeneralSettings()\n\t\t\t.subscribe((responseSettingsData: any) => {\n\t\t\t\tif (responseSettingsData.statustext == 'success') {\n\t\t\t\t\tthis.generalSettingsData = responseSettingsData.data.settings;\n\t\t\t\t\tthis.generalSettingsForm.setValue({\n\t\t\t\t\t\t\"preffered_lang\": this.generalSettingsData.preffered_lang\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\tthis.getlanguage();\n\t}\n\t/* Function Name : createItem\n\t  * Author : \n\t  * Created Date : 25-01-2019 \n\t  * Modified Date : *\n\t  * Purpose : to create items\n\t  * PARAMS : item, index\n\t  */\n\tcreateItem(item, index): FormGroup {\n\t\tlet formObj = {\n\t\t\toption_id: item.id\n\t\t};\n\t\tif (item.type === 0) {\n\t\t\tformObj['settings_id'] = this.filterSettingsValue(item.id).settings_id;\n\t\t\tlet specificUser = this.filterSettingsValue(item.id).specific_users;;\n\t\t\tformObj['specific_users'] = specificUser;\n\t\t\tif (specificUser) {\n\t\t\t\tthis.specificConnections[index] = JSON.parse(specificUser);\n\t\t\t}\n\t\t} else {\n\t\t\tformObj['show_status'] = this.filterSettingsValue(item.id).show_status;\n\t\t}\n\t\treturn this.formBuilder.group(formObj);\n\t}\n\t/* Function Name : ngOnInit\n\t  * Author : \n\t  * Created Date : 25-01-2019 \n\t  * Modified Date : *\n\t  * Purpose : to filter settings value\n\t  * PARAMS : optionId\n\t  */\n\tfilterSettingsValue(optionId): any {\n\n\t\tlet item = {};\n\t\titem = this.privacySettingsContent.userPermission.find((uPermission: any) => {\n\t\t\treturn uPermission.option_id == optionId;\n\t\t});\n\t\treturn (item) ? item : {};\n\t}\n\t/* Function Name : savePrivacySettings\n\t  * Author : \n\t  * Created Date : 25-01-2019 \n\t  * Modified Date : *\n\t  * Purpose : to save user privacy settings\n\t  * PARAMS : \n\t  */\n\tsavePrivacySettings() {\n\n\t\tthis.uService.savePrivacySettings(this.privacyForm.value)\n\t\t\t.subscribe((responseData: any) => {\n\t\t\t\tglobal.SCROLL_TO_TOP();\n\t\t\t\tif (responseData.statustext === 'success') {\n\t\t\t\t\tthis.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\t\ttext: responseData.message,\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else if (responseData.statustext === 'error') {\n\t\t\t\t\tthis.translate.get('COMMON.ERROR').subscribe((tData) => {\n\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\t\ttext: responseData.message,\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t}\n\t/* Function Name : searchConnection\n\t  * Author : \n\t  * Created Date : 14-03-2019 \n\t  * Modified Date : *\n\t  * Purpose : to search connections of a user\n\t  * PARAMS : \n\t  */\n\tsearchConnection(index, event) {\n\t\tlet keyword = event.target.value;\n\t\tthis.connectionList = [];\n\t\tif (keyword) {\n\t\t\tlet postData = {\n\t\t\t\t\"page_name\": 'connection',\n\t\t\t\t\"keyword\": keyword\n\t\t\t}\n\t\t\tthis.specificAddInputValue = keyword;\n\t\t\tthis.uService.searchUsers(postData)\n\t\t\t\t.subscribe((responseData: any) => {\n\t\t\t\t\tif (responseData.statustext == 'success') {\n\t\t\t\t\t\tthis.connectionList = responseData.data.list.list;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/* Function Name : addConnectionToSpacificSettings\n\t  * Author : \n\t  * Created Date : 14-03-2019 \n\t  * Modified Date : *\n\t  * Purpose : to add connections  with settings \n\t  * PARAMS : index, connection\n\t  */\n\taddConnectionToSpacificSettings(index, connection) {\n\t\tlet settingsInput = this.privacyForm.get('permissions')['controls'][index]['controls']['specific_users'];\n\t\tif (!this.specificConnections[index]) {\n\t\t\tthis.specificConnections[index] = [];\n\t\t}\n\t\tlet value = settingsInput.value;\n\t\tif (value) {\n\t\t\tvalue = JSON.parse(value);\n\t\t} else {\n\t\t\tvalue = [];\n\t\t}\n\t\tlet conObj = {\n\t\t\t\"id\": connection.friend_id,\n\t\t\t\"name\": connection.friend_full_name\n\t\t};\n\t\tlet checkExist = this.specificConnections[index].find((item) => {\n\t\t\treturn item.id == connection.friend_id;\n\t\t});\n\t\tif (!checkExist) {\n\t\t\tvalue.push(conObj);\n\t\t\tvalue = JSON.stringify(value);\n\t\t\tif (value == '[]') {\n\t\t\t\tvalue = null;\n\t\t\t}\n\t\t\tsettingsInput.setValue(value);\n\t\t\tthis.specificConnections[index].push(conObj);\n\t\t}\n\t}\n\t/* Function Name : openAddBox\n\t  * Author : \n\t  * Created Date : 14-03-2019 \n\t  * Modified Date : *\n\t  * Purpose : to open search box \n\t  * PARAMS : index\n\t  */\n\topenAddBox(index) {\n\t\tif (this.specificAddBox && this.specificAddBox == index) {\n\t\t\tthis.specificAddBox = null;\n\t\t} else {\n\t\t\tthis.specificAddBox = index;\n\t\t}\n\t\tthis.connectionList = [];\n\t\tthis.specificAddInputValue = '';\n\t}\n\n\t/* Function Name : removeConnections\n\t  * Author : \n\t  * Created Date : 15-03-2019 \n\t  * Modified Date : *\n\t  * Purpose : to remove  a connection from specific user list\n\t  * PARAMS : index, connection\n\t  */\n\tremoveConnections(index, connection) {\n\t\tlet connectionIndex = this.specificConnections[index].indexOf(connection);\n\t\tthis.specificConnections[index].splice(connectionIndex, 1);\n\t\tlet settingsInput = this.privacyForm.get('permissions')['controls'][index]['controls']['specific_users'];\n\t\tlet value = JSON.stringify(this.specificConnections[index]);\n\t\tif (value == '[]') {\n\t\t\tvalue = null;\n\t\t}\n\t\tsettingsInput.setValue(value);\n\t}\n\n\t/* Function Name : getlanguage\n\t* Author : \n\t* Created Date : 26-04-2019 \n\t* Modified Date : *\n\t* Purpose : to get all language data\n\t* PARAMS :  \n\t*/\n\tgetlanguage() {\n\t\tthis.cService.getLanguages().subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tthis.allLanguage = response['data'];\n\t\t\t} else {\n\t\t\t\tconsole.log('language error');\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/* Function Name : saveGeneralSettings\n\t* Author : \n\t* Created Date : 26-04-2019 \n\t* Modified Date : *\n\t* Purpose : to save general settings\n\t* PARAMS :  \n\t*/\n\tsaveGeneralSettings() {\n\n\t\tif (this.generalSettingsData.preffered_lang == this.generalSettingsForm.value.preffered_lang) {\n\t\t\tthis.translate.get('COMMON.NO_CHNAGES').subscribe((tData) => {\n\t\t\t\tthis.errMessage = tData;\n\t\t\t});\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.errMessage = '';\n\t\t\t},5000);\n\t\t} else {\n\t\t\tthis.uService.saveGeneralSettings(this.generalSettingsForm.value)\n\t\t\t\t.subscribe((responseData: any) => {\n\t\t\t\t\tlet langCode = this.allLanguage.find((item) => {\n\t\t\t\t\t\treturn item.id == this.generalSettingsForm.value.preffered_lang;\n\t\t\t\t\t});\n\t\t\t\t\tlocalStorage.setItem('_lang', langCode.lang_code);\n\t\t\t\t\tlocation.reload();\n\t\t\t\t\tif ((responseData['statustext'] === 'success')) {\n\t\t\t\t\t\tthis.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n\t\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\t\t\ttext: responseData.message,\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t});\n\n\t\t}\n\n\t}\n}\n","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 10-01-2019\n# Module                : ProfileRoutingModule                     \n# Object name           : ProfileRoutingModule    \n# Functionality         : set up profile module routes\n# Purpose               : \n*******************************************************/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport {SetupprofileGuard} from '../setupprofile.guard';\nimport {ProfileGuard} from './profile.guard';\nimport { ProfileviewComponent } from './profileview/profileview.component';\nimport { ProfileeditComponent } from './profileedit/profileedit.component';\nimport { ListComponent } from './list/list.component';\nimport { PrivacysettingsComponent } from './privacysettings/privacysettings.component';\nimport { PublicprofileComponent } from './publicprofile/publicprofile.component';\nimport { TestimonialComponent } from './testimonial/testimonial.component';\nimport { ControllpanelsettingsComponent } from './controllpanelsettings/controllpanelsettings.component';\nimport { CardbuilderComponent } from './cardbuilder/cardbuilder.component';\nimport { ChangepasswordComponent } from './changepassword/changepassword.component';\nimport { ConnectionsComponent } from './connections/connections.component';\nimport { BlocksComponent } from './blocks/blocks.component';\nimport { SeemorenotificationsComponent } from './seemorenotifications/seemorenotifications.component';\nimport { AllInvitationsComponent } from './all-invitations/all-invitations.component';\nimport { AllRecommendationsComponent } from './all-recommendations/all-recommendations.component';\nimport { CardbuildersuccessComponent } from './cardbuildersuccess/cardbuildersuccess.component';\nimport { NotificationsettingsComponent } from './notificationsettings/notificationsettings.component';\nimport { ChatHistoryComponent } from './chat-history/chat-history.component';\nimport { LifetimeComponent } from './lifetime/lifetime.component';\nimport { MyblocklistComponent } from './myblocklist/myblocklist.component';\nconst routes: Routes = [\n  {\n    path : \"profile\",\n    canActivate: [SetupprofileGuard],\n    children : [\n      { path : \"\",  canActivate: [AuthGuard], component : ProfileviewComponent },\n      { path : \"edit\", canActivate: [AuthGuard], component : ProfileeditComponent },\n\n    ]\n  },\n  \n  // { path : \"user/chart/:userCPP\",   component : ProfileChartComponent },\n  {\n    path : \"testimonial\",\n    pathMatch: 'full',\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: TestimonialComponent\n  },\n  {\n    path : \"search\",\n    pathMatch: 'full',\n    component: ListComponent\n  },\n  {\n    path : \"privacy-settings\",\n    pathMatch: 'full',\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: PrivacysettingsComponent\n  },\n  {\n    path : \"notification-settings\",\n    pathMatch: 'full',\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: NotificationsettingsComponent\n  },\n  \n  {\n    path : \"control-panel-settings\",\n    pathMatch: 'full',\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: ControllpanelsettingsComponent\n  },\n  {\n    path : \"card/build\",\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: CardbuilderComponent\n  },\n  {\n    path : \"card/success/:token\",\n    canActivate: [AuthGuard,SetupprofileGuard],\n    component: CardbuildersuccessComponent\n  },\n  {\n    path : \"change-password\",\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: ChangepasswordComponent\n  },\n  {\n    path : \"connections\",\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: ConnectionsComponent\n  },\n\n  {\n    path : \"blocks\",\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: BlocksComponent\n  },\n\n  {\n    path : \"notifications\",\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: SeemorenotificationsComponent\n  },\n\n  {\n    path : \"invitations\",\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: AllInvitationsComponent\n  },\n\n  {\n    path : \"recommendations\",\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: AllRecommendationsComponent\n  },  \n  {\n    path : \"chat-histroy\",\n    canActivate:[AuthGuard, SetupprofileGuard],\n    component : ChatHistoryComponent\n  },\n  {\n    path: 'my-blocks',\n    canActivate: [AuthGuard, SetupprofileGuard],\n    component: MyblocklistComponent\n  },\n  { path : \"lifetime\",   component : LifetimeComponent },\n  { path : \":userCPP\",   component : PublicprofileComponent, canActivate:[ProfileGuard] },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {UsersService} from \"../services/users.service\";\nimport {CommonService} from \"../services/common.service\";\nimport { map } from 'rxjs/operators';\nimport * as CryptoJS from 'crypto-js';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileGuard implements CanActivate {\n\n  constructor(private uService: UsersService, private router: Router, private cService: CommonService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      let cpp:any = state.url.split(\"/\");\n      cpp = cpp[1];\n      let user = null;\n      if (localStorage.getItem(\"_user\")) {\n        user = this.cService.getLoggedUserData();\n        user = parseInt(user._i);\n      }\n\n      return this.uService.userPrivacyCheckingData({cpp:cpp})\n      .pipe(map((responseData:any)=>{\n        if (responseData.statustext === 'success') {\n          let currentUser =  responseData.data.find((item)=>{\n            return item.cpp.toLowerCase() == cpp.toLowerCase();\n          });\n          let loggedInUser =  responseData.data.find((item)=>{\n            return item.id == user;\n          });\n          if (currentUser && currentUser.privacySettings) {\n            let viewProfileSettings = currentUser.privacySettings.find((item)=>{\n              return item.option.flag === 'view-my-profile';\n            });\n            if (viewProfileSettings  && viewProfileSettings.show_status == 0) {\n              this.router.navigate([\"access-deny\"]);\n            }\n            \n            let guestviewProfileSettings = currentUser.privacySettings.find((item)=>{\n              return item.option.flag === 'guest-view-my-profile';\n            });\n            if (!loggedInUser) {\n              if (guestviewProfileSettings && guestviewProfileSettings.show_status == 0) {\n                this.router.navigate([\"access-deny\"]);\n              }\n            }\n            if (loggedInUser) {\n              let currentUserBlockIds = [];\n              if (currentUser.blocksIds && currentUser.blocksIds.blocks_ids) {\n                currentUserBlockIds = currentUser.blocksIds.blocks_ids.split(\",\");\n              }\n              let loggedInUserBlockIds = [];\n              if (loggedInUser.blocksIds && loggedInUser.blocksIds.blocks_ids) {\n                loggedInUserBlockIds = loggedInUser.blocksIds.blocks_ids.split(\",\");\n              }\n              if (currentUserBlockIds.indexOf( loggedInUser.id.toString() ) > -1 || loggedInUserBlockIds.indexOf( currentUser.id.toString() ) > -1) {\n                this.router.navigate([\"access-deny\"]);\n              }\n            }\n          }\n          return true;\n        } else {\n          return false;\n        }\n      }));\n\n  }\n}\n","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 10-01-2019\n# Module                : ProfileModule                     \n# Object name           : ProfileModule    \n# Functionality         : set up profile module\n# Purpose               : \n*******************************************************/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { ProfileviewComponent } from './profileview/profileview.component';\nimport { ProfileeditComponent } from './profileedit/profileedit.component';\nimport { ListComponent } from './list/list.component';\n\nimport { OwlModule } from 'ngx-owl-carousel';\nimport { PrivacysettingsComponent } from './privacysettings/privacysettings.component';\nimport { ImageCropperModule } from \"ngx-img-cropper\";\nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport {GlobalModule} from \"../global/global.module\";\nimport { PublicprofileComponent } from './publicprofile/publicprofile.component';\nimport { TestimonialComponent } from './testimonial/testimonial.component';\nimport { ControllpanelsettingsComponent } from './controllpanelsettings/controllpanelsettings.component';\nimport { CardbuilderComponent } from './cardbuilder/cardbuilder.component';\nimport { ChangepasswordComponent } from './changepassword/changepassword.component';\nimport { ConnectionsComponent } from './connections/connections.component';\nimport { BlocksComponent } from './blocks/blocks.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { ShareButtonModule } from '@ngx-share/button';\nimport { SeemorenotificationsComponent } from './seemorenotifications/seemorenotifications.component';\nimport { AllInvitationsComponent } from './all-invitations/all-invitations.component';\nimport { AllRecommendationsComponent } from './all-recommendations/all-recommendations.component';\nimport { CardbuildersuccessComponent } from './cardbuildersuccess/cardbuildersuccess.component';\nimport { NotificationsettingsComponent } from './notificationsettings/notificationsettings.component';\nimport { ChatHistoryComponent } from './chat-history/chat-history.component';\nimport { PreviewcvComponent } from './previewcv/previewcv.component';\nimport { LifetimeComponent } from './lifetime/lifetime.component';\nimport { MyblocklistComponent } from './myblocklist/myblocklist.component';\n\n\n\n\n@NgModule({\n  declarations: [ProfileviewComponent, ProfileeditComponent, ListComponent, PrivacysettingsComponent, PublicprofileComponent, TestimonialComponent, ControllpanelsettingsComponent, CardbuilderComponent, ChangepasswordComponent,  ConnectionsComponent, BlocksComponent, NotificationsComponent, SeemorenotificationsComponent, AllInvitationsComponent, AllRecommendationsComponent, CardbuildersuccessComponent, NotificationsettingsComponent, ChatHistoryComponent, PreviewcvComponent, LifetimeComponent, MyblocklistComponent],\n  imports: [\n    ImageCropperModule,\n    CommonModule,\n    ProfileRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    OwlModule,\n    \n    NgCircleProgressModule.forRoot(),\n    GlobalModule,\n    ShareButtonModule,\n    ChartsModule\n  ]\n})\nexport class ProfileModule { }\n","module.exports = \"<div class=\\\"proEdit\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3  col-xs-12 \\\">\\n          <div class=\\\"editImage\\\">\\n            <div class=\\\"editImageMain\\\">\\n              <div class=\\\"editImagePop\\\" (click)=\\\"openEditPicModal(content)\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                  aria-hidden=\\\"true\\\"></i></div>\\n              <img *ngIf=\\\"profilePic\\\" [src]=\\\"profilePic\\\" />\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <button type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"openEditPicModal(content)\\\">{{\\n                'PROFILEEDIT.EDIT'|translate }}</button>\\n              <button *ngIf=\\\"profilePic\\\" class=\\\"remove\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"removeProfilePic()\\\">{{\\n                'PROFILEEDIT.REMOVE'|translate }}</button>\\n            </div>\\n          </div>\\n        </div>\\n       <div class=\\\"col-md-9 col-xs-12 profile-edit-form-main-content\\\">\\n\\n         <ngb-tabset #tab=\\\"ngbTabset\\\" (tabChange)=\\\"changeTabEvent($event)\\\">\\n           <!-- Personal Info -->\\n           <ngb-tab id=\\\"personal\\\" (load)=\\\"personalDetails()\\\">\\n             <ng-template ngbTabTitle><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.PERSONAL_INFO' | translate }}</ng-template>\\n             <ng-template ngbTabContent>\\n               <div *ngIf=\\\"loader.personal.list\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></div>\\n               <div class=\\\"proEditForm\\\">\\n                  <div class=\\\"profile-edit-form-container\\\">\\n                    <div class=\\\"alert alert-success\\\" *ngIf=\\\"personalSuccessMsg\\\">{{ personalSuccessMsg }}</div>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"personalErrorMsg\\\">{{ personalErrorMsg }}</div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-4\\\">\\n                        <div class=\\\"formWrap\\\">\\n                          <label for=\\\"\\\">{{ 'PROFILEEDIT.FIRST_NAME'|translate }} :</label>\\n                          <input class=\\\"inpField\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.first_name\\\" value=\\\"\\\" placeholder=\\\"\\\">\\n                          <div *ngIf=\\\"personalForm.submit && (personalForm.first_name==null || personalForm.first_name =='')\\\"\\n                            class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.FIRST_NAME_REQUIRED'|translate }}\\n                          </div>\\n      \\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-lg-4\\\">\\n                        <div class=\\\"formWrap\\\">\\n                          <label for=\\\"\\\">{{ 'PROFILEEDIT.LAST_NAME'|translate }} :</label>\\n                          <input class=\\\"inpField\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.last_name\\\" value=\\\"\\\" placeholder=\\\"\\\">\\n                          <div *ngIf=\\\"personalForm.submit && (personalForm.last_name==null || personalForm.last_name =='')\\\"\\n                            class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.LAST_NAME_REQUIRED'|translate }}\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-lg-4\\\">\\n                        <div class=\\\"formWrap\\\">\\n                          <label for=\\\"\\\">{{ 'PROFILEEDIT.FAMILY_NAME'|translate }} :</label>\\n                          <input class=\\\"inpField\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.family_name\\\" value=\\\"\\\" placeholder=\\\"\\\">\\n      \\n      \\n                        </div>\\n                      </div>\\n                    </div>\\n      \\n                    <div class=\\\"row\\\">\\n                      \\n                      <div class=\\\"col-lg-6\\\">\\n                        <div class=\\\"formWrap\\\">\\n                          <label for=\\\"\\\">{{ 'PROFILEEDIT.ADDRESS'|translate }} : </label>\\n                          <span class=\\\"formSpan\\\">\\n                            <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.address\\\" value=\\\"\\\" placeholder=\\\"\\\">\\n                          </span>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-lg-6\\\">\\n                        <div class=\\\"formWrap\\\">\\n                          <label for=\\\"\\\">{{ 'PROFILEEDIT.LOCATION'|translate }} : <small><i class=\\\"fa fa-asterisk\\\" aria-hidden=\\\"true\\\"></i></small></label>\\n                          <span class=\\\"formWrap\\\">\\n                            <ng-select class=\\\"inpField width200\\\" [items]=\\\"countryList\\\" [(ngModel)]=\\\"personalForm.country_id\\\"\\n                              bindLabel=\\\"name\\\" bindValue=\\\"id\\\" (change)=\\\"getCityList()\\\"></ng-select>\\n                            <div *ngIf=\\\"personalForm.submit && (personalForm.country_id==null || personalForm.country_id =='')\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                              {{ 'PROFILEEDIT.COUNTRY_REQUIRED'|translate }}\\n                            </div>\\n                          </span> &nbsp;\\n                          <span class=\\\"formWrap\\\">\\n                            <ng-select class=\\\"inpField width200\\\" [items]=\\\"cityList\\\" [(ngModel)]=\\\"personalForm.city_id\\\"\\n                              bindLabel=\\\"name\\\" bindValue=\\\"id\\\"></ng-select>\\n                            <div *ngIf=\\\"personalForm.submit && (personalForm.city_id==null || personalForm.city_id =='')\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                              {{ 'PROFILEEDIT.CITY_REQUIRED'|translate }}\\n                            </div>\\n                          </span>\\n      \\n                        </div>\\n                      </div>\\n                    </div>\\n      \\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-6\\\">\\n                          <div class=\\\"formWrap\\\">\\n                            <label for=\\\"\\\">{{ 'PROFILEEDIT.DOB'|translate }} : <small><i class=\\\"fa fa-asterisk\\\" aria-hidden=\\\"true\\\"></i></small></label>\\n                            <select [(ngModel)]=\\\"personalForm.dob_date\\\" class=\\\"inpField autoWidth withSpace\\\">\\n                              <option *ngFor=\\\"let d of dayList\\\" [value]=\\\"d.id\\\">{{d.name}}</option>\\n                            </select>\\n                            <select [(ngModel)]=\\\"personalForm.dob_month\\\" class=\\\"inpField autoWidth withSpace\\\">\\n                              <option *ngFor=\\\"let d of monthList\\\" [value]=\\\"d.id\\\">{{d.name}}</option>\\n                            </select>\\n                            <select [(ngModel)]=\\\"personalForm.dob_year\\\" class=\\\"inpField autoWidth withSpace\\\">\\n                              <option *ngFor=\\\"let d of years\\\" [value]=\\\"d\\\">{{d}}</option>\\n                            </select>\\n        \\n                          </div>\\n                        </div>\\n                      <div class=\\\"col-lg-6\\\">\\n                        <div class=\\\"formWrap\\\">\\n                          <label for=\\\"\\\">{{ 'PROFILEEDIT.EMAIL'|translate }} : <small><i class=\\\"fa fa-asterisk\\\" aria-hidden=\\\"true\\\"></i></small></label>\\n                          <span class=\\\"formSpan\\\">\\n                            <input class=\\\"inpField largeWidth\\\" type=\\\"email\\\" [(ngModel)]=\\\"personalForm.email\\\" value=\\\"\\\"\\n                              placeholder=\\\"\\\">\\n                            <div *ngIf=\\\"personalForm.submit && (personalForm.email==null || personalForm.email =='')\\\" class=\\\"alert alert-danger\\\">\\n                              {{ 'PROFILEEDIT.EMAIL_REQUIRED'|translate }}\\n                            </div>\\n                          </span>\\n                        </div>\\n                      </div>\\n                      \\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      \\n                      <div class=\\\"col-lg-6\\\">\\n                          <div class=\\\"formWrap\\\">\\n                            <label for=\\\"\\\">{{ 'PROFILEEDIT.MOBILE'|translate }} : <small><i class=\\\"fa fa-asterisk\\\" aria-hidden=\\\"true\\\"></i></small></label>\\n                            <span class=\\\"formSpan\\\">\\n                              <div class=\\\"inpField largeWidth profile-edit-mobile\\\">\\n                                  <ng-select class=\\\"inpField phCodeSelect\\\" [items]=\\\"countryCodes\\\" bindLabel=\\\"code\\\"\\n                                  bindValue=\\\"code\\\" [clearable]=\\\"false\\\" [searchable]=\\\"false\\\" [(ngModel)]=\\\"personalForm.mobile_code\\\"\\n                                  >\\n                                  <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                    <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.flag | picturepath:'flag'\\\"/>&nbsp;\\n                                    <b>{{item.code}}</b>\\n                                    </ng-template>\\n                                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\">\\n                                        <img height=\\\"15\\\" width=\\\"15\\\" [src]=\\\"item.flag | picturepath:'flag'\\\"/>&nbsp;\\n                                        <b>{{item.code}}</b>\\n                                    </ng-template>\\n                                  </ng-select>\\n      \\n                                <!-- <select [(ngModel)]=\\\"personalForm.mobile_code\\\">\\n                                    <option *ngFor=\\\"let code of countryCodes\\\" value=\\\"{{code.code}}\\\">\\n                                        {{ code.code+ '('+code.code+')' }}\\n                                    </option>\\n                                  </select> -->\\n                              <input type=\\\"text\\\" appOnlynumaricinput maxlength=\\\"10\\\" [(ngModel)]=\\\"personalForm.mobile_no\\\" value=\\\"\\\"\\n                                placeholder=\\\"\\\">\\n                              </div>\\n                              <div *ngIf=\\\"personalForm.submit && (personalForm.mobile_no==null || personalForm.mobile_no =='')\\\"\\n                                class=\\\"alert alert-danger\\\">\\n                                {{ 'PROFILEEDIT.MOBILE_REQUIRED'|translate }}\\n                              </div>\\n                              <div *ngIf=\\\"personalForm.submit && (personalForm.mobile_no.length != 10)\\\" class=\\\"alert alert-danger\\\">\\n                                {{ 'PROFILEEDIT.MOBILE_LENGTH'|translate }}\\n                              </div>\\n      \\n                            </span>\\n                          </div>\\n                      </div>\\n                      <div class=\\\"col-lg-6\\\">\\n                          <div class=\\\"formWrap\\\">\\n                            <label for=\\\"\\\">{{ 'PROFILEEDIT.WEBSITE'|translate }} :</label>\\n                            <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.website\\\" value=\\\"\\\"\\n                              placeholder=\\\"\\\">\\n        \\n                          </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"formWrap\\\">\\n                              <label for=\\\"\\\">{{ 'PROFILEEDIT.ABOUT_ME'|translate }} :</label>\\n                              <textarea maxlength=\\\"250\\\" class=\\\"inpField largeWidth\\\"  [(ngModel)]=\\\"personalForm.about_me\\\" \\n                                placeholder=\\\"\\\"></textarea>\\n          \\n                            </div>\\n                          </div>\\n                          <div class=\\\"col-lg-6\\\">\\n                            <div class=\\\"formWrap\\\">\\n                              <label for=\\\"\\\">{{ 'PROFILEEDIT.VIDEO_LINK'|translate }} :</label>\\n                              \\n                              <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.video_link\\\" value=\\\"\\\"\\n                                placeholder=\\\"\\\">\\n\\n                                <div *ngIf=\\\"personalForm.submit && (urlErr.video_link == 1)\\\" class=\\\"alert alert-danger\\\">\\n                                    {{ 'PROFILEEDIT.VALID_URL'|translate }}\\n                                  </div>\\n                                  <div *ngIf=\\\"personalForm.submit && (urlErr.video_link == 2)\\\" class=\\\"alert alert-danger\\\">\\n                                      {{ 'PROFILEEDIT.ONLY_YOUTUBE_LINK'|translate }}\\n                                    </div>\\n                            </div>\\n                          </div>\\n                    </div>\\n                    \\n      \\n                    <div class=\\\"formSocial\\\">\\n                      <h2>{{ 'PROFILEEDIT.SOCIAL_LINKS'|translate }} :</h2>\\n                      <ul>\\n                        <li><i class=\\\"fa fa-facebook\\\" aria-hidden=\\\"true\\\"></i> :\\n                          <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.facebook_link\\\" value=\\\"\\\"\\n                            placeholder=\\\"\\\">\\n                          <div *ngIf=\\\"personalForm.submit && (urlErr.facebook == true)\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.VALID_URL'|translate }}\\n                          </div>\\n                        </li>\\n                        <li><i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i> :\\n                          <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.twitter_link\\\" value=\\\"\\\"\\n                            placeholder=\\\"\\\">\\n                          <div *ngIf=\\\"personalForm.submit && (urlErr.twitter == true)\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.VALID_URL'|translate }}\\n                          </div>\\n                        </li>\\n                        <li><i class=\\\"fa fa-deviantart\\\" aria-hidden=\\\"true\\\"></i> :\\n                          <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.deviantart_link\\\" value=\\\"\\\"\\n                            placeholder=\\\"\\\">\\n                          <div *ngIf=\\\"personalForm.submit && (urlErr.deviantart == true)\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.VALID_URL'|translate }}\\n                          </div>\\n                        </li>\\n                        <li><i class=\\\"fa fa-dribbble\\\" aria-hidden=\\\"true\\\"></i> :\\n                          <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.dribbble_link\\\" value=\\\"\\\"\\n                            placeholder=\\\"\\\">\\n                          <div *ngIf=\\\"personalForm.submit && (urlErr.dribbble == true)\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.VALID_URL'|translate }}\\n                          </div>\\n                        </li>\\n                        <li><i class=\\\"fa fa-behance\\\" aria-hidden=\\\"true\\\"></i> :\\n                          <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.behance_link\\\" value=\\\"\\\"\\n                            placeholder=\\\"\\\">\\n                          <div *ngIf=\\\"personalForm.submit && (urlErr.behance == true)\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.VALID_URL'|translate }}\\n                          </div>\\n                        </li>\\n                        <li><i class=\\\"fa fa-pinterest-p\\\" aria-hidden=\\\"true\\\"></i> :\\n                          <input class=\\\"inpField largeWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"personalForm.pinterest_link\\\" value=\\\"\\\"\\n                            placeholder=\\\"\\\">\\n                          <div *ngIf=\\\"personalForm.submit && (urlErr.pinterest == true)\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'PROFILEEDIT.VALID_URL'|translate }}\\n                          </div>\\n                        </li>\\n                      </ul>\\n                    </div>\\n      \\n                  </div>\\n       \\n                 <div class=\\\"buttonGr\\\">\\n                   <div class=\\\"row\\\">\\n                     <div class=\\\"col-6\\\">\\n                       <a class=\\\"btnWhite\\\"   (click)=\\\"goToCvConsult()\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                     </div>\\n                     <div class=\\\"col-6\\\">\\n                       <div class=\\\"text-right\\\">\\n       \\n                         <button type=\\\"button\\\" class=\\\"btnGreen\\\" name=\\\"button\\\" (click)=updatePersonalFrom()>\\n                           <span *ngIf=\\\"loader.personal.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                           {{ 'PROFILEEDIT.SAVE' | translate}}\\n                         </button>\\n                       </div>\\n                     </div>\\n                   </div>\\n                 </div>\\n       \\n               </div>\\n             </ng-template>\\n           </ngb-tab>\\n           <!-- Personal Info -->\\n       \\n       \\n           <!-- Education -->\\n           <ngb-tab id=\\\"education\\\">\\n             <ng-template ngbTabTitle>\\n               <div>\\n                 <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.EDUCATION' | translate }}\\n               </div>\\n             </ng-template>\\n             <ng-template ngbTabContent>\\n       \\n               <div class=\\\"justify-content-center\\\">\\n                 <div class=\\\"profile-edit-form-container\\\">\\n                   <div class=\\\"alert alert-success\\\" *ngIf=\\\"educationSuccessMsg\\\">{{ educationSuccessMsg }}</div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DEGREE' | translate }} :</label>\\n                     <span class=\\\"formSpan col-xl-9\\\">\\n                       <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"degreelist\\\" [(ngModel)]=\\\"educationForm.degree_id\\\"\\n                         bindLabel=\\\"name\\\" bindValue=\\\"id\\\" (change)=\\\"getDegreeFields()\\\"></ng-select>\\n                       <div *ngIf=\\\"educationForm.submit && (educationForm.degree_id==null || educationForm.degree_id=='')\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DEGREE_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.FIELD' | translate }} :</label>\\n                     <span class=\\\"formSpan col-xl-9\\\">\\n                       <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"degreeFieldlist\\\" [(ngModel)]=\\\"educationForm.field_id\\\"\\n                         bindLabel=\\\"name\\\" bindValue=\\\"id\\\"></ng-select>\\n                       <div *ngIf=\\\"educationForm.submit && (educationForm.field_id==null || educationForm.field_id=='')\\\" class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DEGREE_FIELD_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DATE_OF_DEGREE' | translate }} :</label>\\n                     <span class=\\\"formSpan withSpace\\\">\\n                       <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_FROM' | translate}}\\\" class=\\\"inpField autoWidth\\\"\\n                         [items]=\\\"years\\\" (change)=\\\"reDefineToYear($event)\\\" [(ngModel)]=\\\"educationForm.from_year\\\"></ng-select>\\n                       <div *ngIf=\\\"educationForm.submit && (educationForm.from_year==null || educationForm.from_year=='')\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DEGREE_FROM_YEAR_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                     <span class=\\\"formSpan\\\">\\n                       <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_TO' | translate}}\\\" class=\\\"inpField autoWidth withSpace\\\"\\n                         [items]=\\\"toYears\\\" [(ngModel)]=\\\"educationForm.to_year\\\"></ng-select>\\n                       <div *ngIf=\\\"educationForm.submit && (educationForm.to_year==null || educationForm.to_year=='')\\\" class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DEGREE_TO_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"addField\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button type=\\\"button\\\" name=\\\"button\\\" (click)=submitEducationFrom()>\\n                         <span *ngIf=\\\"loader.education.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                         {{ 'PROFILEEDIT.SAVE' | translate}}</button>&nbsp;\\n                       <button type=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" name=\\\"button\\\" (click)=\\\"resetEducationForm()\\\">{{\\n                         'PROFILEEDIT.RESET' | translate}}</button>\\n                     </div>\\n                   </div>\\n                   <div class=\\\"formTable\\\">\\n                     <table class=\\\"table table-borderless\\\">\\n                       <thead>\\n                         <tr>\\n                           <th>#</th>\\n                           <th>{{'PROFILEEDIT.DEGREE' | translate }}</th>\\n                           <th>{{'PROFILEEDIT.FIELD' | translate }}</th>\\n                           <th>{{'PROFILEEDIT.DATE_OF_DEGREE' | translate }}</th>\\n                           <th></th>\\n                         </tr>\\n                       </thead>\\n                       <tbody>\\n                         <tr *ngIf=\\\"loader.education.list\\\">\\n                           <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                         </tr>\\n                         <tr *ngFor=\\\"let d of userDegreelist; let i=index\\\">\\n                           <td>{{(i+1)}} </td>\\n                           <td>{{ d.degreeDetails.details[0].name }}</td>\\n                           <td>{{ d.degreeFieldDetails.details[0].name }}</td>\\n                           <td>\\n                             {{ d.from_year }}\\n                             <span *ngIf=\\\"d.to_year\\\">\\n                               -\\n                               {{ d.to_year }}\\n                             </span>\\n                           </td>\\n                           <td>\\n                             <a href=\\\"javascript:\\\" (click)=\\\"editEducation(d)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                             <a href=\\\"javascript:\\\" (click)=\\\"deleteEducation(d.id)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                           </td>\\n                         </tr>\\n                         <tr *ngIf=\\\"userDegreelist.length === 0\\\">\\n                           <td colspan=\\\"5\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                         </tr>\\n                       </tbody>\\n                     </table>\\n                   </div>\\n       \\n                 </div>\\n               </div>\\n       \\n               <div class=\\\"buttonGr\\\">\\n                 <div class=\\\"row\\\">\\n                   <div class=\\\"col-6\\\">\\n                     <a class=\\\"btnWhite\\\"  (click)=\\\"goToCvConsult()\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                   </div>\\n                   <div class=\\\"col-6\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'personal')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                           aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                       <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'skills')\\\">{{\\n                         'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                     </div>\\n                   </div>\\n                 </div>\\n               </div>\\n       \\n             </ng-template>\\n           </ngb-tab>\\n           <!-- Skills -->\\n       \\n           <ngb-tab id=\\\"skills\\\">\\n             <ng-template ngbTabTitle><i class=\\\"fa fa-star\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.SKILLS' | translate }}</ng-template>\\n             <ng-template ngbTabContent>\\n               <div class=\\\"justify-content-center\\\">\\n                 <div class=\\\"profile-edit-form-container\\\">\\n                   <div class=\\\"alert alert-success\\\" *ngIf=\\\"skillSuccessMsg\\\">{{ skillSuccessMsg }}</div>\\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ \\\"PROFILEEDIT.SKILLS\\\"|translate }} :</label>\\n                     <span class=\\\"formSpan col-xl-9\\\">\\n                       <!-- <input class=\\\"inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"skillForm.skill_name\\\" value=\\\"\\\" placeholder=\\\"{{ 'PROFILEEDIT.SKILL_NAME'|translate }}\\\"> -->\\n                       <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"skillsList\\\" [(ngModel)]=\\\"skillForm.skill_id\\\" bindLabel=\\\"name\\\"\\n                         bindValue=\\\"id\\\"></ng-select>\\n       \\n                       <div *ngIf=\\\"skillForm.submit && (skillForm.skill_id==null || skillForm.skill_id =='')\\\" class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.SKILL_NAME_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ \\\"PROFILEEDIT.DEGREE\\\"|translate }} :</label>\\n                     <span class=\\\"formSpan\\\">\\n                       <label class=\\\"diffRadio\\\">\\n                         <input type=\\\"radio\\\" name=\\\"radio\\\" [checked]=\\\"skillForm.status==1\\\" (click)=\\\"skillForm.status=1\\\">\\n                         <span class=\\\"checkmark\\\"></span>\\n                         <span class=\\\"checkTxt\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_EXCELLENT\\\"|translate }}</span>\\n                       </label>\\n                       <label class=\\\"diffRadio\\\">\\n                         <input type=\\\"radio\\\" name=\\\"radio\\\" [checked]=\\\"skillForm.status==2\\\" (click)=\\\"skillForm.status=2\\\">\\n                         <span class=\\\"checkmark\\\"></span>\\n                         <span class=\\\"checkTxt\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_VERY_GOOD\\\"|translate }}</span>\\n                       </label>\\n                       <label class=\\\"diffRadio\\\">\\n                         <input type=\\\"radio\\\" name=\\\"radio\\\" [checked]=\\\"skillForm.status==3\\\" (click)=\\\"skillForm.status=3\\\">\\n                         <span class=\\\"checkmark\\\"></span>\\n                         <span class=\\\"checkTxt\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_GOOD\\\"|translate }}</span>\\n                       </label>\\n                       <label class=\\\"diffRadio\\\">\\n                         <input type=\\\"radio\\\" name=\\\"radio\\\" [checked]=\\\"skillForm.status==4\\\" (click)=\\\"skillForm.status=4\\\">\\n                         <span class=\\\"checkmark\\\"></span>\\n                         <span class=\\\"checkTxt\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_FRESH\\\"|translate }}</span>\\n                       </label>\\n                       <div *ngIf=\\\"skillForm.submit && (skillForm.status==null || skillForm.status =='')\\\" class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.SKILL_DEGREE_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"addField\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"submitSkillForm()\\\">\\n                         <span *ngIf=\\\"loader.skills.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                         {{ \\\"PROFILEEDIT.SAVE\\\"|translate }}</button>\\n                       &nbsp;\\n                       <button type=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" name=\\\"button\\\" (click)=\\\"resetSkillForm()\\\">{{\\n                         \\\"PROFILEEDIT.RESET\\\"|translate }}</button>\\n                     </div>\\n                   </div>\\n       \\n                   <div class=\\\"formTable\\\">\\n                     <table class=\\\"table table-borderless\\\">\\n                       <thead>\\n                         <tr>\\n                           <th>#</th>\\n                           <th>{{ \\\"PROFILEEDIT.SKILLS\\\"|translate }}</th>\\n                           <th>{{ \\\"PROFILEEDIT.DEGREE\\\"|translate }}</th>\\n                           <th></th>\\n                         </tr>\\n                       </thead>\\n                       <tbody>\\n                         <tr *ngIf=\\\"loader.skills.list\\\">\\n                           <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                         </tr>\\n                         <tr *ngFor=\\\"let s of userSkilllist; let i = index\\\">\\n                           <td>{{ (i+1) }}</td>\\n                           <td>{{ s.details[0].name }}</td>\\n                           <td>\\n                             <span *ngIf=\\\"s.status==1\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_EXCELLENT\\\"|translate }}</span>\\n                             <span *ngIf=\\\"s.status==2\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_VERY_GOOD\\\"|translate }}</span>\\n                             <span *ngIf=\\\"s.status==3\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_GOOD\\\"|translate }}</span>\\n                             <span *ngIf=\\\"s.status==4\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_FRESH\\\"|translate }}</span>\\n                           </td>\\n                           <td>\\n                             <a href=\\\"javascript:\\\" (click)=\\\"editSkills(s)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                             <a href=\\\"javascript:\\\" (click)=\\\"deleteSkills(s.id)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                           </td>\\n                         </tr>\\n                         <tr *ngIf=\\\"userSkilllist.length === 0\\\">\\n                           <td colspan=\\\"4\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                         </tr>\\n                       </tbody>\\n                     </table>\\n                   </div>\\n       \\n                 </div>\\n               </div>\\n       \\n               <div class=\\\"buttonGr\\\">\\n                 <div class=\\\"row\\\">\\n                   <div class=\\\"col-6\\\">\\n                     <a class=\\\"btnWhite\\\"  (click)=\\\"goToCvConsult()\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                   </div>\\n                   <div class=\\\"col-6\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'education')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                           aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                       <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'experience')\\\">{{\\n                         'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                     </div>\\n                   </div>\\n                 </div>\\n               </div>\\n       \\n             </ng-template>\\n           </ngb-tab>\\n           <!-- Experience -->\\n           <ngb-tab id=\\\"experience\\\">\\n             <ng-template ngbTabTitle><i class=\\\"fa fa-suitcase\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.EXPERIENCE' | translate }}</ng-template>\\n             <ng-template ngbTabContent>\\n               <div class=\\\"justify-content-center\\\">\\n                 <div class=\\\"profile-edit-form-container\\\">\\n                   <div class=\\\"alert alert-success\\\" *ngIf=\\\"experienceSuccessMsg\\\">{{ experienceSuccessMsg }}</div>\\n                   <div class=\\\"alert alert-danger\\\" *ngIf=\\\"experienceErrorMsg\\\">{{ experienceErrorMsg }}</div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.EXPERIENCE_COMAPNY_NAME' | translate }} :</label>\\n                     <span class=\\\"formSpan col-xl-9\\\">\\n                       <input class=\\\"inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"experienceForm.company_name\\\" value=\\\"\\\"\\n                         placeholder=\\\"{{'PROFILEEDIT.EXPERIENCE_COMAPNY_NAME' | translate }}\\\">\\n                       <div *ngIf=\\\"experienceForm.submit && (experienceForm.company_name==null || experienceForm.company_name =='')\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.EXPERIENCE_COMAPNY_NAME_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.POSITION' | translate }} :</label>\\n                     <span class=\\\"formSpan col-xl-9\\\">\\n                       <ng-select class=\\\"inpField fullWidth\\\" [items]=\\\"positionlist\\\" [(ngModel)]=\\\"experienceForm.position_id\\\"\\n                         bindLabel=\\\"name\\\" bindValue=\\\"id\\\"></ng-select>\\n                       <div *ngIf=\\\"experienceForm.submit && (experienceForm.position_id==null || experienceForm.position_id=='')\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.POSITION_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DURATION' | translate }} :</label>\\n                     <span class=\\\"formSpan withSpace\\\">\\n                       <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_FROM' | translate}}\\\" class=\\\"inpField autoWidth\\\"\\n                         [items]=\\\"years\\\" [(ngModel)]=\\\"experienceForm.from_year\\\" (change)=\\\"reDefineToYear($event)\\\"></ng-select>\\n                       <div *ngIf=\\\"experienceForm.submit && (experienceForm.from_year==null || experienceForm.from_year=='')\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DURATION_FROM_YEAR_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n       \\n                     <ng-select [disabled]=\\\"experienceForm.is_current\\\" placeholder=\\\"{{ 'PROFILEEDIT.DURATION_TO' | translate}}\\\"\\n                       class=\\\"inpField autoWidth withSpace\\\" [items]=\\\"toYears\\\" [(ngModel)]=\\\"experienceForm.to_year\\\"></ng-select>\\n       \\n                     <label class=\\\"customCheck\\\">{{'PROFILEEDIT.EXPERIENCE_CURRENT' | translate }}\\n                       <input type=\\\"checkbox\\\" [(ngModel)]=\\\"experienceForm.is_current\\\" (click)=\\\"checkValue($event)\\\">\\n                       <span class=\\\"checkmark\\\"></span>\\n                     </label>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap vertTop\\\" for=\\\"\\\">{{'PROFILEEDIT.EXPERIENCE_SUMMARY' | translate }} :</label>\\n                     <textarea class=\\\"col-xl-9 inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"experienceForm.summery\\\" value=\\\"\\\"\\n                       placeholder=\\\"{{'PROFILEEDIT.EXPERIENCE_SUMMARY' | translate }}\\\"></textarea>\\n                   </div>\\n       \\n                   <div class=\\\"addField\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button type=\\\"button\\\" name=\\\"button\\\" (click)=submitExperienceFrom()>\\n                         <span *ngIf=\\\"loader.experience.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                         {{ 'PROFILEEDIT.SAVE' | translate}}</button>&nbsp;\\n                       <button type=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" name=\\\"button\\\" (click)=resetExperienceForm()>{{\\n                         'PROFILEEDIT.RESET' | translate}}</button>\\n                     </div>\\n                   </div>\\n       \\n                   <div class=\\\"formTable\\\">\\n                     <table class=\\\"table table-borderless\\\">\\n                       <thead>\\n                         <tr>\\n                           <th>#</th>\\n                           <th>{{'PROFILEEDIT.POSITION' | translate }}</th>\\n                           <th>{{'PROFILEEDIT.EXPERIENCE_COMAPNY_NAME' | translate }}</th>\\n                           <th>{{'PROFILEEDIT.DURATION_FROM' | translate }}</th>\\n                           <th>{{'PROFILEEDIT.DURATION_TO' | translate }}</th>\\n                           <th>{{'PROFILEEDIT.ACTION' | translate }}</th>\\n                         </tr>\\n                       </thead>\\n                       <tbody>\\n                         <tr *ngIf=\\\"loader.experience.list\\\">\\n                           <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                         </tr>\\n                         <tr *ngFor=\\\"let e of userExperiencelist; let i=index\\\">\\n                           <td>{{(i+1)}}</td>\\n                           <td>{{ e.position.details[0].name }} </td>\\n                           <td>{{ (e.company_name)? e.company_name: ((e.company)?e.company.details[0].name:'') }}</td>\\n                           <td>{{ e.from_year }}</td>\\n                           <td>{{ e.to_year }} <span *ngIf=\\\"e.is_current==1\\\">{{ 'PROFILE.EXPERIENCE_CURRENT' | translate }}</span></td>\\n       \\n                           <td>\\n                             <a href=\\\"javascript:\\\" (click)=\\\"editExperience(e)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                             <a href=\\\"javascript:\\\" (click)=\\\"deleteExperience(e.id)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                           </td>\\n                         </tr>\\n                         <tr *ngIf=\\\"userExperiencelist.length === 0\\\">\\n                           <td colspan=\\\"6\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                         </tr>\\n                       </tbody>\\n                     </table>\\n                   </div>\\n       \\n                 </div>\\n               </div>\\n       \\n               <div class=\\\"buttonGr\\\">\\n                 <div class=\\\"row\\\">\\n                   <div class=\\\"col-6\\\">\\n                     <a class=\\\"btnWhite\\\"  (click)=\\\"goToCvConsult()\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                   </div>\\n                   <div class=\\\"col-6\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'skills')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                           aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                       <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'certificate')\\\">{{\\n                         'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                     </div>\\n                   </div>\\n                 </div>\\n               </div>\\n             </ng-template>\\n           </ngb-tab>\\n           <!-- Experience -->\\n       \\n           <!-- Certificate -->\\n           <ngb-tab id=\\\"certificate\\\">\\n             <ng-template ngbTabTitle><i class=\\\"fa fa-graduation-cap\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.CERTIFICATE' |\\n               translate }}</ng-template>\\n             <ng-template ngbTabContent>\\n               <div class=\\\"justify-content-center\\\">\\n                 <div class=\\\"profile-edit-form-container\\\">\\n                   <div class=\\\"alert alert-success\\\" *ngIf=\\\"certificateSuccessMsg\\\">{{ certificateSuccessMsg }}</div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.CERTIFICATE' | translate }} :</label>\\n                     <span class=\\\"formSpan col-xl-9\\\">\\n                       <input class=\\\"inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"certificateForm.certificate_name\\\" value=\\\"\\\"\\n                         placeholder=\\\"{{ 'PROFILEEDIT.CERTIFICATE' | translate }}\\\">\\n                       <div *ngIf=\\\"certificateForm.submit && (certificateForm.certificate_name==null || certificateForm.certificate_name =='')\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         {{ 'PROFILEEDIT.CERTIFICATE_NAME_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap vertTop\\\" for=\\\"\\\">{{ 'PROFILEEDIT.CERTIFICATE_SUMMARY' | translate }} :</label>\\n                     <textarea class=\\\"col-xl-9 inpField fullWidth\\\" [(ngModel)]=\\\"certificateForm.summery\\\" placeholder=\\\"{{ 'PROFILEEDIT.CERTIFICATE_SUMMARY' | translate }}\\\"></textarea>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DURATION' | translate }} :</label>\\n                     <span class=\\\"formSpan withSpace\\\">\\n                       <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_FROM' | translate}}\\\" class=\\\"inpField autoWidth\\\"\\n                         [items]=\\\"years\\\" [(ngModel)]=\\\"certificateForm.from_year\\\" (change)=\\\"reDefineToYear($event)\\\"></ng-select>\\n                       <div *ngIf=\\\"certificateForm.submit && (certificateForm.from_year==null || certificateForm.from_year=='')\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DURATION_FROM_YEAR_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n       \\n                     <span class=\\\"formSpan withSpace\\\">\\n                       <ng-select placeholder=\\\"{{ 'PROFILEEDIT.DURATION_TO' | translate}}\\\" class=\\\"inpField autoWidth withSpace\\\"\\n                         [items]=\\\"toYears\\\" [(ngModel)]=\\\"certificateForm.to_year\\\"></ng-select>\\n                       <div *ngIf=\\\"certificateForm.submit && (certificateForm.to_year==null || certificateForm.to_year=='')\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DEGREE_TO_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.UPLOAD' | translate }} :</label>\\n                     <div class=\\\"fileUpload\\\">\\n                       <label for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">{{'PROFILEEDIT.BROWSE' | translate }}</label>\\n                       <input id=\\\"file-upload\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg, .gif\\\" (change)=\\\"onFileChanged($event)\\\" />\\n                     </div>\\n                     <span class=\\\"uploadPic\\\" *ngIf=\\\"certificatePicture\\\"><img [src]=\\\"certificatePicture\\\" alt=\\\"\\\"></span>\\n       \\n                     <div class=\\\"alert alert-danger\\\" *ngIf=\\\"pictureError.status == 1\\\">{{ pictureError.msg }}</div>\\n                     <div class=\\\"alert alert-danger\\\" *ngIf=\\\"pictureSizeError.status == 1\\\">{{ pictureSizeError.msg }}</div>\\n       \\n                   </div>\\n       \\n                   <div class=\\\"addField\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button type=\\\"button\\\" name=\\\"button\\\" (click)=submitCertificateFrom()>\\n                         <span *ngIf=\\\"loader.certificate.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                         {{ 'PROFILEEDIT.SAVE' | translate}}</button>&nbsp;\\n                       <button type=\\\"button\\\" name=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" (click)=\\\"resetCertificateForm()\\\">{{\\n                         'PROFILEEDIT.RESET' | translate}}</button>\\n                     </div>\\n                   </div>\\n       \\n                   <div class=\\\"formTable\\\">\\n                     <table class=\\\"table table-borderless\\\">\\n                       <thead>\\n                         <tr>\\n                           <th>#</th>\\n                           <th>{{'PROFILEEDIT.CERTIFICATE_NAME' | translate }}</th>\\n                           <th class=\\\"text-center\\\">{{'PROFILEEDIT.DURATION_FROM' | translate }}</th>\\n                           <th class=\\\"text-center\\\">{{'PROFILEEDIT.DURATION_TO' | translate }}</th>\\n                           <th class=\\\"text-center\\\">{{'PROFILEEDIT.ACTION' | translate }}</th>\\n       \\n                         </tr>\\n                       </thead>\\n                       <tbody>\\n                         <tr *ngIf=\\\"loader.certificate.list\\\">\\n                           <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                         </tr>\\n                         <tr *ngFor=\\\"let c of userCertificatelist; let i=index\\\">\\n                           <td>{{(i+1)}}</td>\\n                           <td>{{ c.certificate_name }}</td>\\n                           <td class=\\\"text-center\\\">{{ c.from_year }}</td>\\n                           <td class=\\\"text-center\\\">{{ c.to_year }}</td>\\n       \\n                           <td class=\\\"text-center\\\">\\n                             <a href=\\\"javascript:\\\" (click)=\\\"editCertificate(c)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                             <a href=\\\"javascript:\\\" (click)=\\\"deleteCertificate(c.id)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                           </td>\\n                         </tr>\\n                         <tr *ngIf=\\\"userCertificatelist.length === 0\\\">\\n                           <td colspan=\\\"5\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                         </tr>\\n                       </tbody>\\n                     </table>\\n                   </div>\\n       \\n                 </div>\\n               </div>\\n       \\n               <div class=\\\"buttonGr\\\">\\n                 <div class=\\\"row\\\">\\n                   <div class=\\\"col-6\\\">\\n                     <a class=\\\"btnWhite\\\"  (click)=\\\"goToCvConsult()\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                   </div>\\n                   <div class=\\\"col-6\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'experience')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                           aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                       <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\"  (click)=\\\"setActive(tab,'projects')\\\">{{\\n                           'PROFILEEDIT.NEXT'|translate }} <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button>\\n                     </div>\\n                   </div>\\n                 </div>\\n               </div>\\n       \\n             </ng-template>\\n           </ngb-tab>\\n       \\n           <!-- Projects -->\\n       \\n           <ngb-tab id=\\\"projects\\\">\\n             <ng-template ngbTabTitle><i class=\\\"fa fa-graduation-cap\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.PROJECTS' |\\n               translate }}</ng-template>\\n             <ng-template ngbTabContent>\\n               <div class=\\\"justify-content-center\\\">\\n                 <div class=\\\"profile-edit-form-container\\\">\\n                   <div class=\\\"alert alert-success\\\" *ngIf=\\\"projectSuccessMsg\\\">{{ projectSuccessMsg }}</div>\\n                   <div class=\\\"alert alert-danger\\\" *ngIf=\\\"projectErrorMsg\\\">{{ projectErrorMsg }}</div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{ 'PROFILEEDIT.PROJECT_NAME' | translate }} :</label>\\n                     <span class=\\\"formSpan col-xl-9\\\">\\n                       <input class=\\\"inpField fullWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"projectForm.name\\\" value=\\\"\\\" placeholder=\\\"{{ 'PROFILEEDIT.PROJECT_NAME' | translate }}\\\">\\n                       <div *ngIf=\\\"projectForm.submit && (projectForm.name==null || projectForm.name =='')\\\" class=\\\"alert alert-danger\\\">\\n                         {{ 'PROFILEEDIT.PROJECT_NAME_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap \\\" for=\\\"\\\">{{ 'PROFILEEDIT.PROJECT_COMPANY' | translate }} :</label>\\n                     <span class=\\\"formSpan col-xl-9\\\">\\n                     <ng-select placeholder=\\\"{{ 'PROFILEEDIT.PROJECT_COMPANY' | translate }}\\\"  class=\\\"inpField fullWidth\\\" [items]=\\\"userCompanyList\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" [(ngModel)]=\\\"projectForm.cId\\\"></ng-select>\\n       \\n                     <div *ngIf=\\\"projectForm.submit && (projectForm.cId==null || projectForm.cId =='')\\\" class=\\\"alert alert-danger\\\">\\n                       {{ 'PROFILEEDIT.PROJECT_COMPANY_REQUIRED' | translate }}\\n                     </div>\\n                     </span>\\n                   </div>\\n       \\n                   <div class=\\\"formWrap\\\">\\n                     <label class=\\\"col-xl-3 noGap\\\" for=\\\"\\\">{{'PROFILEEDIT.DURATION' | translate }} :</label>\\n                     <span class=\\\"formSpan withSpace\\\">\\n                       <input class=\\\"inpField autoWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"projectForm.from\\\" value=\\\"\\\" placeholder=\\\"{{ 'PROFILEEDIT.DURATION_FROM' | translate }}\\\" bsDatepicker [bsValue]=\\\"bsValue\\\" [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD' }\\\" [maxDate]=\\\"maxDay\\\" autocomplete=\\\"off\\\" readonly>\\n       \\n                       <div *ngIf=\\\"projectForm.submit && (projectForm.from==null || projectForm.from=='')\\\" class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DURATION_FROM_YEAR_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n       \\n                     <span class=\\\"formSpan withSpace\\\">\\n                       <input class=\\\"inpField autoWidth\\\" type=\\\"text\\\" [(ngModel)]=\\\"projectForm.to\\\" value=\\\"\\\" placeholder=\\\"{{ 'PROFILEEDIT.DURATION_TO' | translate }}\\\" bsDatepicker [bsValue]=\\\"bsValue\\\" [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD' }\\\" [maxDate]=\\\"maxDay\\\" autocomplete=\\\"off\\\" readonly>\\n       \\n       \\n                       <div *ngIf=\\\"projectForm.submit && (projectForm.to==null || projectForm.to=='')\\\" class=\\\"alert alert-danger\\\">\\n                         {{'PROFILEEDIT.DEGREE_TO_REQUIRED' | translate }}\\n                       </div>\\n                     </span>\\n                   </div>\\n                   <div class=\\\"addField\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button type=\\\"button\\\" name=\\\"button\\\" (click)=submitProjectFrom()>\\n                         <span *ngIf=\\\"loader.project.submit\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></span>\\n                         {{ 'PROFILEEDIT.SAVE' | translate}}</button>&nbsp;\\n                       <button type=\\\"button\\\" name=\\\"button\\\" *ngIf=\\\"resetBtnDisplay\\\" (click)=\\\"resetProjectForm()\\\">{{\\n                         'PROFILEEDIT.RESET' | translate}}</button>\\n                     </div>\\n                   </div>\\n       \\n                   <div class=\\\"formTable\\\">\\n                     <table class=\\\"table table-borderless\\\">\\n                       <thead>\\n                         <tr>\\n                           <th>#</th>\\n                           <th>{{'PROFILEEDIT.PROJECT_NAME' | translate }}</th>\\n                           <th>{{'PROFILEEDIT.PROJECT_COMPANY' | translate }}</th>\\n                           <th class=\\\"text-center\\\">{{'PROFILEEDIT.DURATION_FROM' | translate }}</th>\\n                           <th class=\\\"text-center\\\">{{'PROFILEEDIT.DURATION_TO' | translate }}</th>\\n                           <th class=\\\"text-center\\\">{{'PROFILEEDIT.ACTION' | translate }}</th>\\n       \\n                         </tr>\\n                       </thead>\\n                       <tbody>\\n                         <tr *ngIf=\\\"loader.project.list\\\">\\n                           <td colspan=\\\"5\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></td>\\n                         </tr>\\n                         <tr *ngFor=\\\"let project of userProjectlist; let i=index\\\">\\n                           <td>{{(i+1)}}</td>\\n                           <td>{{ project.name }}</td>\\n                           <td>{{ project.company.company_name }}</td>\\n                           <td class=\\\"text-center\\\">{{ project.from_date|date }}</td>\\n                           <td class=\\\"text-center\\\">{{ project.to_date|date }}</td>\\n       \\n                           <td class=\\\"text-center\\\">\\n                             <a href=\\\"javascript:\\\" (click)=\\\"editProject(project)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                             <a href=\\\"javascript:\\\" (click)=\\\"deleteProject(project.id)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                           </td>\\n                         </tr>\\n                         <tr *ngIf=\\\"userProjectlist.length === 0\\\">\\n                           <td colspan=\\\"6\\\">{{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}</td>\\n                         </tr>\\n                       </tbody>\\n                     </table>\\n                   </div>\\n       \\n                 </div>\\n               </div>\\n       \\n               <div class=\\\"buttonGr\\\">\\n                 <div class=\\\"row\\\">\\n                   <div class=\\\"col-6\\\">\\n                     <a class=\\\"btnWhite\\\"  (click)=\\\"goToCvConsult()\\\">{{ 'PROFILEEDIT.HELP_TOCREATE_CV'|translate }}</a>\\n                   </div>\\n                   <div class=\\\"col-6\\\">\\n                     <div class=\\\"text-right\\\">\\n                       <button class=\\\"btnOrange\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"setActive(tab,'certificate')\\\"><i class=\\\"fa fa-arrow-left\\\"\\n                           aria-hidden=\\\"true\\\"></i> {{ 'PROFILEEDIT.BACK'|translate }}</button>\\n                       <!-- <button class=\\\"btnGreen\\\" type=\\\"button\\\" name=\\\"button\\\"  (click)=\\\"setActive(tab,1)\\\">Next <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i></button> -->\\n                     </div>\\n                   </div>\\n                 </div>\\n               </div>\\n       \\n             </ng-template>\\n           </ngb-tab>\\n         </ngb-tabset>\\n       </div> \\n\\n</div>\\n\\n</div>\\n\\n<ng-template #content let-modal>\\n  <h2><span>{{ 'PROFILEEDIT.EDIT_PROFILE_PHOTO' |translate }}</span></h2>\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div>\\n      <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMsg\\\">{{ successMsg }}</div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMsg\\\">{{ errorMsg }}</div>\\n    </div>\\n\\n    <span class=\\\"file-upload-all\\\">\\n      <label class=\\\"custom-file-upload\\\" for=\\\"custom-input\\\">{{ 'COMMON.UPLOAD_PHOTO' | translate }}</label>\\n      <input id=\\\"custom-input\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg, .gif\\\" (change)=\\\"fileChangeListener($event, cropper)\\\">\\n    </span>\\n    <button class=\\\"cropSave\\\" (click)=\\\"savePhoto()\\\">{{ 'PROFILE.SAVE_BUTTON' | translate }}</button>\\n\\n    <div class=\\\"imgCrop\\\">\\n      <div class=\\\"\\\">\\n        <img-cropper #cropper [image]=\\\"data\\\" [settings]=\\\"cropperSettings\\\"></img-cropper>\\n      </div>\\n      <div class=\\\"cropDisp\\\" *ngIf=\\\"data.image\\\">\\n        <img [src]=\\\"data.image\\\" [width]=\\\"cropperSettings.croppedWidth\\\" [height]=\\\"cropperSettings.croppedHeight\\\">\\n      </div>\\n\\n      <!-- <div class=\\\"\\\" *ngIf=\\\"data.image\\\">\\n        <img-cropper [image]=\\\"data\\\" [settings]=\\\"cropperSettings\\\"></img-cropper>\\n      </div>\\n      <div class=\\\"cropDisp\\\" *ngIf=\\\"data.image\\\">\\n        <img  [src]=\\\"data.image\\\" [width]=\\\"cropperSettings.croppedWidth\\\" [height]=\\\"cropperSettings.croppedHeight\\\">\\n      </div> -->\\n      <div class=\\\"clearfix\\\"></div>\\n\\n    </div>\\n  </div>\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZWVkaXQvcHJvZmlsZWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 31-01-2019\n# Module                : ProfileeditComponent                     \n# Object name           : ProfileeditComponent    \n# Functionality         : All profile edit operations\n# Purpose               : constructor, ngOnInit, setActive, open, getDismissReason, openEditPicModal, fileChangeListener, savePhoto, openAlertModal, removeProfilePic, changeTabEvent, getEducationData, getDegreeFields, resetEducationForm, submitEducationFrom, editEducation, deleteEducation, getSkillData, resetSkillForm, submitSkillForm, editSkills, deleteSkills, checkValue, getExperienceData, resetExperienceForm, submitExperienceFrom, editExperience, deleteExperience, onFileChanged, getCertificateData, resetCertificateForm, submitCertificateFrom, editCertificate, deleteCertificate, validURL, personalDetails, updatePersonalFrom, getCityList\n*******************************************************/\n\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { NgbModal, ModalDismissReasons, NgbTabset } from '@ng-bootstrap/ng-bootstrap';\nimport { ImageCropperComponent, CropperSettings } from \"ngx-img-cropper\";\nimport { UsersService } from \"../../services/users.service\";\nimport { CvcardService } from \"../../services/cvcard.service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { CommonService } from '../../services/common.service';\nimport * as global from \"../../globalConfig\";\nimport { DatePipe } from 'ng-date-format';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-profileedit',\n  templateUrl: './profileedit.component.html',\n  styleUrls: ['./profileedit.component.scss'],\n})\nexport class ProfileeditComponent implements OnInit {\n\n\n\n  data: any; // crop image data\n  maxDay: any = new Date(); // \n  cropperSettings: CropperSettings; // settings of cropper\n  successMsg: string = ''; // success message\n  errorMsg: string = ''; // error message\n  profilePic: any = ''; // user profile picture\n  years: Array<any> = []; // from years\n  toYears: Array<any> = []; // to years\n  dates: Array<any> = []; // dates \n  confirmMessage: string = ''; // confirm message\n  resetBtnDisplay: boolean = true; // reset button display status\n  countryCodes: Array<any> = [];\n  // EDUCATION CONFIG //\n  educationForm: any = { // education form\n    \"id\": null,\n    \"degree_id\": null,\n    \"field_id\": null,\n    'from_year': null,\n    'to_year': null,\n    \"error\": 0,\n    \"submit\": false\n  };\n  educationSuccessMsg: string = ''; // education success message\n  educationResponsedata: any = null; // education response data\n  userDegreelist: Array<any> = []; // user degree list\n  degreelist: Array<any> = []; // degree list from db\n  degreeFieldlist: Array<any> = []; // digree field list\n  // EDUCATION CONFIG  END//\n\n  // SKILLS CONFIG //\n  skillForm: any = { // skill form\n    \"id\": null,\n    \"skill_id\": null,\n    \"status\": null,\n    \"error\": 0,\n    \"submit\": false\n  };\n  skillSuccessMsg: string = ''; // skills success message\n  userSkilllist: Array<any> = []; // user skills list\n  skillsList: Array<any> = []; // skill list from db\n  // SKILLS CONFIG  END//\n\n  // EXPERIENCE CONFIG //\n  experienceForm: any = { // experience form\n    \"id\": null,\n    \"company_name\": null,\n    \"position_id\": null,\n    'from_year': null,\n    'is_current': null,\n    \"summery\": null,\n    \"error\": 0,\n    \"submit\": false\n  };\n  experienceSuccessMsg: string = ''; //experience success message\n  experienceErrorMsg: string = ''; // esperience error message\n  experienceResponsedata: any = null; // experience response data\n  userExperiencelist: Array<any> = []; // user experience list\n  positionlist: Array<any> = []; // position list from db\n  // EXPERIENCE CONFIG  END//\n\n  // CERTIFICATE CONFIG //\n  certificateForm: any = { // certificate  form\n    \"id\": null,\n    \"certificate_name\": null,\n    \"summery\": null,\n    'from_year': null,\n    'to_year': null,\n    'picture': null,\n    'file': null,\n    \"error\": 0,\n    \"submit\": false\n  };\n  certificateSuccessMsg: string = ''; // certificate success message\n  certificateResponsedata: any = null; // certificate response data\n  userCertificatelist: Array<any> = []; // user certificate list\n  certificatePicture: any = ''; // certificate picture\n  pictureError = { // picture error\n    status: 0,\n    msg: ''\n  }\n  pictureSizeError = { // picture size error\n    status: 0,\n    msg: ''\n  }\n  // pictureErrorMsg: string = '';\n  // CERTIFICATE CONFIG  END//\n\n  // PERSONAL CONFIG //\n  personalForm: any = { // personal details form\n    \"id\": null,\n    \"first_name\": null,\n    \"last_name\": null,\n    \"family_name\": null,\n    \"profile_pic\":null,\n    \"email\": null,\n    \"website\": null,\n    \"facebook_link\": null,\n    \"deviantart_link\": null,\n    \"behance_link\": null,\n    \"twitter_link\": null,\n    \"dribbble_link\": null,\n    \"pinterest_link\": null,\n    \"mobile_no\": null,\n    \"mobile_code\": null,\n    \"country_id\": null,\n    \"city_id\": null,\n    \"dob_year\": null,\n    \"dob_month\": null,\n    \"dob_date\": null,\n    \"address\": null,\n    \"about_me\": '',\n    \"video_link\": '',\n    \"error\": 0,\n    \"submit\": false\n  };\n  // Project form\n  projectForm: any = {\n    \"id\": null,\n    \"name\": null,\n    \"cId\": null,\n    \"from\": null,\n    \"to\": null,\n    \"error\": 0,\n    \"submit\": false\n  }\n  userProjectlist: Array<any> = []; // user project list\n  userCompanyList: Array<any> = []; // user company list\n  projectSuccessMsg: string = ''; // success message for user project manage\n  projectErrorMsg: string = ''; // error message for user project manage\n  urlErr = { // url errors\n    'facebook': false,\n    'deviantart': false,\n    'behance': false,\n    'twitter': false,\n    'dribbble': false,\n    'pinterest': false,\n    'video_link': 0\n  };\n  personalSuccessMsg: string = ''; // personal success message\n  personalErrorMsg: string = ''; // personal error message\n  personalResponsedata: any = null; // personal response data\n  countryList: Array<any> = []; // country list from db\n  cityList: Array<any> = []; // city list from db\n  monthList: Array<any> = []; // month list\n  dayList: Array<any> = []; // day list\n  // PERSONAL CONFIG  END//\n\n  // Modal popup\n  closeResult: string; // close result\n\n  loader: any = { // loader config\n    'personal': {\n      'list': false,\n      'submit': false\n    },\n    'education': {\n      'list': false,\n      'submit': false\n    },\n    'skills': {\n      'list': false,\n      'submit': false\n    },\n    'experience': {\n      'list': false,\n      'submit': false\n    },\n    'certificate': {\n      'list': false,\n      'submit': false\n    },\n    'project': {\n      'list': false,\n      'submit': false\n    },\n  };\n\n  \n\n  /* Function Name : constructor\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and defin the languages data\n\t* PARAMS : \n\t*/\n  constructor(\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private uService: UsersService,\n    private translate: TranslateService,\n    private cService: CommonService,\n    private cvCardService: CvcardService,\n    private sanitizer: DomSanitizer,\n    private route: Router,\n    private dateFormater: DatePipe) {\n\n\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n    translate.get('PROFILEEDIT.PICTURE_VALIDATION_ERROR').subscribe((tData) => {\n      this.pictureError.msg = tData;\n    });\n    this.data = {};\n    this.cService.profilePic.subscribe((pic) => {\n      if (pic) {\n        this.personalForm.profile_pic = pic;\n        this.profilePic = this.sanitizer.bypassSecurityTrustUrl(pic);\n        this.data.image = this.profilePic;\n      } else {\n        this.personalForm.profile_pic = null;\n        this.profilePic = \"\";\n        this.data.image = \"\";\n      }\n\n    });\n\n    this.cropperSettings = new CropperSettings();\n    this.cropperSettings.noFileInput = true;\n    let currentYear = new Date().getFullYear();\n    for (let y = currentYear; y > currentYear - 100; y--) {\n      this.years.push(y);\n    }\n\n  }\n\n  /* Function Name : ngOnInit\n    * Author : \n    * Created Date : 31-01-2019 \n    * Modified Date : *\n    * Purpose : to get data after html load\n    * PARAMS : \n    */\n  ngOnInit() {\n\n    // this.countryCodes = CountryCodes.Country;\n    // let selectCode = this.countryCodes.find((i) => {\n    //   return i.code == 'SA';\n    // });\n    // this.personalForm.mobile_code = selectCode.dial_code;\n\n  \n    // month list\n    for (let m = 1; m <= 12; m++) {\n      this.monthList.push({\n        id: (m < 10) ? '0' + m : m.toString(),\n        name: (m < 10) ? '0' + m : m.toString(),\n      })\n    }\n    for (let d = 1; d <= 31; d++) {\n      this.dayList.push({\n        id: (d < 10) ? '0' + d : d.toString(),\n        name: (d < 10) ? '0' + d : d.toString(),\n      })\n    }\n\n    this.personalDetails();\n    this.getEducationData();\n    this.getSkillData();\n    this.getExperienceData();\n    this.getCertificateData();\n    this.getProjectDetails();\n\n\n  }\n\n\n\n  reDefineToYear(event: any) {\n    this.toYears = [];\n    this.educationForm.to_year = null;\n    this.experienceForm.to_year = null;\n    this.certificateForm.to_year = null;\n    let currentYear = new Date().getFullYear();\n    for (let y = event; y <= currentYear; y++) {\n      this.toYears.push(y);\n    }\n  }\n\n  /* Function Name : setActive\n    * Author : \n    * Created Date : 31-01-2019 \n    * Modified Date : *\n    * Purpose : to set active tab\n    * PARAMS : tab, activeTab\n    */\n  setActive(tab, activeTab) {\n\n    tab.select(activeTab);\n  }\n  /* Function Name : open\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to set open modal\n\t* PARAMS : content\n\t*/\n  open(content) {\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  /* Function Name : getDismissReason\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to dismiss modal\n\t* PARAMS : reason\n\t*/\n  getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  /* Function Name : openEditPicModal\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to open edit profile picture modal\n\t* PARAMS : content\n\t*/\n  openEditPicModal(content) {\n\n    this.modalService.open(content, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n  }\n  /* Function Name : fileChangeListener\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get file object on image upload\n\t* PARAMS : $event, cropper\n\t*/\n  fileChangeListener($event, cropper) {\n    var image: any = new Image();\n    var file: File = $event.target.files[0];\n    if (file && (file.type == 'image/jpeg' || file.type == 'image/png' || file.type == 'image/gif')) {\n      if (file.size < 250000) {\n\n        var myReader: FileReader = new FileReader();\n        var that = this;\n\n        myReader.onloadend = (loadEvent: any) => {\n\n          image.src = loadEvent.target.result;\n          setTimeout(() => {\n            cropper.setImage(image);\n          }, 10);\n        };\n\n        myReader.readAsDataURL(file);\n      } else {\n        this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_SIZE_ERROR']).subscribe((tData) => {\n          \n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['PROFILEEDIT.PROFILE_PIC_SIZE_ERROR'],\n            icon: 'error'\n          });\n        });\n      }\n    } else {\n      this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_TYPE_ERROR']).subscribe((tData) => {\n          \n        swal({\n          title: tData['COMMON.ERROR'],\n          text: tData['PROFILEEDIT.PROFILE_PIC_TYPE_ERROR'],\n          icon: 'error'\n        });\n      });\n    }\n  }\n  /* Function Name : savePhoto\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to save photo\n\t* PARAMS : \n\t*/\n  savePhoto() {\n    if (this.data.image) {\n\n      this.uService.changeProfilePic({\n        \"pic\": this.data['image']\n      }).subscribe((res: any) => {\n        if (res.statustext === 'success') {\n          localStorage.setItem(\"_propic\", this.data['image']);\n          this.cService.setProfilePic(this.data['image']);\n          this.errorMsg = '';\n          this.successMsg = res.message;\n\n        } else {\n\n          this.successMsg = '';\n          this.errorMsg = res.message;\n\n        }\n      });\n    } else {\n      this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_TYPE_ERROR']).subscribe((tData) => {\n          \n        swal({\n          title: tData['COMMON.ERROR'],\n          text: tData['PROFILEEDIT.PROFILE_PIC_TYPE_ERROR'],\n          icon: 'error'\n        });\n      });\n\n    }\n  }\n  /* Function Name : openAlertModal\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to open alert modal\n\t* PARAMS : alertContent\n\t*/\n  openAlertModal(alertContent: string) {\n    this.modalService.open(document.getElementById(alertContent), { size: 'sm', centered: true, windowClass: 'DefaultModal' });\n  }\n  /* Function Name : removeProfilePic\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to remove profile picture\n\t* PARAMS : \n\t*/\n  removeProfilePic() {\n    this.translate.get(['COMMON.ARE_YOU_SURE','PROFILEEDIT.CONFIRMTODELETEPROFILEPIC']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: tData['COMMON.ARE_YOU_SURE'],\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRMTODELETEPROFILEPIC'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n      }).then((willDelete) => {\n        if (willDelete) {\n          this.uService.removeProfilePic().subscribe((response: any) => {\n            if (response.statustext === 'success') {\n              localStorage.removeItem(\"_propic\");\n              this.profilePic = \"\";\n              this.cService.setProfilePic(\"\");\n            }\n          });\n        }\n      })\n    });\n\n  }\n  /* Function Name : changeTabEvent\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get data on tab change\n\t* PARAMS : e\n\t*/\n  changeTabEvent(e) {\n    let currentYear = new Date().getFullYear();\n    for (let y = currentYear; y > currentYear - 100; y--) {\n      this.years.push(y);\n    }\n    this.toYears = this.years;\n    // switch (e.nextId) {\n    //   case \"personal\":\n    //     this.personalDetails();\n    //     break;\n    //   case \"education\":\n    //     this.getEducationData();\n    //     break;\n    //   case \"skills\":\n    //     this.getSkillData();\n    //     break;\n    //   case \"experience\":\n    //     this.getExperienceData();\n    //     break;\n    //   case \"certificate\":\n    //     this.getCertificateData();\n    //     break;\n    //   case \"projects\":\n    //     this.getProjectDetails();\n    //     break;\n    // }\n  }\n\n  // EDUCATION TAB //\n\n  /* Function Name : getEducationData\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get education data\n\t* PARAMS : \n\t*/\n  getEducationData() {\n    this.loader.education.list = true;\n    this.resetEducationForm();\n    this.uService.getUserDetailsInEditView('education')\n      .subscribe((responseData: any) => {\n        if (responseData.statustext === 'success') {\n          this.educationResponsedata = responseData.data;\n          if (responseData.data.degree) {\n            this.degreelist = responseData.data.degree;\n          }\n          if (responseData.data.user.degree) {\n            this.userDegreelist = responseData.data.user.degree;\n\n          }\n        }\n        this.loader.education.list = false;\n      });\n  }\n  /* Function Name : getDegreeFields\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get degree field data\n\t* PARAMS : \n\t*/\n  getDegreeFields() {\n    let degId = this.educationForm.degree_id;\n    if (this.educationResponsedata.degreeField) {\n      let degreeFileds = this.educationResponsedata.degreeField;\n      this.educationForm.field_id = null;\n      this.degreeFieldlist = [];\n      this.degreeFieldlist = degreeFileds.filter((i) => {\n        return i.degree_id == degId;\n      });\n    }\n  }\n\n  /* Function Name : resetEducationForm\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to reset education form\n\t* PARAMS : \n\t*/\n  resetEducationForm() {\n    this.educationForm = {\n      \"id\": null,\n      \"degree_id\": null,\n      \"field_id\": null,\n      'from_year': null,\n      'to_year': null,\n      'error': 0,\n      'submit': false\n    };\n    this.resetBtnDisplay = true;\n  }\n\n  /* Function Name : submitEducationFrom\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to submit education form\n\t* PARAMS : \n\t*/\n  submitEducationFrom() {\n\n    this.educationForm.submit = true;\n    if (!this.educationForm.degree_id || !this.educationForm.field_id || !this.educationForm.from_year || !this.educationForm.to_year) {\n      this.educationForm.error = 1;\n    } else {\n      var userDegree = this.userDegreelist;\n      if ((this.educationForm.id && userDegree.find((item)=>{ return ((item.id !=  this.educationForm.id)) && (item.degree_id ==  this.educationForm.degree_id) })) ||  (!this.educationForm.id && userDegree.find((item)=>{ return (item.degree_id ==  this.educationForm.degree_id) })))  {\n        \n        this.translate.get(['COMMON.ERROR', 'COMMON.DEGREE_EXIST']).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['COMMON.DEGREE_EXIST'],\n            icon: 'error'\n          });\n          this.educationForm.error = 1;\n        });\n      } else {\n        this.educationForm.error = 0;\n      }\n    }\n    if (this.educationForm.error == 0) {\n      this.loader.education.submit = true;\n\n      if (this.educationForm.id) {\n        this.uService.editEducationData(this.educationForm)\n          .subscribe((response: any) => {\n            global.SCROLL_TO_TOP();\n            if (response.statustext === 'success') {\n              this.translate.get(['COMMON.SUCCESS']).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.SUCCESS'],\n                  text: response.message,\n                  icon: 'success'\n                });\n              });\n              this.getEducationData();\n              this.resetEducationForm();\n             \n            }\n            this.loader.education.submit = false;\n          });\n      } else {\n\n        this.uService.addEducationData(this.educationForm)\n          .subscribe((response: any) => {\n            global.SCROLL_TO_TOP();\n            if (response.statustext === 'success') {\n              this.translate.get(['COMMON.SUCCESS']).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.SUCCESS'],\n                  text: response.message,\n                  icon: 'success'\n                });\n              });\n              this.getEducationData();\n              this.resetEducationForm();\n            }\n            this.loader.education.submit = false;\n          });\n      }\n    }\n  }\n\n  /* Function Name : editEducation\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get education data on edit mode in form\n\t* PARAMS : educationDetails\n\t*/\n  editEducation(educationDetails: any) {\n    this.resetBtnDisplay = false;\n    this.educationForm[\"id\"] = educationDetails.id;\n    this.educationForm[\"degree_id\"] = educationDetails.degree_id;\n    this.getDegreeFields();\n    this.educationForm[\"field_id\"] = educationDetails.degree_field_id;\n    this.educationForm[\"from_year\"] = educationDetails.from_year;\n    this.educationForm[\"to_year\"] = educationDetails.to_year;\n\n  }\n  /* Function Name : deleteEducation\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to delete education details\n\t* PARAMS : degreeId\n\t*/\n  deleteEducation(degreeId) {\n    this.translate.get(['COMMON.ARE_YOU_SURE','PROFILEEDIT.CONFIRM_TO_DELETE_DEGREE']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: tData['COMMON.ARE_YOU_SURE'],\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_DEGREE'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n\t\t\t}).then((willDelete) => {\n        if (willDelete) {\n          this.loader.education.list = true;\n          this.uService.deleteEducationData({ \"user_degree_id\": degreeId })\n            .subscribe((response: any) => {\n              if (response.statustext === 'success') {\n                this.educationSuccessMsg = response.message;\n                this.getEducationData();\n                setTimeout(() => {\n                  this.educationSuccessMsg = '';\n                }, 5000);\n              }\n            })\n        }\n      });      \n    });\n\n\n  }\n  // EDUCATION TAB CLOSE//\n\n  // SKILLS TAB //\n  /* Function Name : getSkillData\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get user skill data\n\t* PARAMS : \n\t*/\n  getSkillData() {\n    this.loader.skills.list = true;\n    this.resetSkillForm();\n    this.uService.getUserDetailsInEditView('skills')\n      .subscribe((responseData: any) => {\n        if (responseData.statustext === 'success') {\n          if (responseData.data.user.skills) {\n            this.userSkilllist = responseData.data.user.skills;\n            this.skillsList = responseData.data.skills;\n          }\n        }\n        this.loader.skills.list = false;\n      });\n  }\n  /* Function Name : resetSkillForm\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to reset skill form\n\t* PARAMS : \n\t*/\n  resetSkillForm() {\n    this.skillForm = {\n      \"id\": null,\n      \"skill_id\": null,\n      \"status\": null,\n      \"error\": 0,\n      \"submit\": false\n    };\n    this.resetBtnDisplay = true;\n  }\n  /* Function Name : submitSkillForm\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to submit skill form\n\t* PARAMS : \n\t*/\n  submitSkillForm() {\n\n    this.skillForm.submit = true;\n    if (!this.skillForm.skill_id || !this.skillForm.status) {\n      this.skillForm.error = 1;\n    } else {\n      var userSkills = this.userSkilllist;\n      if ((this.skillForm.id && userSkills.find((item)=>{ return ((item.id !=  this.skillForm.id)) && (item.skill_id ==  this.skillForm.skill_id) })) ||  (!this.skillForm.id && userSkills.find((item)=>{ return (item.skill_id ==  this.skillForm.skill_id) })))  {\n        \n        this.translate.get(['COMMON.ERROR', 'COMMON.SKILL_EXIST']).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['COMMON.SKILL_EXIST'],\n            icon: 'error'\n          });\n          this.skillForm.error = 1;\n        });\n      } else {\n        this.skillForm.error = 0;\n      }\n      \n    }\n    \n\n    if (this.skillForm.error == 0) {\n      this.loader.skills.submit = true;\n      if (this.skillForm.id) {\n        this.uService.editSkillData(this.skillForm)\n          .subscribe((response: any) => {\n            global.SCROLL_TO_TOP();\n            if (response.statustext === 'success') {\n              this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.SUCCESS'],\n                  text:response.message,\n                  icon: 'success'\n                });\n              });\n              this.getSkillData();\n              this.resetSkillForm();\n            \n            }\n            this.loader.skills.submit = false;\n          });\n      } else {\n\n        this.uService.addSkillData(this.skillForm)\n          .subscribe((response: any) => {\n            global.SCROLL_TO_TOP();\n            if (response.statustext === 'success') {\n              this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.SUCCESS'],\n                  text:response.message,\n                  icon: 'success'\n                });\n              });\n              this.getSkillData();\n              this.resetSkillForm();\n              \n            }\n            this.loader.skills.submit = false;\n          });\n      }\n    }\n\n  }\n  /* Function Name : editSkills\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get skill data on edit mode\n\t* PARAMS :  skillDetails\n\t*/\n  editSkills(skillDetails: any) {\n    this.resetBtnDisplay = false;\n    this.skillForm[\"id\"] = skillDetails.id;\n    this.skillForm[\"skill_id\"] = skillDetails.skill_id;\n    this.skillForm[\"status\"] = skillDetails.status;\n  }\n  /* Function Name : deleteSkills\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to delete skill details\n\t* PARAMS :  skillId\n\t*/\n  deleteSkills(skillId) {\n    this.translate.get(['COMMON.ARE_YOU_SURE','PROFILEEDIT.CONFIRM_TO_DELETE_SKILL']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: tData['COMMON.ARE_YOU_SURE'],\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_SKILL'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n\t\t\t}).then((willDelete) => {\n        if (willDelete) {\n          this.loader.skills.list = true;\n          this.uService.deleteSkillData({ \"user_skill_id\": skillId })\n            .subscribe((response: any) => {\n              if (response.statustext === 'success') {\n                this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                  swal({\n                    title: tData['COMMON.SUCCESS'],\n                    text:response.message,\n                    icon: 'success'\n                  });\n                });\n                this.getSkillData();\n                \n              }\n            })\n        }\n      });\n    });\n  }\n  // SKILLS TAB CLOSE //\n\n  // EXPERIENCE TAB //\n  /* Function Name : checkValue\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to check the value\n\t* PARAMS :  event\n\t*/\n  checkValue(event: any) {\n    this.experienceForm.is_current = (event.target.checked) ? 1 : 0;\n    if (this.experienceForm.is_current === 1) {\n      this.experienceForm.to_year = null;\n    }\n  }\n  /* Function Name : getExperienceData\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to get experience data of a user\n\t* PARAMS :  \n\t*/\n  getExperienceData() {\n    this.loader.experience.list = true;\n    this.resetExperienceForm();\n    this.uService.getUserDetailsInEditView('experience')\n      .subscribe((responseData: any) => {\n        //console.log(responseData.data.user.experience);\n\n        if (responseData.statustext === 'success') {\n          this.experienceResponsedata = responseData.data;\n          if (responseData.data.positionList) {\n            this.positionlist = responseData.data.positionList;\n          }\n          if (responseData.data.user.experience) {\n            this.userExperiencelist = responseData.data.user.experience;\n\n          }\n\n        }\n        this.loader.experience.list = false;\n      });\n  }\n  /* Function Name : resetExperienceForm\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to reset experience form\n\t* PARAMS :  \n\t*/\n  resetExperienceForm() {\n    this.experienceForm = {\n      \"id\": null,\n      \"company_name\": null,\n      \"position_id\": null,\n      'from_year': null,\n      'to_year': null,\n      'is_current': null,\n      'summery': null,\n      \"error\": 0,\n      \"submit\": false\n\n    };\n    this.resetBtnDisplay = true;\n  }\n  /* Function Name : submitExperienceFrom\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to submit experience form\n\t* PARAMS :  \n\t*/\n  submitExperienceFrom() {\n\n    this.experienceForm.submit = true;\n    this.experienceForm.company_name = this.experienceForm.company_name.trim();\n    if (!this.experienceForm.company_name || !this.experienceForm.position_id || !this.experienceForm.from_year) {\n      this.experienceForm.error = 1;\n    } else {\n      let duplicateExperience = this.userExperiencelist.filter((item)=>{\n        return (\n          item.position.id == this.experienceForm.position_id &&\n          item.company_name == this.experienceForm.company_name &&\n          item.from_year == this.experienceForm.from_year &&\n          item.to_year == this.experienceForm.to_year\n        );\n      });\n      if (duplicateExperience && duplicateExperience.length > 0) {\n        this.translate.get(['COMMON.ERROR', 'PROFILEEDIT.DUPLICATE_EXPERIENCE_ERROR' ]).subscribe((tData) => {\n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['PROFILEEDIT.DUPLICATE_EXPERIENCE_ERROR'],\n            icon: 'error'\n          });\n        });\n        this.experienceForm.error = 1;  \n      } else {\n        this.experienceForm.error = 0;\n      }\n    }\n    if (this.experienceForm.error == 0) {\n      this.loader.experience.submit = true;\n      if (this.experienceForm.id) {\n        this.uService.editExperienceData(this.experienceForm)\n          .subscribe((response: any) => {\n            global.SCROLL_TO_TOP();\n            if (response.statustext === 'success') {\n              this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.SUCCESS'],\n                  text:response.message,\n                  icon: 'success'\n                });\n              });\n              this.getExperienceData();\n              this.resetExperienceForm();\n              \n            } else if (response.statustext === 'error') {\n              this.experienceErrorMsg = response.message;\n              this.translate.get(['COMMON.ERROR' ]).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.ERROR'],\n                  text:response.message,\n                  icon: 'error'\n                });\n              });\n            }\n            this.loader.experience.submit = false;\n          });\n      } else {\n        this.uService.addExperienceData(this.experienceForm)\n          .subscribe((response: any) => {\n            global.SCROLL_TO_TOP();\n            if (response.statustext === 'success') {\n              this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.SUCCESS'],\n                  text:response.message,\n                  icon: 'success'\n                });\n              });\n              this.getExperienceData();\n              this.resetExperienceForm();\n              \n            } else if (response.statustext === 'error') {\n              this.translate.get(['COMMON.ERROR' ]).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.ERROR'],\n                  text:response.message,\n                  icon: 'error'\n                });\n              });\n            }\n            this.loader.experience.submit = false;\n          });\n      }\n    }\n  }\n  /* Function Name : editExperience\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to get data in edit mode\n\t* PARAMS :  experienceDetails\n\t*/\n  editExperience(experienceDetails: any) {\n    this.resetBtnDisplay = false;\n    this.experienceForm[\"id\"] = experienceDetails.id;\n    this.experienceForm[\"company_name\"] = experienceDetails.company_name;\n    this.experienceForm[\"position_id\"] = experienceDetails.position_id;\n    this.experienceForm[\"from_year\"] = experienceDetails.from_year;\n    this.experienceForm[\"to_year\"] = experienceDetails.to_year;\n    this.experienceForm[\"is_current\"] = experienceDetails.is_current;\n    this.experienceForm[\"summery\"] = experienceDetails.summery;\n  }\n  /* Function Name : deleteExperience\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to delete experience details\n\t* PARAMS :  experienceId\n\t*/\n  deleteExperience(experienceId) {\n    this.translate.get(['COMMON.ARE_YOU_SURE','PROFILEEDIT.CONFIRM_TO_DELETE_EXPERIENCE']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: tData['COMMON.ARE_YOU_SURE'],\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_EXPERIENCE'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n\t\t\t}).then((willDelete) => {\n        \n        if (willDelete) {\n          this.loader.experience.list = true;\n          this.uService.deleteExperienceData({ \"user_experience_id\": experienceId })\n            .subscribe((response: any) => {\n              if (response.statustext === 'success') {\n                this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                  swal({\n                    title: tData['COMMON.SUCCESS'],\n                    text:response.message,\n                    icon: 'success'\n                  });\n                });\n                this.getExperienceData();\n                \n              }\n            })\n        }\n      });\n    });\n  }\n  // EXPERIENCE TAB CLOSE //\n\n  // CERTIFICATE TAB //\n  /* Function Name : onFileChanged\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to get image data on file browse\n\t* PARAMS :  event\n\t*/\n  onFileChanged(event) {\n    //this.certificateForm.file = event.target.files[0];\n    this.certificatePicture = '';\n    this.certificateForm.picture = '';\n    this.pictureError.status = 0;\n    const uploadImage = (event.target.files[0]) ? event.target.files[0] : '';\n    if (uploadImage && uploadImage.type.indexOf('image/') == -1) {\n      this.pictureError.status = 1;\n      return false;\n    } else {\n      this.pictureError.status = 0;\n    }\n    if (uploadImage && uploadImage.size > 500000) {\n\n      this.pictureSizeError.status = 1;\n      this.translate.get('PROFILEEDIT.CERTIFICATE_PIC_SIZE_ERROR').subscribe((tData) => {\n        this.pictureSizeError.msg = tData;\n      });\n      return false;\n    } else {\n      this.pictureSizeError.status = 0;\n    }\n\n    var reader = new FileReader();\n    reader.readAsDataURL(uploadImage);\n    reader.onload = () => {\n      this.certificatePicture = reader.result;\n      this.certificateForm.picture = reader.result;\n    };\n    // console.log(this.certificateForm.file);\n  }\n  /* Function Name : getCertificateData\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to get certificate data\n\t* PARAMS :  \n\t*/\n  getCertificateData() {\n    this.loader.certificate.list = true;\n    this.resetCertificateForm();\n    this.uService.getUserDetailsInEditView('certificate')\n      .subscribe((responseData: any) => {\n        if (responseData.statustext === 'success') {\n          this.certificateResponsedata = responseData.data;\n\n          if (responseData.data.user.certificates) {\n            this.userCertificatelist = responseData.data.user.certificates;\n          }\n\n        }\n        this.loader.certificate.list = false;\n      });\n  }\n  /* Function Name : resetCertificateForm\n\t* Author : \n\t* Created Date : 31-01-2019\n\t* Modified Date : *\n\t* Purpose : to reset certificate form\n\t* PARAMS :  \n\t*/\n  resetCertificateForm() {\n    this.certificateForm = {\n      \"id\": null,\n      \"certificate_name\": null,\n      \"summery\": null,\n      'from_year': null,\n      'to_year': null,\n      'picture': null,\n      'error': 0,\n      'submit': false\n    };\n    this.certificatePicture = '';\n    this.certificateForm.submit = false;\n    this.resetBtnDisplay = true;\n    this.pictureError.status = 0;\n    this.pictureSizeError.status = 0;\n  }\n  /* Function Name : submitCertificateFrom\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to submit certificate form\n\t* PARAMS :  \n\t*/\n  submitCertificateFrom() {\n\n    this.certificateForm.submit = true;\n    this.certificateForm.certificate_name = this.certificateForm.certificate_name.trim();\n    if (!this.certificateForm.certificate_name || !this.certificateForm.from_year || !this.certificateForm.to_year) {\n      this.certificateForm.error = 1;\n    } else {\n      this.certificateForm.error = 0;\n    }\n    if (this.certificateForm.error == 0) {\n      this.loader.certificate.submit = true;\n      if (this.certificateForm.id) {\n        this.uService.editCertificateData(this.certificateForm)\n          .subscribe((response: any) => {\n            global.SCROLL_TO_TOP();\n            if (response.statustext === 'success') {\n              this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.SUCCESS'],\n                  text:response.message,\n                  icon: 'success'\n                });\n              });\n              this.getCertificateData();\n              this.resetCertificateForm();\n            \n            }\n            this.loader.certificate.submit = false;\n          });\n      } else {\n        this.uService.addCertificateData(this.certificateForm)\n          .subscribe((response: any) => {\n            global.SCROLL_TO_TOP();\n            if (response.statustext === 'success') {\n              this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                swal({\n                  title: tData['COMMON.SUCCESS'],\n                  text:response.message,\n                  icon: 'success'\n                });\n              });\n              this.getCertificateData();\n              this.resetCertificateForm();\n              \n            }\n            this.loader.certificate.submit = false;\n          });\n      }\n    }\n  }\n  /* Function Name : editCertificate\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get data on edit mode \n\t* PARAMS :  certificateDetails\n\t*/\n  editCertificate(certificateDetails: any) {\n    this.resetBtnDisplay = false;\n    this.certificateForm[\"id\"] = certificateDetails.id;\n    this.certificateForm[\"certificate_name\"] = certificateDetails.certificate_name;\n    this.certificateForm[\"summery\"] = certificateDetails.summery;\n    this.certificateForm[\"from_year\"] = certificateDetails.from_year;\n    this.certificateForm[\"to_year\"] = certificateDetails.to_year;\n    if (certificateDetails.picture) {\n      this.certificatePicture = global.s3URL + \"certificates/\" + certificateDetails.picture;\n    } else {\n      this.certificatePicture = '';\n    }\n  }\n  /* Function Name : deleteCertificate\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to delete certificate data\n\t* PARAMS :  certificateId\n\t*/\n  deleteCertificate(certificateId) {\n    this.translate.get(['COMMON.ARE_YOU_SURE','PROFILEEDIT.CONFIRM_TO_DELETE_CERTIFICATE']).subscribe((tData) => {\n      swal({\n\t\t\t\ttitle: tData['COMMON.ARE_YOU_SURE'],\n\t\t\t\ttext: tData['PROFILEEDIT.CONFIRM_TO_DELETE_CERTIFICATE'],\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n\t\t\t}).then((willDelete) => {\n        if (willDelete) {\n          this.loader.certificate.list = true;\n          this.uService.deleteCertificateData({ \"user_certificate_id\": certificateId })\n            .subscribe((response: any) => {\n              if (response.statustext === 'success') {\n                this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                  swal({\n                    title: tData['COMMON.SUCCESS'],\n                    text:response.message,\n                    icon: 'success'\n                  });\n                });\n                this.getCertificateData();\n                \n              }\n            })\n        }\n      });\n    });\n  }\n  // CERTIFICATE TAB CLOSE //\n  /* Function Name : validURL\n* Author : \n* Created Date : 31-01-2019 \n* Modified Date : *\n* Purpose : to check the valid url\n* PARAMS :  myURL\n*/\n\n  // PERSONAL TAB //\n  validURL(myURL) {\n    var pattern = new RegExp(/(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/);\n    return pattern.test(myURL);\n  }\n  /* Function Name : personalDetails\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get personal details\n\t* PARAMS :  \n\t*/\n  personalDetails() {\n    this.loader.personal.list = true;\n    this.personalForm.error = 0;\n    this.personalForm.submit = false;\n    this.personalSuccessMsg = '';\n    this.personalErrorMsg = '';\n    this.uService.getUserDetailsInEditView('personal')\n      .subscribe((responseData: any) => {\n\n        if (responseData.statustext === 'success') {\n          if (responseData.data.country) {\n            this.countryList = responseData.data.country;\n          }\n          if (responseData.data.country_ph_list) {\n            this.countryCodes = responseData.data.country_ph_list;\n          }\n          \n          if (responseData.data.user) {\n\n            if (new Date(responseData.data.user.dob)) {\n              this.personalForm.dob_year = this.dateFormater.transform(responseData.data.user.dob, 'yyyy');\n              this.personalForm.dob_month = this.dateFormater.transform(responseData.data.user.dob, 'MM');\n              this.personalForm.dob_date = this.dateFormater.transform(responseData.data.user.dob, 'dd');\n            }\n\n           \n\n            this.personalForm.first_name = responseData.data.user.first_name;\n            this.personalForm.last_name = responseData.data.user.last_name;\n            this.personalForm.family_name = responseData.data.user.family_name;\n            this.personalForm.email = responseData.data.user.email;\n            this.personalForm.website = responseData.data.user.website;\n            this.personalForm.mobile_no = responseData.data.user.mobile_no;\n            this.personalForm.mobile_code = responseData.data.user.mobile_code;\n            this.personalForm.facebook_link = responseData.data.user.facebook_link;\n            this.personalForm.behance_link = responseData.data.user.behance_link;\n            this.personalForm.deviantart_link = responseData.data.user.deviantart_link;\n            this.personalForm.twitter_link = responseData.data.user.twitter_link;\n            this.personalForm.dribbble_link = responseData.data.user.dribbble_link;\n            this.personalForm.pinterest_link = responseData.data.user.pinterest_link;\n            this.personalForm.country_id = responseData.data.user.country_id;\n            this.personalForm.address = responseData.data.user.address;\n            this.personalForm.about_me = responseData.data.user.about_me;\n            this.personalForm.video_link = responseData.data.user.video_link;\n            this.getCityList();\n            this.personalForm.city_id = responseData.data.user.city_id;\n          }\n        }\n        this.loader.personal.list = false;\n      });\n  }\n  /* Function Name : updatePersonalFrom\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to update personal info\n\t* PARAMS :  \n\t*/\n  updatePersonalFrom() {\n\n    this.personalForm.submit = true;\n    let formPostData = this.personalForm;\n    this.urlErr = {\n      'facebook': false,\n      'deviantart': false,\n      'behance': false,\n      'twitter': false,\n      'dribbble': false,\n      'pinterest': false,\n      'video_link': 0\n    };\n    this.personalForm.first_name = this.personalForm.first_name.trim();\n    this.personalForm.last_name = this.personalForm.last_name.trim();\n    this.personalForm.email = this.personalForm.email.trim();\n    this.personalForm.mobile_no = this.personalForm.mobile_no.toString().trim();\n    if (\n      !this.personalForm.first_name ||\n      !this.personalForm.last_name ||\n      !this.personalForm.email ||\n      !this.personalForm.mobile_no ||\n      this.personalForm.mobile_no.length != 10 ||\n      !this.personalForm.country_id ||\n      this.personalForm.country_id == '' ||\n      !this.personalForm.city_id ||\n      this.personalForm.city_id == ''\n    ) {\n      this.personalForm.error = 1;\n    } else {\n      this.personalForm.error = 0;\n    }\n    if (this.personalForm.video_link && (this.validURL(this.personalForm.video_link) == false)) {\n      this.urlErr.video_link = 1;\n      this.personalForm.error = 1;\n    } else if (this.personalForm.video_link && this.personalForm.video_link.indexOf(\"youtube.com\") == -1 && this.personalForm.video_link.indexOf(\"youtu.be\") == -1) {\n      this.urlErr.video_link = 2;\n      this.personalForm.error = 1;\n    }\n    if (this.personalForm.facebook_link && (this.validURL(this.personalForm.facebook_link) == false)) {\n      this.urlErr.facebook = true;\n      this.personalForm.error = 1;\n    }\n    if (this.personalForm.behance_link && (this.validURL(this.personalForm.behance_link) == false)) {\n      this.urlErr.behance = true;\n      this.personalForm.error = 1;\n    }\n    if (this.personalForm.deviantart_link && (this.validURL(this.personalForm.deviantart_link) == false)) {\n      this.urlErr.deviantart = true;\n      this.personalForm.error = 1;\n    }\n    if (this.personalForm.twitter_link && (this.validURL(this.personalForm.twitter_link) == false)) {\n      this.urlErr.twitter = true;\n      this.personalForm.error = 1;\n    }\n    if (this.personalForm.dribbble_link && (this.validURL(this.personalForm.dribbble_link) == false)) {\n      this.personalForm.error = 1;\n      this.urlErr.dribbble = true;\n    }\n    if (this.personalForm.pinterest_link && (this.validURL(this.personalForm.pinterest_link) == false)) {\n      this.personalForm.error = 1;\n      this.urlErr.pinterest = true;\n    }\n    \n    if (this.personalForm.error == 0) {\n      this.loader.personal.submit = true;\n      this.uService.updatePersonalData(formPostData)\n        .subscribe((responseData: any) => {\n          global.SCROLL_TO_TOP();\n          if (responseData.statustext === 'success') {\n\n            this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n              swal({\n                title: tData['COMMON.SUCCESS'],\n                text:responseData.message,\n                icon: 'success'\n              });\n            });\n            let updatedProfileName = this.personalForm.first_name + ' ' + this.personalForm.last_name;\n           \n            this.cService.setProfileName(updatedProfileName);\n           \n          } else if (responseData.statustext === 'error') {\n            this.translate.get(['COMMON.ERROR' ]).subscribe((tData) => {\n              swal({\n                title: tData['COMMON.ERROR'],\n                text:responseData.message,\n                icon: 'error'\n              });\n            });\n          }\n          this.loader.personal.submit = false;\n        });\n    } else {\n      global.SCROLL_TO_TOP();\n    }\n  }\n  /* Function Name : getCityList\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get city list\n\t* PARAMS :  \n\t*/\n  getCityList() {\n    this.cityList = [];\n    this.personalForm.city_id = null;\n    let countryId = this.personalForm.country_id;\n    this.cService.getCityList(countryId)\n      .subscribe((responseData: any) => {\n        if (responseData.statustext === 'success') {\n          this.cityList = responseData.data;\n        }\n      })\n  }\n  // PERSONAL TAB CLOSE //\n\n\n  /* Function Name : getProjectDetails\n\t* Author : \n\t* Created Date : 14-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get user project details\n\t* PARAMS :  \n  */\n\n  getProjectDetails() {\n    this.loader.project.list = true;\n    this.resetProjectForm();\n    this.uService.getUserDetailsInEditView('project')\n      .subscribe((responseData: any) => {\n        if (responseData.statustext === 'success') {\n          // this.certificateResponsedata = responseData.data;\n          if (responseData.data.company) {\n            this.userCompanyList = responseData.data.company;\n          }\n          if (responseData.data.user.projects) {\n            this.userProjectlist = responseData.data.user.projects;\n          }\n\n        }\n        this.loader.project.list = false;\n      });\n  }\n\n  /* Function Name : resetProjectForm\n\t* Author : \n\t* Created Date : 14-03-2019 \n\t* Modified Date : *\n\t* Purpose : to reset project form\n\t* PARAMS :  \n  */\n  resetProjectForm() {\n    this.projectForm = {\n      id: null,\n      name: null,\n      cId: null,\n      from: null,\n      to: null,\n      error: 0,\n      submit: false\n    }\n  }\n\n  /* Function Name : submitProjectFrom\n\t* Author : \n\t* Created Date : 14-03-2019 \n\t* Modified Date : *\n\t* Purpose : to submit project form\n\t* PARAMS :  \n  */\n  submitProjectFrom() {\n    this.projectForm.submit = true;\n    this.projectForm.error = 0;\n\n    if (!this.projectForm.name || !this.projectForm.cId || !this.projectForm.from || !this.projectForm.to) {\n      this.projectForm.error = 1;\n    }\n    if (this.projectForm.error == 0) {\n      this.loader.project.submit = true;\n      this.projectForm.cId = btoa(this.projectForm.cId);\n      this.projectForm.from = new Date(this.projectForm.from).getTime();\n      this.projectForm.to = new Date(this.projectForm.to).getTime();\n      let action = null;\n      if (this.projectForm.id) {\n        action = this.uService.editProject(this.projectForm);\n      } else {\n        action = this.uService.addProject(this.projectForm);\n      }\n      action\n        .subscribe((responseData: any) => {\n          if (responseData.statustext == 'success') {\n            this.getProjectDetails();\n            this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n              swal({\n                title: tData['COMMON.SUCCESS'],\n                text:responseData.message,\n                icon: 'success'\n              });\n            });\n          } else {\n            this.translate.get(['COMMON.ERROR' ]).subscribe((tData) => {\n              swal({\n                title: tData['COMMON.ERROR'],\n                text:responseData.message,\n                icon: 'error'\n              });\n            });\n          }\n          this.loader.project.submit = false;\n         \n        });\n\n    }\n  }\n  /* Function Name : editProject\n\t* Author : \n\t* Created Date : 14-03-2019 \n\t* Modified Date : *\n\t* Purpose : to get  project form data on edit mode\n\t* PARAMS :  project\n  */\n  editProject(project) {\n    this.projectForm = {\n      id: btoa(project.id),\n      name: project.name,\n      cId: project.company_id,\n      from: new Date(project.from_date),\n      to: new Date(project.to_date),\n      error: 0,\n      submit: false\n    }\n  }\n  /* Function Name : deleteProject\n\t* Author : \n\t* Created Date : 14-03-2019 \n\t* Modified Date : *\n\t* Purpose : to delete a project\n\t* PARAMS :  projectId\n  */\n  deleteProject(projectId) {\n    if (projectId) {\n      this.translate.get(['COMMON.ARE_YOU_SURE','PROFILEEDIT.CONFIRM_TO_DELETE_PROJECT']).subscribe((tData) => {\n        swal({\n          title: tData['COMMON.ARE_YOU_SURE'],\n          text: tData['PROFILEEDIT.CONFIRM_TO_DELETE_PROJECT'],\n          icon: \"warning\",\n          buttons: {\n            cancel: true,\n            confirm: true,\n          },\n        }).then((willDelete) => {\n\n          if (willDelete) {\n            this.uService.deleteProject({ \"id\": btoa(projectId) })\n              .subscribe((responseData: any) => {\n                if (responseData.statustext == 'success') {\n                  this.getProjectDetails();\n                  this.translate.get(['COMMON.SUCCESS' ]).subscribe((tData) => {\n                    swal({\n                      title: tData['COMMON.SUCCESS'],\n                      text:responseData.message,\n                      icon: 'success'\n                    });\n                  });\n                } else {\n                  this.translate.get(['COMMON.ERROR' ]).subscribe((tData) => {\n                    swal({\n                      title: tData['COMMON.ERROR'],\n                      text:responseData.message,\n                      icon: 'error'\n                    });\n                  });\n                }\n                this.loader.project.submit = false;\n                \n              });\n          }\n        });\n      });\n\n    }\n  }\n\n  \n  /* Function Name : saveDefaultCard\n\t* Author : \n\t* Created Date : 30-07-2019 \n\t* Modified Date : *\n\t* Purpose : to save default card of a user\n\t* PARAMS :  \n  */\n  saveDefaultCard() {\n    this.cvCardService.saveDefaultCard()\n    .subscribe((responseData)=>{})\n  }\n\n  /* Function Name : checkUserAllInfoForDefaultCvBild\n* Author : \n* Created Date : 23-07-2019 \n* Modified Date : *\n* Purpose : to check user info to build default cv\n* PARAMS :  \n*/\n  checkUserAllInfoForDefaultCvBild() {\n   \n    if (\n      this.profilePic &&\n      this.personalForm.about_me &&\n      this.personalForm.first_name &&\n      this.personalForm.last_name &&\n      this.personalForm.mobile_no &&\n      this.personalForm.address &&\n      this.personalForm.email &&\n\n      this.personalForm.facebook_link &&\n      this.personalForm.twitter_link &&\n      this.personalForm.behance_link &&\n\n      this.userDegreelist.length > 0 &&\n      this.userExperiencelist.length > 0 &&\n      this.userProjectlist.length > 0 &&\n      this.userSkilllist.length > 0\n      ) {\n        let personalData = this.personalForm;\n        personalData['city_name'] = this.cityList.find((item)=>{\n          return item.id = this.personalForm.city_id;\n        }).name;\n        personalData['country_name'] = this.countryList.find((item)=>{\n          return item.id = this.personalForm.country_id;\n        }).name;\n        personalData['website'] = (this.personalForm.website)?this.personalForm.website:'';\n        let cvInfo = {\n          \"personal\" : personalData,\n          \"profilePic\": this.personalForm.profile_pic,\n          \"educations\": this.userDegreelist.map((item)=>{\n            return {\n               \"id\": item.id,\n               \"degree_id\": item.degree_id,\n               \"field_id\":item.degree_field_id,\n               \"from_year\": item.from_year,\n               \"to_year\": item.to_year,\n               \"degree_name\": item.degreeDetails.details[0].name,\n               \"degree_field_name\": item.degreeFieldDetails.details[0].name,\n               \"university_name\": (item.university)?item.university.details[0].name:''\n            };\n          }),\n          \"skills\": this.userSkilllist.map((item)=>{\n            return {\n               \"id\": item.id,\n               \"skill_id\": item.skill_id,\n               \"status\":item.status,\n               \"skill_name\": item.details[0].name,\n               \n            };\n          }),\n          \"experiences\": this.userExperiencelist.map((item)=>{\n            return {\n                \"id\": item.id,\n                \"company_name\": (item.company_name)? item.company_name : ((item.company)?item.company.details[0].name:''),\n                \"position_id\": item.position_id,\n                \"from_year\": item.from_year,\n                \"to_year\": item.to_year,\n                \"is_current\": item.is_current,\n                \"summery\": item.summery,\n                \"position_name\": item.position.details[0].name\n               \n            };\n          }),\n          \"certificates\": this.userCertificatelist.map((item)=>{\n            return {\n              \"id\": item.id,\n              \"certificate_name\": item.certificate_name,\n              \"summery\": item.summery,\n              \"from_year\": item.from_year,\n              \"to_year\": item.to_year,\n              \"picture\": item.picture\n               \n            };\n          }),\n          \"projects\": this.userProjectlist.map((item)=>{\n            return {\n                \"id\": item.id,\n                \"name\": item.name,\n                \"cId\": item.company_id,\n                \"from\": new Date(item.from_date).getTime(),\n                \"to\": new Date(item.to_date).getTime(),\n                \"company_name\": item.company.company_name\n            };\n          }),\n        };\n        // return false;\n        // let cvContent = localStorage.getItem('_cvinfo');\n\n        let postData = {\n          \"cvType\": 0,\n          \"cvData\": JSON.stringify(cvInfo),\n          \"name\": 'Careery CV',\n          \"comment\": null,\n          \"templateId\": 13,\n          \"templatePrice\": 0,\n          \"paymentStatus\": 1,\n          \"is_system\":1\n        };\n        this.cvCardService.sendCVGenerateRequest(postData)\n        .subscribe((responseData:any)=>{\n          if (responseData.statustext == 'success'  ) {\n            console.log(responseData.message);\n          }\n        });\n      }\n  }\n}\n","module.exports = \"<!-- Profile starts here -->\\n\\n<div class=\\\"profileMain\\\">\\n  <!-- <app-pagination [config]=\\\"paginationConfig\\\" (pager)=\\\"clickPager($event)\\\"></app-pagination> -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-3 col-lg-6 col-md-6\\\">\\n      <div class=\\\"profileDesc\\\">\\n        <div class=\\\"profileMainBox\\\">\\n          <div class=\\\"profileDescImg\\\" (click)=\\\"openEditPicModal(content)\\\">\\n            <img *ngIf=\\\"profilePic\\\" [src]=\\\"profilePic\\\" alt=\\\"\\\">\\n            <img  *ngIf=\\\"userData && !profilePic\\\" src=\\\"assets/images/charachter/{{ gender+'_'+userData.experience_level }}.png\\\" alt=\\\"\\\">\\n          </div>\\n          <h2>{{firstName | titlecase}} {{lastName | titlecase}}</h2>\\n          <h3 *ngIf=\\\"position\\\">{{ position }}</h3>\\n          <h3>{{ 'PROFILE.CPP' |translate }} : {{cpp}}</h3>\\n\\n          <div class=\\\"profileAward\\\">\\n             <span ><a  (click)=\\\"gotToCV()\\\" href=\\\"javascript:void(0)\\\"  ><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i> {{\\\"CV.PREVIEW_CV\\\"| translate}}</a></span>\\n              <span *ngIf=\\\"profile_video_link\\\" (click)=\\\"openVideoModal()\\\"><i class=\\\"fa fa-forward\\\" aria-hidden=\\\"true\\\"></i> {{\\\"COMMON.MY_VIDEO\\\"| translate}}</span>\\n\\n          </div>\\n          <div class=\\\"socialProfile\\\">\\n            <ul ngbDropdown>\\n              <li><a [routerLink]=\\\"['/profile/edit']\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"copyLink()\\\"><i class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></i></a></li>\\n              <li>\\n                <a *ngIf=\\\"dribbble_link\\\" href=\\\"{{ dribbble_link }}\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-dribbble\\\" aria-hidden=\\\"true\\\"></i></a>\\n                <a *ngIf=\\\"!dribbble_link\\\" [routerLink]=\\\"['/profile']\\\"><i class=\\\"fa fa-dribbble\\\" aria-hidden=\\\"true\\\"></i></a>\\n              </li>\\n              <li>\\n                <a *ngIf=\\\"behance_link\\\" href=\\\"{{behance_link}}\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-behance\\\" aria-hidden=\\\"true\\\"></i></a>\\n                <a *ngIf=\\\"!behance_link\\\" [routerLink]=\\\"['/profile']\\\"><i class=\\\"fa fa-behance\\\" aria-hidden=\\\"true\\\"></i></a>\\n              </li>\\n              <li>\\n                <a *ngIf=\\\"facebook_link\\\" href=\\\"{{facebook_link}}\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-facebook\\\" aria-hidden=\\\"true\\\"></i></a>\\n                <a *ngIf=\\\"!facebook_link\\\" [routerLink]=\\\"['/profile']\\\"><i class=\\\"fa fa-facebook\\\" aria-hidden=\\\"true\\\"></i></a>\\n              </li>\\n              <li>\\n                <a *ngIf=\\\"twitter_link\\\" href=\\\"{{twitter_link}}\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i></a>\\n                <a *ngIf=\\\"!twitter_link\\\" [routerLink]=\\\"['/profile']\\\"><i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i></a>\\n              </li>\\n              <li id=\\\"dropdownBasic2\\\" ngbDropdownToggle><a><i class=\\\"fa fa-share-alt\\\" aria-hidden=\\\"true\\\"></i></a></li>\\n              <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic2\\\">\\n                <ul>\\n                  <li>\\n                    <share-button button=\\\"facebook\\\" ></share-button> <span>Facebook</span>\\n                  </li>\\n                  <li>\\n                    <share-button button=\\\"twitter\\\"></share-button> <span>Twitter</span>\\n                  </li>\\n                  <li>\\n                    <share-button button=\\\"whatsapp\\\"></share-button> <span>WhatsApp</span>\\n                  </li>\\n                  <li>\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"copyLink()\\\"><i class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></i></a> <span>{{ 'PROFILE.COPY_LINK' | translate }}</span>\\n                  </li>\\n                </ul>\\n              </div>\\n\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"managerLink\\\">\\n        <div class=\\\"profileMainBox\\\">\\n          <h2 class=\\\"rowDiv\\\">\\n              <span class=\\\"manager-text\\\">{{ 'PROFILE.CAREERY_MANAGER' |translate }}</span>\\n            <span (click)=\\\"openCareeryManagerModal()\\\" class=\\\"icon\\\"></span>\\n          </h2>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"profileCarousal\\\" style=\\\"position:relative\\\">\\n        <div class=\\\"loader-container card\\\" *ngIf=\\\"loader.card_remove\\\">\\n          <div class=\\\"loader-content\\\">\\n            <i class=\\\"fa fa-cog fa-spin\\\"></i><br />\\n            {{ 'CARD.PLEASE_WAIT_REMOVE_CARD' | translate }}\\n          </div>\\n        </div>\\n        <div class=\\\"profileMainBox\\\">\\n          <div class=\\\"text-center\\\" *ngIf=\\\"loader.card\\\">\\n            <i class=\\\"fa fa-cog fa-spin\\\"></i><br />\\n            <p>{{ 'CARD.PLEASE_WAIT' | translate }}</p>\\n          </div>\\n          <div >\\n\\n            <owl-carousel #cardOwl [options]=\\\"mySlideOptions\\\" [carouselClasses]=\\\"['owl-theme', 'sliding']\\\">\\n              <div class=\\\"item\\\" *ngIf=\\\"userCardList.length == 0\\\">\\n                  <div class=\\\"iconDown\\\">\\n                      <a href=\\\"javascript:void(0)\\\"  (click)=\\\"downloadDefaultCardFile()\\\"> <i class=\\\"fa fa-download\\\"\\n                          aria-hidden=\\\"true\\\"></i></a>\\n                      \\n                    </div>\\n                  <section class=\\\"sheet\\\">\\n                      <div class=\\\"card-left\\\">\\n                        <div class=\\\"card-profile\\\">\\n                            <img *ngIf=\\\"profilePic\\\" [src]=\\\"profilePic\\\" alt=\\\"\\\">\\n                            <img  *ngIf=\\\"userData && !profilePic\\\" src=\\\"assets/images/charachter/{{ userData.gender+'_'+userData.experience_level }}.png\\\" alt=\\\"\\\">\\n                        </div>\\n                        <div class=\\\"card-profile-txt\\\">\\n                          <h2>{{firstName | titlecase}} {{lastName | titlecase}}</h2>\\n                          <h5>{{ position }}</h5>\\n                        </div>\\n                        <ul class=\\\"card-social\\\">\\n                          <li><span class=\\\"hh\\\"><img src=\\\"assets/images/card_assets/images/phone.svg\\\" alt=\\\"\\\"></span> {{mobile_code+'-'+mobile_no}}\\\"</li>\\n                          <li><span class=\\\"hh\\\"><img src=\\\"assets/images/card_assets/images/location.svg\\\" alt=\\\"\\\"></span> {{ ((address)?(address+ ', '):'')  + city+', ' + country }}</li>\\n                          <li class=\\\"mail-icon\\\"><span class=\\\"hh\\\"><img src=\\\"assets/images/card_assets/images/email.svg\\\" alt=\\\"\\\"></span> {{ email }}</li>\\n                        </ul>\\n                      </div>\\n                    \\n                      <div class=\\\"card-right\\\">\\n                        <div class=\\\"card-right-img\\\"><img src=\\\"assets/images/card_assets/images/card-logo.svg\\\" alt=\\\"\\\"></div>\\n                        <div class=\\\"card-right-cont\\\">\\n                          <div class=\\\"code-img\\\"><qrcode #cardQrCode [qrdata]=\\\"qrCodeUrl+'/'+cpp\\\" [size]=\\\"50\\\" [level]=\\\"'M'\\\" ></qrcode></div>\\n                          <h5>CPP : {{ cpp }}</h5>\\n                          <div class=\\\"gntby\\\">\\n                            <ul>\\n                              <li>Generated by</li>\\n                              <li><img src=\\\"assets/images/card_assets/images/foot-logo.png\\\" alt=\\\"\\\"></li>\\n                            </ul>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </section>\\n              </div>\\n              <div class=\\\"item\\\" *ngFor=\\\"let card of userCardList\\\">\\n                <div class=\\\"iconDown\\\">\\n                  <a href=\\\"{{ card.file | picturepath:'card' }}\\\" target=\\\"_blank\\\"> <i class=\\\"fa fa-download\\\"\\n                      aria-hidden=\\\"true\\\"></i></a>\\n                  &nbsp;&nbsp;\\n                  <a class=\\\"anchor-common\\\" (click)=\\\"removeOwnCard(card)\\\"> <i class=\\\"fa fa-trash\\\"></i> </a>\\n                </div>\\n                <div *ngIf=\\\"card.details\\\">\\n                  <div class=\\\"profileSingle\\\">\\n                    <div class=\\\"profileDescImg\\\"><img *ngIf=\\\"card.details.photo\\\" [src]=\\\"card.details.photo\\\" alt=\\\"\\\"></div>\\n                    <h2>{{ card.details.name  }}</h2>\\n                    <h3>{{ card.details.position }}</h3>\\n                  </div>\\n                  <div class=\\\"proLocation\\\">\\n                    <p><span><i class=\\\"fa fa-mobile\\\" aria-hidden=\\\"true\\\"></i></span> {{ card.details.mobile }}</p>\\n                    <p><span><i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i></span>\\n                      {{ card.details.city_name+', '+card.details.country_name }}</p>\\n                    <div class=\\\"qrCode\\\"><qrcode #cardQrCode [qrdata]=\\\"qrCodeUrl+'/'+cpp\\\" [size]=\\\"50\\\" [level]=\\\"'M'\\\" ></qrcode></div>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"!card.details && card.file\\\">\\n                  <img [src]=\\\"card.file| picturepath:'card'\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"item\\\" >\\n                  <!-- <div class=\\\"iconDown\\\">\\n                    <a href=\\\"javascript:void(0)\\\"  (click)=\\\"downloadDefaultCardFile()\\\"> <i class=\\\"fa fa-download\\\"\\n                        aria-hidden=\\\"true\\\"></i></a>\\n                    \\n                  </div> -->\\n                  <img src=\\\"assets/images/card-back.png\\\" />\\n              </div>\\n            </owl-carousel>\\n          </div>\\n         \\n        </div>\\n      </div>\\n\\n      <div class=\\\"cvReview\\\">\\n        <div class=\\\"profileMainBox\\\">\\n          <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col-md-6 withRightBdr\\\">\\n              <!-- <div class=\\\"progressWrap\\\">\\n                <circle-progress [percent]=\\\"points\\\" [titleFontSize]=\\\"40\\\" [showSubtitle]=\\\"false\\\" [showUnits]=\\\"false\\\" [outerStrokeColor]=\\\"'#707070'\\\" [innerStrokeColor]=\\\"'#D4D4D4'\\\" [radius]=\\\"100\\\" [backgroundPadding]=\\\"7\\\" [outerStrokeWidth]=\\\"5\\\" [space]=\\\"-5\\\" [innerStrokeWidth]=\\\"5\\\" [animation]=\\\"true\\\" [animationDuration]=\\\"1000\\\"></circle-progress>\\n                <div class=\\\"progressPoint\\\">Points</div>\\n              </div> -->\\n              <div class=\\\"pointProgress\\\">\\n                <div class=\\\"forPoints\\\"><span>{{ points }} {{ 'PROFILE.POINTS' | translate }}</span></div>\\n                <div class=\\\"forRank\\\"><span>{{ 'PROFILE.YOUR_RANK' | translate }} <br> {{ rank }}</span></div>\\n              </div>\\n              <p *ngIf=\\\"loader.stat\\\" class=\\\"text-center\\\"><i class=\\\"fa fa-cog fa-spin\\\" aria-hidden=\\\"true\\\"></i></p>\\n              <p class=\\\"tooltip-container\\\" (click)=\\\"openPointModal(pointsModal)\\\"> {{ 'PROFILE.KNOWLEDGE_METER' |translate }}\\n                <i class=\\\"fa fa-info-circle meater-tooltip\\\"></i>\\n                <span class=\\\"tooltip-text\\\">{{ siteSettings }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n\\n              <div class=\\\"cppNum\\\" (click)=\\\"navigatePath('connections')\\\">\\n                <span  ><i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i>\\n                {{connection_count}} <i *ngIf=\\\"loader.stat\\\" class=\\\"fa fa-cog fa-spin\\\" aria-hidden=\\\"true\\\"></i></span>\\n              </div>\\n              <a class=\\\"cppPreview\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"navigatePath('recommendations')\\\"><i class=\\\"fa fa-comments-o\\\" aria-hidden=\\\"true\\\"></i>\\n              {{recommendations}} <i *ngIf=\\\"loader.stat\\\" class=\\\"fa fa-cog fa-spin\\\" aria-hidden=\\\"true\\\"></i></a>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-xl-6 col-lg-12 orderThird\\\">\\n      <div class=\\\"formTabs\\\">\\n        <ngb-tabset (tabChange)=\\\"changeTabEvent($event)\\\">\\n          <ngb-tab>\\n            <ng-template ngbTabTitle><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.PERSONAL_INFO' |\\n              translate }}</ng-template>\\n            <ng-template ngbTabContent>\\n              <div class=\\\"ngb-tab-main-content\\\">\\n\\n                <p *ngIf=\\\"loader.personal\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></p>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"formTabsInpWrap\\\">\\n                      <label for=\\\"\\\">{{ 'PROFILEEDIT.FIRST_NAME' | translate }} :</label>\\n\\n                      <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{firstName}}\\\" readonly>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"formTabsInpWrap\\\">\\n                      <label for=\\\"\\\">{{ 'PROFILEEDIT.LAST_NAME' | translate }} :</label>\\n                      <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{lastName}}\\\" readonly>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"formTabsInpWrap\\\">\\n                      <label for=\\\"\\\">{{ 'PROFILEEDIT.FAMILY_NAME' | translate }} :</label>\\n                      <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{familyName}}\\\" readonly>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"formTabsInpWrap\\\">\\n                      <label for=\\\"\\\">{{ 'PROFILE.COUNTRY' | translate }} :</label>\\n\\n                      <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{userData?.country?.details[0].name}}\\\" readonly>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"formTabsInpWrap\\\">\\n                      <label for=\\\"\\\">{{ 'PROFILE.CITY' | translate }} :</label>\\n                      <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{userData?.city?.details[0].name}}\\\" readonly>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"formTabsInpWrap\\\">\\n                  <label for=\\\"\\\">{{ 'PROFILE.ADDRESS' | translate }} :</label>\\n\\n                  <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{userData?.address}}\\\" readonly>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"formTabsInpWrap\\\">\\n                      <label for=\\\"\\\">{{ 'PROFILE.DATE_OF_BIRTH' | translate }} :</label>\\n                      <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{dob| date: 'dd-MM-yyyy'}}\\\" readonly>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"formTabsInpWrap\\\">\\n                      <label for=\\\"\\\">{{ 'PROFILE.GENDER' | translate }} :</label>\\n\\n                      <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{gender | genderName}}\\\" readonly>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"formTabsInpWrap\\\">\\n                  <label for=\\\"\\\">{{ 'PROFILE.EMAIL' | translate }} :</label>\\n                  <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{email}}\\\" readonly>\\n                </div>\\n\\n                <div class=\\\"formTabsInpWrap\\\">\\n                  <label for=\\\"\\\">{{ 'PROFILE.MOBILE' | translate }} :</label>\\n                  <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{mobile_code+'-'+mobile_no}}\\\" readonly>\\n                </div>\\n\\n                <div class=\\\"formTabsInpWrap\\\">\\n                  <label for=\\\"\\\">{{ 'PROFILE.WEBSITE' | translate }} :</label>\\n                  <input class=\\\"inpField\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{website}}\\\" readonly>\\n                </div>\\n              </div>\\n\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab (click)=\\\"educationDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"educationDetails()\\\"><i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\n                {{ 'PROFILE.EDUCATION' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n                <div class=\\\"ngb-tab-main-content\\\">\\n                  <p *ngIf=\\\"loader.education\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></p>\\n\\n                  <ul class=\\\"list-group\\\">\\n\\n                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let education of allEducations\\\">\\n                      <h5>{{education?.degreeDetails?.details[0].name}}</h5>\\n\\n                      <p>{{education?.from_year}} - {{education?.to_year}}</p>\\n                      <p>{{education?.degreeFieldDetails?.details[0].name}}</p>\\n\\n\\n                    </li>\\n\\n                    <li *ngIf=\\\"allEducations?.length == 0\\\">\\n                      <span>\\n                        {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                      </span>\\n                    </li>\\n                  </ul>\\n                </div>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab (click)=\\\"skillDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"skillDetails()\\\"><i class=\\\"fa fa-star\\\" aria-hidden=\\\"true\\\"></i> {{\\n                'PROFILE.SKILLS' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n                <div class=\\\"ngb-tab-main-content\\\">\\n                  <p *ngIf=\\\"loader.skills\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></p>\\n                  <ul class=\\\"list-group\\\">\\n\\n                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let skill of allSkills\\\">\\n                      <h5>{{skill?.details[0].name}}</h5>\\n                      <p *ngIf=\\\"skill?.status === 1\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_EXCELLENT\\\"|translate }}</p>\\n                      <p *ngIf=\\\"skill?.status === 2\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_VERY_GOOD\\\"|translate }}</p>\\n                      <p *ngIf=\\\"skill?.status === 3\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_GOOD\\\"|translate }}</p>\\n                      <p *ngIf=\\\"skill?.status === 4\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_FRESH\\\"|translate }}</p>\\n                    </li>\\n\\n                    <li *ngIf=\\\"allSkills?.length == 0\\\">\\n                      <span>\\n                        {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                      </span>\\n                    </li>\\n                  </ul>\\n                </div>\\n\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab (click)=\\\"experienceDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"experienceDetails()\\\"><i class=\\\"fa fa-suitcase\\\"\\n                  aria-hidden=\\\"true\\\"></i>\\n                {{ 'PROFILE.EXPERIENCE' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n                <div class=\\\"ngb-tab-main-content\\\">\\n              <p *ngIf=\\\"loader.experience\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></p>\\n              <ul class=\\\"list-group\\\">\\n\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let experience of allExperiences\\\">\\n                  <h5>{{experience?.company_name}}</h5>\\n                  <p *ngIf=\\\"experience?.is_current === 1; else elseBlock\\\">\\n                    {{experience?.from_year}} - <span *ngIf=\\\"experience?.is_current === 1\\\">{{\\n                      \\\"PROFILE.EXPERIENCE_CURRENT\\\"|translate }}</span>\\n                  </p>\\n                  <ng-template #elseBlock>{{experience?.from_year}} - {{experience?.to_year}}</ng-template>\\n                  <p>{{experience?.position?.details[0].name}}</p>\\n                  <p>{{experience?.summery}}</p>\\n\\n\\n                </li>\\n\\n                <li *ngIf=\\\"allExperiences?.length == 0\\\">\\n                  <span>\\n                    {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                  </span>\\n                </li>\\n              </ul>\\n              </div>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab (click)=\\\"certificateDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"certificateDetails()\\\"><i class=\\\"fa fa-graduation-cap\\\"\\n                  aria-hidden=\\\"true\\\"></i>\\n                {{ 'PROFILE.CERTIFICATE' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n                <div class=\\\"ngb-tab-main-content\\\">\\n              <p *ngIf=\\\"loader.certificate\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></p>\\n              <ul class=\\\"list-group\\\">\\n\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let certificate of allCertificates\\\">\\n                  <h5>{{certificate.certificate_name}}</h5>\\n                  <p>From Year : {{certificate.from_year}} - {{certificate.to_year}}</p>\\n                  <p>{{certificate.summery}}</p>\\n\\n                  <p *ngIf=\\\"certificate.picture\\\"><img [src]=\\\"(certificate.picture)| picturepath:'certificate'\\\" alt=\\\"\\\">\\n                  </p>\\n\\n                </li>\\n\\n                <li *ngIf=\\\"allCertificates?.length == 0\\\">\\n                  <span>\\n                    {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                  </span>\\n                </li>\\n              </ul>\\n              </div>\\n            </ng-template>\\n          </ngb-tab>\\n\\n          <ngb-tab (click)=\\\"projectDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"projectDetails()\\\"><i class=\\\"fa fa-graduation-cap\\\"\\n                  aria-hidden=\\\"true\\\"></i>\\n                {{ 'PROFILE.PROJECT' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n                <div class=\\\"ngb-tab-main-content\\\">\\n              <p *ngIf=\\\"loader.project\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></p>\\n              <ul class=\\\"list-group\\\">\\n\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let project of allProjects\\\">\\n                  <h5>{{project.name}}</h5>\\n                  <p>{{project.company.company_name}}</p>\\n                  <p>{{project.from_date|date}} - {{project.to_date|date}}</p>\\n\\n                </li>\\n\\n                <li *ngIf=\\\"allProjects?.length == 0\\\">\\n                  <span>\\n                    {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                  </span>\\n                </li>\\n              </ul>\\n              </div>\\n            </ng-template>\\n          </ngb-tab>\\n        </ngb-tabset>\\n      </div>\\n\\n\\n      <div class=\\\"testimonialCarousal\\\" *ngIf=\\\"activeTab == 'ngb-tab-0'\\\">\\n        <div class=\\\"profileMainBox\\\">\\n          <h2>{{ 'PROFILE.TESTIMONIALS' | translate }} :</h2>\\n\\n          <div *ngIf=\\\"allTestimonial?.length > 0 \\\">\\n            <owl-carousel [options]=\\\"testimonialCaro\\\" [items]=\\\"allTestimonial\\\"\\n              [carouselClasses]=\\\"['owl-theme', 'sliding']\\\">\\n              <div class=\\\"item\\\" *ngFor=\\\"let testimonial of allTestimonial\\\">\\n                <div class=\\\"testimonialHead\\\">\\n                  <div class=\\\"testimonialHeadLeft\\\" >\\n                    <img *ngIf=\\\"testimonial.is_anonymous != 1 && testimonial.fromuser.profile_pic\\\"\\n                      [src]=\\\"testimonial.fromuser.profile_pic| picturepath:'users'\\\" alt=\\\"\\\">\\n                    <img class=\\\"no-pro-pic\\\" *ngIf=\\\"testimonial.is_anonymous != 1 && !testimonial.fromuser.profile_pic && testimonial.fromuser.gender=='F'\\\" src=\\\"assets/images/female.jpg\\\" alt=\\\"\\\">\\n                    <img class=\\\"no-pro-pic\\\" *ngIf=\\\"testimonial.is_anonymous != 1 && !testimonial.fromuser.profile_pic && testimonial.fromuser.gender=='M'\\\" src=\\\"assets/images/male.jpg\\\" alt=\\\"\\\">\\n                    <img class=\\\"no-pro-pic\\\" *ngIf=\\\"testimonial.is_anonymous == 1\\\" src=\\\"assets/images/testimonial_no_img.jpg\\\" alt=\\\"\\\">\\n                  </div>\\n                  <div class=\\\"testimonialHeadRight\\\">\\n                    <div *ngIf=\\\"testimonial.is_anonymous == 0\\\">\\n                      <h3>{{(testimonial.fromuser.first_name+' '+testimonial.fromuser.last_name)}}</h3>\\n                      <h4 *ngIf=\\\"testimonial.fromuser.position\\\">{{testimonial.fromuser.position.details[0].name}}</h4>\\n                    </div>\\n                    <div *ngIf=\\\"testimonial.is_anonymous == 1\\\">\\n                      <h3>{{ 'TESTIMONIALS.ANONYMOUS'|translate }}</h3>\\n                    </div>\\n                  </div>\\n                </div>\\n                <p>{{testimonial.message}} </p>\\n              </div>\\n            </owl-carousel>\\n          </div>\\n\\n          <div style=\\\"margin-top:25px;\\\" *ngIf=\\\"allTestimonial?.length == 0\\\">\\n            <span>\\n              {{ \\\"TESTIMONIALS.NO_RECORD_FOUND\\\" |translate }}\\n            </span>\\n          </div>\\n\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-xl-3 col-lg-6 col-md-6 orderFirst\\\">\\n\\n      <app-notifications></app-notifications>\\n    </div>\\n  </div>\\n</div>\\n<!-- Profile starts here -->\\n<ng-template #careeryMyVideoModal let-modal id=\\\"careeryPathModal\\\">\\n    <!-- <h2><span>{{ 'PROFILE.POINTS' |translate }}</span></h2> -->\\n    <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n    <div class=\\\"modal-body noPad text-center\\\">\\n      <div class=\\\"iframe-container\\\">\\n        <iframe *ngIf=\\\"profile_video_link\\\" width=\\\"560\\\" height=\\\"315\\\" [src]=\\\"profile_video_link\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n<!-- USER POINT MODAL -->\\n<ng-template #pointsModal let-modal id=\\\"modalPopup\\\">\\n  <h2><span>{{ 'PROFILE.POINTS' |translate }}</span></h2>\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body\\\">\\n    <div id=\\\"pointContents\\\" class=\\\"graphModal\\\">\\n      <div class=\\\"user-details\\\">\\n        <ul>\\n          <li><small>{{ 'PROFILE.NAME' |translate }}</small> <span>{{ (firstName+' '+lastName) }}</span></li>\\n          <li><small>{{ 'PROFILE.CPP' |translate }}</small> <span>{{ (cpp) }}</span></li>\\n        </ul>\\n      </div>\\n      <canvas *ngIf=\\\"pieChartData.length > 0\\\" baseChart id=\\\"pointCanvas\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [colors]=\\\"pieChartColors\\\"\\n        [chartType]=\\\"pieChartType\\\" [options]=\\\"pieOptions\\\"></canvas>\\n      <div class=\\\"no-record-msg\\\" *ngIf=\\\"pieChartData.length == 0\\\">{{ 'COMMON.NO_USER_POINTS' | translate }}</div>\\n    </div>\\n    <div class=\\\"chart-actions\\\" *ngIf=\\\"pieChartData.length > 0\\\">\\n      <ul ngbDropdown>\\n        <li><a (click)=\\\"downloadCanvas($event)\\\" id=\\\"downloadChartLink\\\"><i class=\\\"fa fa-floppy-o\\\"></i></a></li>\\n        <li><a (click)=\\\"printChart()\\\"><i class=\\\"fa fa-print\\\"></i></a></li>\\n        <li id=\\\"dropdownBasic3\\\" ngbDropdownToggle><a><i class=\\\"fa fa-share-alt\\\" aria-hidden=\\\"true\\\"></i></a></li>\\n        <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic3\\\">\\n          <ul>\\n            <li>\\n              <share-button button=\\\"facebook\\\" [url]=\\\"baseOrigin+'/user/chart/'+cpp\\\"></share-button> <span>Facebook</span>\\n            </li>\\n            <li>\\n              <share-button button=\\\"twitter\\\" [url]=\\\"baseOrigin+'/user/chart/'+cpp\\\"></share-button> <span>Twitter</span>\\n            </li>\\n            <li>\\n              <share-button button=\\\"whatsapp\\\" [url]=\\\"baseOrigin+'/user/chart/'+ cpp\\\"></share-button> <span>WhatsApp</span>\\n            </li>\\n            </ul>\\n        </div>\\n      </ul>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #careeryPathModal let-modal id=\\\"careeryPathModal\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Careery Manager</h4>\\n    <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  </div>\\n\\n  <div class=\\\"modal-body noPad\\\">\\n    <div style=\\\"padding:30px 0;\\\" class=\\\"profileDesc\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <a class=\\\"modBtn\\\" [routerLink]=\\\"['/cv/build']\\\"><i class=\\\"fa fa-suitcase\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.CV_BUILDER_LINK' | translate }}</a>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <a class=\\\"modBtn\\\" [routerLink]=\\\"['/card/build']\\\"><i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.CARD_BUILDER_LINK' | translate }}</a>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <a class=\\\"modBtn\\\" [routerLink]=\\\"['/profile/edit']\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.EDIT_PROF_LINK' | translate }}</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #content let-modal>\\n    <h2><span>{{ 'PROFILEEDIT.EDIT_PROFILE_PHOTO' |translate }}</span></h2>\\n    <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n    <div class=\\\"modal-body\\\">\\n\\n      <div>\\n        <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMsg\\\">{{ successMsg }}</div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMsg\\\">{{ errorMsg }}</div>\\n      </div>\\n\\n      <span class=\\\"file-upload-all\\\">\\n        <label class=\\\"custom-file-upload\\\" for=\\\"custom-input\\\">{{ 'COMMON.UPLOAD_PHOTO' | translate }}</label>\\n        <input id=\\\"custom-input\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg, .gif\\\" (change)=\\\"fileChangeListener($event, cropper)\\\">\\n      </span>\\n      <button class=\\\"cropSave\\\" (click)=\\\"savePhoto()\\\">{{ 'PROFILE.SAVE_BUTTON' | translate }}</button>\\n\\n      <div class=\\\"imgCrop\\\">\\n        <div class=\\\"\\\">\\n          <img-cropper #cropper [image]=\\\"data\\\" [settings]=\\\"cropperSettings\\\"></img-cropper>\\n        </div>\\n        <div class=\\\"cropDisp\\\" *ngIf=\\\"data.image\\\">\\n          <img [src]=\\\"data.image\\\" [width]=\\\"cropperSettings.croppedWidth\\\" [height]=\\\"cropperSettings.croppedHeight\\\">\\n        </div>\\n\\n        <!-- <div class=\\\"\\\" *ngIf=\\\"data.image\\\">\\n          <img-cropper [image]=\\\"data\\\" [settings]=\\\"cropperSettings\\\"></img-cropper>\\n        </div>\\n        <div class=\\\"cropDisp\\\" *ngIf=\\\"data.image\\\">\\n          <img  [src]=\\\"data.image\\\" [width]=\\\"cropperSettings.croppedWidth\\\" [height]=\\\"cropperSettings.croppedHeight\\\">\\n        </div> -->\\n        <div class=\\\"clearfix\\\"></div>\\n\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n  <canvas *ngIf=\\\"pieChartData.length > 0\\\" baseChart id=\\\"pointCanvas1\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [colors]=\\\"pieChartColors\\\"\\n      [chartType]=\\\"pieChartType\\\" [options]=\\\"pieOptions\\\"></canvas>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZXZpZXcvcHJvZmlsZXZpZXcuY29tcG9uZW50LnNjc3MifQ== */\"","/*****************************************************\n# Company Name          : \n# Author                :\n# Created Date          : 20-01-2019\n# Module                : ProfileviewComponent\n# Object name           : ProfileviewComponent\n# Functionality         : All user profile details\n# Purpose               : constructor, ngOnInit, openEditProfile, getUserDetails,statDetails,  getTestimonials, educationDetails, skillDetails, experienceDetails, certificateDetails, openPointModal, printChart, downloadCanvas\n*******************************************************/\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from \"@angular/router\";\nimport { TranslateService } from '@ngx-translate/core';\nimport * as global from '../../globalConfig';\nimport { UsersService } from '../../services/users.service';\nimport { CvcardService } from '../../services/cvcard.service';\nimport { AuthService } from '../../services/auth.service';\nimport { CommonService } from '../../services/common.service';\nimport { TestimonialService } from '../../services/testimonial.service';\nimport 'chart.piecelabel.js';\nimport { OwlCarousel } from 'ngx-owl-carousel';\nimport { ImageCropperComponent, CropperSettings } from \"ngx-img-cropper\";\nimport * as CryptoJS from 'crypto-js';\nimport swal from 'sweetalert';\nimport {PicturepathPipe} from '../../global/picturepath.pipe';\nimport { LoaderService } from '../../loader/loader.service';\n\nimport * as jspdf from 'jspdf';  \n  \nimport html2canvas from 'html2canvas'; \n\n@Component({\n  selector: 'app-profileview',\n  templateUrl: './profileview.component.html',\n  styleUrls: ['./profileview.component.scss'],\n  providers:[PicturepathPipe]\n})\nexport class ProfileviewComponent implements OnInit {\n  @ViewChild('cardQrCode', { read: ElementRef }) cardQrCode: ElementRef<HTMLElement>;\n  @ViewChild('cardOwl') cardOwl: OwlCarousel;\n  @ViewChild('pointsModal') pointsModal; // point modal reference\n  @ViewChild('careeryPathModal') careeryPathModal; // careery path reference\n  @ViewChild('careeryMyVideoModal') careeryMyVideoModal; // careery path reference\n  public userData: any = null;\n  public pieChartLabels: string[] = []; // points piechart labels\n  public pieChartData: number[] = []; // points pie chart valus\n  public pieChartColors: any[] = []; // points pie chart colors\n  public pieChartType: string = 'pie'; // points chart type\n  public pieOptions: any = null; // points chart config\n  public userId:any = '';\n  public email: string = ''; // user email\n  public firstName: string = ''; // user first name\n  public lastName: string = ''; // user last name\n  public familyName: string = ''; // user FAMILY name\n  public address: string = ''; // user address\n  public dob: any = null; // user dob\n  public gender: string = ''; // get user gender\n  public mobile_no: string = ''; // get user mobile no\n  public mobile_code: string = ''; // get user mobile code\n  \n  public country: string = ''; // get user country\n  public city: string = ''; // get user city\n  public cpp: string = ''; // get user cpp\n  public points: string = ''; // get user points\n  public position: string = ''; // get user positions\n  public connection_count: string = ''; //get user counts\n  public profile_pic: string = ''; // get user profile pic\n  public dribbble_link: string = ''; // get userdribbble link\n  public facebook_link: string = ''; // get facebook link\n  public pinterest_link: string = ''; // get pinterest link\n  public behance_link: string = ''; // get behance link\n  public twitter_link: string = ''; // get twitter link\n  public website: string = ''; // get twitter link\n  public profile_video_link:any = ''; \n  public userCv: any = [];\n\n  public profile_image_path: string = global.s3URL + 'userspic/'; // profile pic base path\n  profilePic: any = null; // user profile pic\n  allTestimonial: any[]; // all trstimonials of a user\n  allEducations: any = ''; // all educations list of a user\n  allSkills: any = ''; // all skills of a user\n  allExperiences: any = ''; // all experience list of a user\n  allCertificates: any = ''; // all certificate list of a user\n  allProjects: any = []; // all projects of auser\n  recommendations: any = null; // get recommendations count\n  rank: any = null; // get user rank\n  images: any = null;\n  imagePath: any = ''; // image path\n  loader: any = { // loder config\n    'personal': false,\n    'education': false,\n    'skills': false,\n    'experience': false,\n    'certificate': false,\n    'project': false,\n    'stat': false,\n    'card': false,\n    \"card_remove\": false\n  };\n  mySlideOptions = { items: 1, dots: false, nav: true }; // slider config\n  testimonialCaro = { items: 1, dots: true, nav: true }; // testimonial slider config\n\n  public scrollbarOptions = { axis: 'y', theme: 'minimal-dark' }; // scroll ber config\n  activeTab: any = 'ngb-tab-0';\n  userCardList: Array<any> = [];\n  baseOrigin: any = null;\n  cropperSettings: CropperSettings; // settings of cropper\n  data: any; // crop image data\n  errorMsg: any = '';\n  successMsg: any = '';\n  siteSettings: any = null;\n  qrCodeUrl:any = document.location.origin ;\n  /* Function Name : constructor\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and defin the languages data\n\t* PARAMS : route, authService, usersService, translate, cService, sanitizer, modalService\n\t*/\n  constructor(\n    private route: Router,\n    public authService: AuthService,\n    public usersService: UsersService,\n    public translate: TranslateService,\n    private cService: CommonService,\n    private sanitizer: DomSanitizer,\n    private modalService: NgbModal,\n    private testimonialService: TestimonialService,\n    private cvCardService: CvcardService,\n    private filePathPipe: PicturepathPipe,\n    private loderService: LoaderService\n  ) {\n\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n    });\n\n    this.cService.profilePic.subscribe((pic) => {\n      if (pic) {\n        this.profilePic = this.sanitizer.bypassSecurityTrustUrl(pic);\n      }\n    });\n    this.cropperSettings = new CropperSettings();\n    this.cropperSettings.noFileInput = true;\n    this.data = {};\n    this.cService.profilePic.subscribe((pic) => {\n      if (pic) {\n        this.profilePic = this.sanitizer.bypassSecurityTrustUrl(pic);\n        this.data.image = this.profilePic;\n      } else {\n        this.profilePic = \"\";\n        this.data.image = \"\";\n      }\n\n    });\n  }\n  /* Function Name : ngOnInit\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to get data after html load\n\t* PARAMS :\n\t*/\n  ngOnInit() {\n    this.baseOrigin = window.location.origin;\n    localStorage.setItem('_sp', 'profile_user');\n    this.getUserDetails();\n    \n\n  }\n  /* Function Name : openEditProfile\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to redirect edit profile page\n\t* PARAMS :\n\t*/\n  openCareeryManagerModal() {\n    this.modalService.open(this.careeryPathModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' })\n\n  }\n\n  /* Function Name : getUserDetails\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to get user details\n\t* PARAMS :\n\t*/\n  getUserDetails() {\n    this.loader.personal = true;\n    this.usersService.userDetails().subscribe((response: any) => {\n      //console.log(response);\n      if ((response['statustext'] === 'success')) {\n        this.userData = response['data'];\n\n        this.email = response['data'].email;\n        this.address = response['data'].address;\n        this.dob = response['data'].dob;\n\n        if (!new Date(this.dob)) {\n          this.dob = '';\n        }\n        this.userId = response['data'].id;\n        this.gender = response['data'].gender;\n        this.mobile_no = response['data'].mobile_no;\n        this.mobile_code = response['data'].mobile_code;\n        this.country = (response['data']['country']) ? response['data']['country'].name : '';\n        this.city = (response['data']['city']) ? response['data']['city'].name : '';\n        this.cpp = response['data'].cpp;\n        if (response['data']['position'] && response['data']['position']['details']) {\n          this.position = response['data']['position']['details'][0].name;\n        }\n        this.firstName = response['data'].first_name;\n        this.lastName = response['data'].last_name;\n        this.familyName = response['data'].family_name;\n\n        this.profile_pic = response['data'].profile_pic;\n        this.facebook_link = response['data'].facebook_link;\n        this.twitter_link = response['data'].twitter_link;\n        this.dribbble_link = response['data'].dribbble_link;\n        this.pinterest_link = response['data'].pinterest_link;\n        this.behance_link = response['data'].behance_link;\n        this.website = response['data'].website;\n        if (response['data'].video_link) {\n          let videoUrl = this.cService.getYoutubeEmbedUrl(response['data'].video_link);\n          this.profile_video_link = (response['data'].video_link)? this.sanitizer.bypassSecurityTrustResourceUrl(videoUrl): '';\n        }\n        this.siteSettings =  response['data'].site_settings.user_point_tooltip_text;\n        if (response['data'].cv) {\n          this.userCv = response['data'].cv;\n        }\n\n        if (localStorage.getItem('_propic')) {\n          this.cService.setProfilePic(localStorage.getItem('_propic'));\n        } else if (response['data'].profile_pic) {\n          this.profilePic = global.s3URL + 'userspic/' + response['data'].profile_pic;\n          this.cService.setProfilePic(this.profilePic);\n        } else {\n          localStorage.removeItem('_propic');\n          this.cService.setProfilePic('');\n        }\n        \n        this.statDetails();\n        this.getUserCardList();\n        this.getTestimonials();\n        \n      } else {\n\n        console.log('error');\n      }\n      this.loader.personal = false;\n\n    });\n\n  }\n  /* Function Name : statDetails\n\t* Author :\n\t* Created Date : 05-03-2019\n\t* Modified Date : *\n\t* Purpose : to get user  stat details\n\t* PARAMS :\n\t*/\n  statDetails() {\n    this.loader.stat = true;\n    let postData = {\n      id: btoa(this.userData.id)\n    }\n    this.usersService.userStatDetails(postData).subscribe((response: any) => {\n      this.loader.stat = false;\n      if (response.statustext == 'success') {\n        this.connection_count = response.data.connection_count;\n        this.points = response.data.points;\n        this.recommendations = response.data.recommendations;\n        this.rank = response.data.rank;\n      }\n    })\n  }\n\n  /* Function Name : getTestimonials\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to get user testimonials\n\t* PARAMS :\n\t*/\n  getTestimonials() {\n\n    let type = 'accepted';\n    let userid = this.userData.id;\n    let token = localStorage.getItem(\"_token\");\n    let formPostData = {\n      \"id\": btoa(userid)\n    };\n    this.testimonialService.publicTestimonial(formPostData).subscribe((response: any) => {\n      //console.log(response);\n      if ((response['statustext'] === 'success')) {\n        this.allTestimonial = response['data'].filter((item) => {\n          return item.fromuser.id != undefined;\n        });\n      } else {\n        console.log('error testimonials');\n      }\n\n    });\n\n  }\n\n  /* Function Name : educationDetails\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to get user education detaills\n\t* PARAMS :\n\t*/\n  educationDetails() {\n    let type = 'education';\n    this.loader.education = true;\n    this.usersService.userDetailsByType(type).subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n\n        //console.log(response);\n        let count = response['data']['degree'].length;\n        if (count > 0) {\n          this.allEducations = response['data']['degree'];\n        } else {\n          this.allEducations = '';\n        }\n\n      } else {\n\n        console.log('error in education details');\n      }\n      this.loader.education = false;\n    });\n  }\n\n  /* Function Name : skillDetails\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to get user skills detaills\n\t* PARAMS :\n\t*/\n  skillDetails() {\n    let type = 'skills';\n    this.loader.skills = true;\n    this.usersService.userDetailsByType(type).subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n\n        //console.log(response);\n        let count = response['data']['skills'].length;\n        if (count > 0) {\n          this.allSkills = response['data']['skills'];\n        } else {\n          this.allSkills = '';\n        }\n\n      } else {\n\n        console.log('error in skills details');\n      }\n      this.loader.skills = false;\n    });\n  }\n\n  /* Function Name : experienceDetails\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to get user experience detaills\n\t* PARAMS :\n\t*/\n  experienceDetails() {\n    let type = 'experience';\n    this.loader.experience = true;\n    this.usersService.userDetailsByType(type).subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n\n        //console.log(response);\n        let count = response['data']['experience'].length;\n        if (count > 0) {\n          this.allExperiences = response['data']['experience'];\n        } else {\n          this.allExperiences = '';\n        }\n\n      } else {\n\n        console.log('error in experience details');\n      }\n      this.loader.experience = false;\n    });\n  }\n\n  /* Function Name : certificateDetails\n\t* Author :\n\t* Created Date : 20-01-2019\n\t* Modified Date : *\n\t* Purpose : to get user certificate detaills\n\t* PARAMS :\n\t*/\n  certificateDetails() {\n    let type = 'certificate';\n    this.loader.certificate = true;\n    this.usersService.userDetailsByType(type).subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n        this.allCertificates = response['data']['certificates'];\n\n      } else {\n\n        console.log('error in certificate details');\n      }\n      this.loader.certificate = false;\n    });\n  }\n  /* Function Name : projectDetails\n\t* Author :\n\t* Created Date : 14-03-2019\n\t* Modified Date : *\n\t* Purpose : to get user project detaills\n\t* PARAMS :\n\t*/\n  projectDetails() {\n    let type = 'project';\n    this.loader.project = true;\n    this.usersService.userDetailsByType(type).subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n        this.allProjects = response['data']['projects'];\n      } else {\n        console.log('error in certificate details');\n      }\n      this.loader.project = false;\n    });\n  }\n\n  /* Function Name : openPointModal\n\t* Author :\n\t* Created Date : 26-02-2019\n\t* Modified Date : *\n\t* Purpose : to open points modal\n\t* PARAMS :\n\t*/\n  openPointModal(pointModal: any) {\n    this.pieChartLabels = [];\n    this.pieChartData = [];\n    this.pieChartColors = [\n      {\n        backgroundColor: ['#26bfb5', '#5bc78c', '#fc9772', '#ff4a5f', '#adc72a'],\n      }\n    ];\n    this.usersService.getUserPoints(btoa(this.userData.id))\n      .subscribe((responseData: any) => {\n        if (responseData.data) {\n          this.pieOptions = {\n            pieceLabel: {\n              render: function (args) {\n                const label = args.label,\n                  value = args.value;\n                return value + ' points';\n              },\n              fontColor: '#FFFFFF',\n              fontSize: 13,\n              fontStyle: 'bold'\n            },\n            legend: { position: 'right' },\n            elements: {\n              arc: {\n                borderWidth: 0,\n                weight: 0.5\n              }\n            }\n          };\n          responseData.data.forEach(element => {\n            this.pieChartLabels.push(element.point_name);\n            this.pieChartData.push(element.total_point);\n\n          });\n          this.modalService.open(pointModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n        }\n      });\n\n  }\n  /* Function Name : printChart\n\t* Author :\n\t* Created Date : 26-02-2019\n\t* Modified Date : *\n\t* Purpose : to print point chart\n\t* PARAMS :\n\t*/\n  printChart() {\n    window.print();\n  }\n  /* Function Name : downloadCanvas\n\t* Author :\n\t* Created Date : 26-02-2019\n\t* Modified Date : *\n\t* Purpose : to download teh chart image\n\t* PARAMS :\n\t*/\n  downloadCanvas(event) {\n \n    var anchor = document.getElementById('downloadChartLink');\n    let canvas:any = document.getElementById('pointCanvas');\n    var img = new Image();\n    img.src = canvas.toDataURL();\n    var context = canvas.getContext('2d');\n    context.drawImage(img, 0, 0, 200, 200);\n    var dataUrl = canvas.toDataURL('image/jpeg', 1);\n    anchor['href'] = dataUrl;\n    anchor['download'] = \"chart.jpg\";\n  }\n\n  \n\n  /* Function Name : navigatePath\n\t* Author :\n\t* Created Date : 15-03-2019\n\t* Modified Date : *\n\t* Purpose : to redirect in new page\n\t* PARAMS :\n\t*/\n  navigatePath(path) {\n    this.route.navigate(['/' + path]);\n  }\n\n  getUserCardList(afterRemove = false) {\n    this.loader.card = true;\n    let loggedInUser = this.cService.getLoggedUserData();\n    this.cvCardService.getCardList({\n      id: btoa(loggedInUser._i),\n      \"only_default\":1\n    }).subscribe((responseData: any) => {\n      if (responseData.statustext == 'success') {\n        let cardList = responseData.data.list;\n        this.userCardList = [];\n        if (cardList.length > 0) {\n\n          this.userCardList = cardList.map((item) => {\n            let details = null;\n            if (item.card_details) {\n              details = JSON.parse(item.card_details);\n            }\n            return {\n              id: item.id,\n              details: details,\n              file: item.card_file\n            };\n          });\n        } \n        this.cardOwl.reInit();\n        if (afterRemove == true) {\n          this.cardOwl.reInit();\n        }\n        this.loader.card = false;\n      }\n    });\n  }\n\n  removeOwnCard(card) {\n\n    this.translate.get(['CARD.CARD_REMOVE_CONFIRM']).subscribe((tData) => {\n        swal({\n          title: '',\n          text: tData['CARD.CARD_REMOVE_CONFIRM'],\n          icon: \"warning\",\n          buttons: {\n            cancel: true,\n            confirm: true,\n          },\n        }).then((willDelete) => {\n          if(willDelete) {\n            this.loader.card_remove = true;\n            this.cvCardService.removeCard({\n              cardId: btoa(card.id)\n            })\n              .subscribe((responseData: any) => {\n                this.loader.card_remove = false;\n                if (responseData.statustext == 'success') {\n                  this.getUserCardList(true);\n                }\n              })\n          }\n        });\n    });\n  }\n\n  /* Function Name : changeTabEvent\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to get data on tab change\n\t* PARAMS : e\n\t*/\n  changeTabEvent(e) {\n    this.activeTab = e.nextId;\n  }\n\n  /* Function Name : openEditPicModal\n* Author : \n* Created Date : 31-01-2019 \n* Modified Date : *\n* Purpose : to open edit profile picture modal\n* PARAMS : content\n*/\n  openEditPicModal(content) {\n\n    this.modalService.open(content, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n  }\n\n  /* Function Name : fileChangeListener\n * Author : \n * Created Date : 31-01-2019 \n * Modified Date : *\n * Purpose : to get file object on image upload\n * PARAMS : $event, cropper\n */\n  fileChangeListener($event, cropper) {\n    var image: any = new Image();\n    var file: File = $event.target.files[0];\n    if (file && (file.type == 'image/jpeg' || file.type == 'image/png' || file.type == 'image/gif')) {\n      if (file.size < 250000) {\n\n        var myReader: FileReader = new FileReader();\n        var that = this;\n\n        myReader.onloadend = (loadEvent: any) => {\n\n          image.src = loadEvent.target.result;\n          setTimeout(() => {\n            cropper.setImage(image);\n          }, 10);\n        };\n\n        myReader.readAsDataURL(file);\n      } else {\n        this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_SIZE_ERROR']).subscribe((tData) => {\n          \n          swal({\n            title: tData['COMMON.ERROR'],\n            text: tData['PROFILEEDIT.PROFILE_PIC_SIZE_ERROR'],\n            icon: 'error'\n          });\n        });\n      }\n    } else {\n      this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_TYPE_ERROR']).subscribe((tData) => {\n          \n        swal({\n          title: tData['COMMON.ERROR'],\n          text: tData['PROFILEEDIT.PROFILE_PIC_TYPE_ERROR'],\n          icon: 'error'\n        });\n      });\n    }\n  }\n  /* Function Name : savePhoto\n\t* Author : \n\t* Created Date : 31-01-2019 \n\t* Modified Date : *\n\t* Purpose : to save photo\n\t* PARAMS : \n\t*/\n  savePhoto() {\n    if (this.data.image) {\n\n      this.usersService.changeProfilePic({\n        \"pic\": this.data['image']\n      }).subscribe((res: any) => {\n        if (res.statustext === 'success') {\n          localStorage.setItem(\"_propic\", this.data['image']);\n          this.cService.setProfilePic(this.data['image']);\n          this.errorMsg = '';\n          this.successMsg = res.message;\n\n        } else {\n\n          this.successMsg = '';\n          this.errorMsg = res.message;\n\n        }\n      });\n    } else {\n      this.translate.get(['COMMON.ERROR','PROFILEEDIT.PROFILE_PIC_TYPE_ERROR']).subscribe((tData) => {\n          \n        swal({\n          title: tData['COMMON.ERROR'],\n          text: tData['PROFILEEDIT.PROFILE_PIC_TYPE_ERROR'],\n          icon: 'error'\n        });\n      });\n\n    }\n  }\n/* Function Name : copyLink\n\t* Author : \n\t* Created Date : 23-07-2019 \n\t* Modified Date : *\n\t* Purpose : to copy profile link\n\t* PARAMS : \n\t*/\n  copyLink () {\n\tlet copyText = document.createElement('input');\n\tcopyText.value = window.location.href;\n\tdocument.body.appendChild(copyText);\n\tcopyText.select();\n\tdocument.execCommand('copy');\n\tdocument.body.removeChild(copyText);\n\tthis.translate.get(['COMMON.SUCCESS', 'COMMON.LINK_COPY']).subscribe((tData) => {\n\t\tswal({\n\t\t\ttitle: tData['COMMON.SUCCESS'],\n\t\t\ttext: tData['COMMON.LINK_COPY'],\n\t\t\ticon: 'success'\n\t\t});\n\t});\n  }\n\n  openVideoModal() {\n    this.modalService.open(this.careeryMyVideoModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' })    \n  }\n\t/* Function Name : gotToCV\n\t* Author : \n\t* Created Date : 03-04-2019 \n\t* Modified Date : *\n\t* Purpose : to redirect to cv\n\t* PARAMS :\n\t*/\n\tgotToCV() {\n    let defaultCv = null;\n    if (this.userData.cv && this.userData.cv.length > 0){\n      defaultCv = this.userData.cv.find((i)=>{ return i.is_default == 1 });\n      if (defaultCv) {\n        let cvPath = this.filePathPipe.transform(defaultCv.cv_file, 'cv');\n        // let anchor = document.createElement('a');\n        // anchor.href = cvPath;\n        // anchor.download = 'Careery-cv.pdf';\n        // document.body.appendChild(anchor);\n        // anchor.click();\n\n        var win = window.open(cvPath, '_blank');\n        win.focus();\n      }\n    }\n    if (!defaultCv) {\n\n      this.cvCardService.saveDefaultCV({\n        user_id: btoa(this.userId)\n      })\n        .subscribe((responseData: any) => {\n          if (responseData.statustext == 'success') {\n            setTimeout(()=>{\n              this.loderService.show();\n            },100)\n            setTimeout(()=>{\n              this.loderService.hide();\n              let cvPath = this.filePathPipe.transform('careery-'+this.userId+'-cv.pdf', 'cv');\n              // let anchor = document.createElement('a');\n              // anchor.href = cvPath;\n              // anchor.download = 'Careery-cv.pdf';\n              // document.body.appendChild(anchor);\n              // anchor.click();\n              var win = window.open(cvPath, '_blank');\n              win.focus();\n            },3000);\n          }\n        });\n    }\n    \n  } \n  \t/* Function Name : downloadDefaultCardFile\n\t* Author : \n\t* Created Date : 31-07-2019 \n\t* Modified Date : *\n\t* Purpose : to download default careery card\n\t* PARAMS :\n\t*/\n  downloadDefaultCardFile() {\n    this.cvCardService.saveDefaultCard({\n      user_id: btoa(this.userId)\n    })\n    .subscribe((responseData)=>{\n      setTimeout(()=>{\n        this.loderService.show();\n      },100)\n      setTimeout(()=>{\n        this.loderService.hide();\n      let cvPath = this.filePathPipe.transform('careery-'+this.userId+'-card.pdf', 'card');\n      var win = window.open(cvPath, '_blank');\n      win.focus();\n    },3000);\n    })\n  }\n}\n\n\n","module.exports = \"<div class=\\\"profileMain forPublicProfile\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-xl-3 col-lg-4\\\">\\n      <div class=\\\"profileDesc\\\">\\n        <div class=\\\"profileMainBox\\\">\\n          <span ngbDropdown class=\\\"publicDrop\\\" *ngIf=\\\"activeUserId\\\">\\n            <i class=\\\"fa fa-ellipsis-v\\\" aria-hidden=\\\"true\\\" id=\\\"dropPublic\\\" ngbDropdownToggle></i>\\n            <div ngbDropdownMenu aria-labelledby=\\\"dropPublic\\\">\\n              <ul>\\n                <li><a (click)=\\\"openSendMessageModal(messageSendModal)\\\">{{ 'PROFILE.MESSAGE' |translate }}</a></li>\\n                <li><a (click)=\\\"connectionSend(userData.id)\\\">{{ 'PROFILE.CONTACT' |translate }}</a></li>\\n                <li *ngIf=\\\"display.block\\\"><a (click)=\\\"openBlock()\\\">{{ 'BLOCKS.BLOCK' |translate }}</a></li>\\n                <li *ngIf=\\\"!display.block\\\"><a (click)=\\\"unblock()\\\">{{ 'BLOCKS.UNBLOCK' |translate }}</a></li>\\n              </ul>\\n            </div>\\n          </span>\\n          <div class=\\\"profileDescImg alt\\\">\\n            <img *ngIf=\\\"profilePic\\\" [src]=\\\"profilePic\\\" alt=\\\"\\\">\\n            <img  *ngIf=\\\"userData && !profilePic && userData.gender && userData.experience_level\\\" src=\\\"assets/images/charachter/{{ userData.gender+'_'+userData.experience_level }}.png\\\" alt=\\\"\\\">\\n          </div>\\n          <h2>{{userData.first_name | titlecase}} {{userData.last_name | titlecase}}</h2>\\n          <h3 *ngIf=\\\"userData.position && userData.position.details\\\">{{ userData?.position?.details[0].name }}</h3>\\n          <h3>CPP : {{ userData?.cpp }}</h3>\\n          <div class=\\\"profileAward\\\">\\n            <span *ngIf=\\\"display.cv\\\"\\n                (click)=\\\"gotToCV(userData.cv[0])\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i> {{\\\"CV.PREVIEW_CV\\\"| translate}}</span>\\n            <span *ngIf=\\\"profile_video_link\\\" (click)=\\\"openVideoModal()\\\"><i class=\\\"fa fa-forward\\\" aria-hidden=\\\"true\\\"></i> {{\\\"COMMON.MY_VIDEO\\\"| translate}}</span>\\n\\n            \\n\\n          </div>\\n          <div class=\\\"socialProfile\\\">\\n            <ul ngbDropdown>\\n              <li>\\n                <a *ngIf=\\\"userData.dribbble_link\\\" href=\\\"{{userData.dribbble_link}}\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-dribbble\\\" aria-hidden=\\\"true\\\"></i></a>\\n                <a *ngIf=\\\"!userData.dribbble_link\\\" [routerLink]=\\\"['/', userData.cpp]\\\"><i class=\\\"fa fa-dribbble\\\" aria-hidden=\\\"true\\\"></i></a>\\n              </li>\\n              <li>\\n                <a *ngIf=\\\"userData.facebook_link\\\" href=\\\"{{userData.facebook_link}}\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-facebook\\\"\\n                    aria-hidden=\\\"true\\\"></i></a>\\n                <a *ngIf=\\\"!userData.facebook_link\\\" [routerLink]=\\\"['/', userData.cpp]\\\"><i class=\\\"fa fa-facebook\\\"\\n                      aria-hidden=\\\"true\\\"></i></a>\\n              </li>\\n              <li>\\n                <a *ngIf=\\\"userData.twitter_link\\\" href=\\\"{{userData.twitter_link}}\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i></a>\\n                <a *ngIf=\\\"!userData.twitter_link\\\" [routerLink]=\\\"['/', userData.cpp]\\\"><i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i></a>\\n              </li>\\n              <li id=\\\"dropdownBasic2\\\" ngbDropdownToggle><a><i class=\\\"fa fa-share-alt\\\" aria-hidden=\\\"true\\\"></i></a></li>\\n              <!--  <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic2\\\">\\n                <ul>\\n                  <li><a class=\\\"facebook\\\" href=\\\"#\\\"><i class=\\\"fa fa-facebook\\\" aria-hidden=\\\"true\\\"></i></a> <span>Facebook</span></li>\\n                  <li><a class=\\\"twitter\\\" href=\\\"#\\\"><i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i></a> <span>Twitter</span></li>\\n                  <li><a class=\\\"whatsapp\\\" href=\\\"#\\\"><i class=\\\"fa fa-whatsapp\\\" aria-hidden=\\\"true\\\"></i></a> <span>WhatsApp</span></li>\\n                  <li><a href=\\\"#\\\"><i class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></i></a> <span>Copy Link</span></li>\\n                </ul>\\n              </div> -->\\n              <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic2\\\">\\n                <ul>\\n                  <li>\\n                    <share-button button=\\\"facebook\\\"></share-button><span>Facebook</span>\\n                  </li>\\n                  <li>\\n                    <share-button button=\\\"twitter\\\"></share-button><span>Twitter</span>\\n                  </li>\\n                  <li>\\n                    <share-button button=\\\"whatsapp\\\"></share-button><span>WhatsApp</span>\\n                  </li>\\n                  <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"copyLink()\\\"><i class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></i></a>\\n                    <span>{{ 'PROFILE.COPY_LINK' |translate }}</span></li>\\n                </ul>\\n              </div>\\n\\n\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"profileCarousal\\\" >\\n        <div class=\\\"profileMainBox\\\">\\n          <div class=\\\"text-center\\\" *ngIf=\\\"loader.card\\\">\\n            <i class=\\\"fa fa-cog fa-spin\\\"></i><br />\\n            <p>{{ 'CARD.PLEASE_WAIT' | translate }}</p>\\n          </div>\\n          <div >\\n\\n            <owl-carousel #cardOwl [options]=\\\"mySlideOptions\\\" [carouselClasses]=\\\"['owl-theme', 'sliding']\\\">\\n                <div class=\\\"item\\\" *ngIf=\\\"userCardList.length == 0\\\">\\n                    <div class=\\\"iconDown\\\">\\n                        <a href=\\\"javascript:void(0)\\\"  (click)=\\\"downloadDefaultCardFile()\\\"> <i class=\\\"fa fa-download\\\"\\n                            aria-hidden=\\\"true\\\"></i></a>\\n                        \\n                      </div>\\n                    <section class=\\\"sheet\\\">\\n                        <div class=\\\"card-left\\\">\\n                          <div class=\\\"card-profile\\\">\\n                              <img *ngIf=\\\"profilePic\\\" [src]=\\\"profilePic\\\" alt=\\\"\\\">\\n                              <img  *ngIf=\\\"userData && !profilePic && userData.gender && userData.experience_level\\\" src=\\\"assets/images/charachter/{{ userData.gender+'_'+userData.experience_level }}.png\\\" alt=\\\"\\\">\\n                          </div>\\n                          <div class=\\\"card-profile-txt\\\">\\n                            <h2>{{userData.first_name | titlecase}} {{userData.last_name | titlecase}}</h2>\\n                            <h5>{{ userData?.position?.details[0].name }}</h5>\\n                          </div>\\n                          <ul class=\\\"card-social\\\">\\n                            <li><span class=\\\"hh\\\"><img src=\\\"assets/images/card_assets/images/phone.svg\\\" alt=\\\"\\\"></span> {{userData.mobile_code+'-'+userData.mobile_no}}\\\"</li>\\n                            <li><span class=\\\"hh\\\"><img src=\\\"assets/images/card_assets/images/location.svg\\\" alt=\\\"\\\"></span> {{ userData.address + ' ' + userData.city+', ' + userData.country }}</li>\\n                            <li class=\\\"mail-icon\\\"><span class=\\\"hh\\\"><img src=\\\"assets/images/card_assets/images/email.svg\\\" alt=\\\"\\\"></span> {{ userData.email }}</li>\\n                          </ul>\\n                        </div>\\n                      \\n                        <div class=\\\"card-right\\\">\\n                          <div class=\\\"card-right-img\\\"><img src=\\\"assets/images/card_assets/images/card-logo.svg\\\" alt=\\\"\\\"></div>\\n                          <div class=\\\"card-right-cont\\\">\\n                            <div class=\\\"code-img\\\"><qrcode #cardQrCode [qrdata]=\\\"qrCodeUrl+'/'+userData?.cpp\\\" [size]=\\\"50\\\" [level]=\\\"'M'\\\" ></qrcode></div>\\n                            <h5>CPP : {{ userData?.cpp }}</h5>\\n                            <div class=\\\"gntby\\\">\\n                              <ul>\\n                                <li>Generated by</li>\\n                                <li><img src=\\\"assets/images/card_assets/images/foot-logo.png\\\" alt=\\\"\\\"></li>\\n                              </ul>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </section>\\n                </div>\\n              <div class=\\\"item\\\" *ngFor=\\\"let card of userCardList\\\">\\n                <div class=\\\"iconDown\\\"><a class=\\\"anchor-common\\\" (click)=\\\"gotToCard(card)\\\" *ngIf=\\\"display.card\\\"> <i class=\\\"fa fa-download\\\"\\n                      aria-hidden=\\\"true\\\"></i></a></div>\\n                <div *ngIf=\\\"card.details\\\">\\n                  <div class=\\\"profileSingle\\\">\\n                    <div class=\\\"profileDescImg\\\"><img *ngIf=\\\"card.details.photo\\\" [src]=\\\"card.details.photo\\\" alt=\\\"\\\"></div>\\n                    <h2>{{ card.details.name  }}</h2>\\n                    <h3>{{ card.details.position }}</h3>\\n                  </div>\\n                  <div class=\\\"proLocation\\\">\\n                    <p><span><i class=\\\"fa fa-mobile\\\" aria-hidden=\\\"true\\\"></i></span> {{ card.details.mobile }}</p>\\n                    <p><span><i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i></span>\\n                      {{ card.details.city_name+', '+card.details.country_name }}</p>\\n                    <div class=\\\"qrCode\\\"><img *ngIf=\\\"card.details.qrcode\\\" [src]=\\\"card.details.qrcode\\\" alt=\\\"\\\"></div>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"!card.details && card.file\\\">\\n                  <img [src]=\\\"card.file| picturepath:'card'\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"item\\\" >\\n                  <!-- <div class=\\\"iconDown\\\">\\n                    <a href=\\\"javascript:void(0)\\\"  (click)=\\\"downloadDefaultCardFile()\\\"> <i class=\\\"fa fa-download\\\"\\n                        aria-hidden=\\\"true\\\"></i></a>\\n                    \\n                  </div> -->\\n                  <img src=\\\"assets/images/card-back.png\\\" />\\n              </div>\\n            </owl-carousel>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"cvReview\\\">\\n        <div class=\\\"profileMainBox\\\">\\n          <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col-lg-6 withRightBdr\\\">\\n              <!-- <div class=\\\"progressWrap\\\">\\n              <circle-progress [percent]=\\\"userData?.points\\\" [titleFontSize]=\\\"40\\\" [showSubtitle]=\\\"false\\\" [showUnits]=\\\"false\\\" [outerStrokeColor]=\\\"'#707070'\\\" [innerStrokeColor]=\\\"'#D4D4D4'\\\" [radius]=\\\"100\\\" [backgroundPadding]=\\\"7\\\" [outerStrokeWidth]=\\\"5\\\" [space]=\\\"-5\\\" [innerStrokeWidth]=\\\"5\\\" [animation]=\\\"true\\\" [animationDuration]=\\\"1000\\\"></circle-progress>\\n              <div class=\\\"progressPoint\\\">Points</div>\\n            </div>\\n            <p>Knowledge Meter</p> -->\\n              <div class=\\\"pointProgress\\\">\\n                <div class=\\\"forPoints\\\"><span>{{ points }} {{ 'PROFILE.POINTS' | translate }}</span></div>\\n                <div class=\\\"forRank\\\"><span>{{ 'PROFILE.YOUR_RANK' | translate }} <br> {{ rank }}</span></div>\\n              </div>\\n              <p *ngIf=\\\"loader.stat\\\" align=\\\"center\\\"><i class=\\\"fa fa-cog fa-spin\\\" aria-hidden=\\\"true\\\"></i></p>\\n              <p class=\\\"tooltip-container\\\" (click)=\\\"openPointModal(pointsModal)\\\"> {{ 'PROFILE.KNOWLEDGE_METER' |translate }} \\n                <i class=\\\"fa fa-info-circle meater-tooltip\\\"></i>\\n                <span class=\\\"tooltip-text\\\">{{ siteSettings }}</span>\\n              </p>\\n            </div>\\n            <div class=\\\"col-lg-6\\\">\\n              \\n              <div class=\\\"cppNum\\\" (click)=\\\"connectionSend(userData.id)\\\">\\n                  <span><i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i>\\n                &nbsp;{{connection_count}} <i *ngIf=\\\"loader.stat\\\" class=\\\"fa fa-cog fa-spin\\\" aria-hidden=\\\"true\\\"></i>\\n              </span>\\n                </div>\\n                <a class=\\\"cppPreview\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"recommendationSend()\\\"><i class=\\\"fa fa-trophy\\\" aria-hidden=\\\"true\\\"></i> {{recommendations}} <i\\n                  *ngIf=\\\"loader.stat\\\" class=\\\"fa fa-cog fa-spin\\\" aria-hidden=\\\"true\\\"></i></a>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-xl-9 col-lg-8\\\">\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMsg\\\">{{errorMsg}}</div>\\n      <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMsg\\\">{{successMsg}}</div>\\n      <div class=\\\"formTabs alt\\\">\\n        <ngb-tabset>\\n          <ngb-tab *ngIf=\\\"display.personalInfo\\\">\\n            <ng-template ngbTabTitle><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i>\\n              {{ 'PROFILE.PERSONAL_INFO' | translate }}</ng-template>\\n            <ng-template ngbTabContent>\\n              <div *ngIf=\\\"loader.personal\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4\\\">\\n                  <div class=\\\"formTabsInpWrap\\\">\\n                    <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"country\\\" value=\\\"{{userData?.first_name}}\\\"\\n                      placeholder=\\\"Country\\\" readonly>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                  <div class=\\\"formTabsInpWrap\\\">\\n                    <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{userData?.last_name}}\\\"\\n                      placeholder=\\\"City\\\" readonly>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                  <div class=\\\"formTabsInpWrap\\\">\\n                    <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{userData?.family_name}}\\\" readonly>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"formTabsInpWrap\\\">\\n                    <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"country\\\" value=\\\"{{userData?.country?.name}}\\\"\\n                      placeholder=\\\"Country\\\" readonly>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"formTabsInpWrap\\\">\\n                    <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{userData?.city?.name}}\\\"\\n                      placeholder=\\\"City\\\" readonly>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"formTabsInpWrap\\\">\\n                <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"{{userData.address}}\\\" placeholder=\\\"Address\\\"\\n                  readonly>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"formTabsInpWrap\\\">\\n                    <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"dob\\\"\\n                      value=\\\"{{userData.dob | date: 'dd/MM/yyyy'}}\\\" placeholder=\\\"Date Of Birth\\\" readonly>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <div class=\\\"formTabsInpWrap\\\">\\n                    <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"gender\\\" value=\\\"{{userData.gender | genderName}}\\\"\\n                      placeholder=\\\"Gender\\\" readonly>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"formTabsInpWrap\\\">\\n                <input class=\\\"inpField noRadious\\\" type=\\\"email\\\" name=\\\"email\\\" value=\\\"{{userData.email}}\\\"\\n                  placeholder=\\\"Email\\\" readonly>\\n              </div>\\n\\n              <div class=\\\"formTabsInpWrap\\\">\\n                <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"phone\\\" value=\\\"{{userData.mobile_no}}\\\"\\n                  placeholder=\\\"Mobile No\\\" readonly>\\n              </div>\\n              <div class=\\\"formTabsInpWrap\\\">\\n                  <input class=\\\"inpField noRadious\\\" type=\\\"text\\\" name=\\\"phone\\\" value=\\\"{{userData.website}}\\\"\\n                    placeholder=\\\"Mobile No\\\" readonly>\\n                </div>\\n\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab *ngIf=\\\"display.education\\\" (click)=\\\"educationDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"educationDetails()\\\"><i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\n                {{ 'PROFILE.EDUCATION' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n              <div *ngIf=\\\"loader.education\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></div>\\n              <ul class=\\\"list-group\\\">\\n\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let education of allEducations\\\">\\n                  <h5>{{education?.degreeDetails?.details[0].name}}</h5>\\n\\n                  <p>{{education?.from_year}} - {{education?.to_year}}</p>\\n                  <p>{{education?.degreeFieldDetails?.details[0].name}}</p>\\n\\n\\n                </li>\\n\\n                <li *ngIf=\\\"allEducations.length == 0\\\">\\n                  <span>\\n                    {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                  </span>\\n                </li>\\n              </ul>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab *ngIf=\\\"display.skill\\\" (click)=\\\"skillDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"skillDetails()\\\"><i class=\\\"fa fa-star\\\" aria-hidden=\\\"true\\\"></i>\\n                {{ 'PROFILE.SKILLS' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n              <div *ngIf=\\\"loader.skills\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></div>\\n              <ul class=\\\"list-group\\\">\\n\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let skill of allSkills\\\">\\n                  <h5>\\n                    <h5>{{skill?.details[0].name}}</h5>\\n                  </h5>\\n                  <p *ngIf=\\\"skill?.status === 1\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_EXCELLENT\\\"|translate }}</p>\\n                  <p *ngIf=\\\"skill?.status === 2\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_VERY_GOOD\\\"|translate }}</p>\\n                  <p *ngIf=\\\"skill?.status === 3\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_GOOD\\\"|translate }}</p>\\n                  <p *ngIf=\\\"skill?.status === 4\\\">{{ \\\"PROFILEEDIT.SKILLS_STATUS_FRESH\\\"|translate }}</p>\\n\\n                </li>\\n\\n                <li *ngIf=\\\"allSkills.length == 0\\\">\\n                  <span>\\n                    {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                  </span>\\n                </li>\\n              </ul>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab *ngIf=\\\"display.experience\\\" (click)=\\\"experienceDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"experienceDetails()\\\"><i class=\\\"fa fa-suitcase\\\"\\n                  aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.EXPERIENCE' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n              <div *ngIf=\\\"loader.experience\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></div>\\n              <ul class=\\\"list-group\\\">\\n\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let experience of allExperiences\\\">\\n                  <h5>{{experience?.company_name}}</h5>\\n                  <p *ngIf=\\\"experience?.is_current === 1; else elseBlock\\\">\\n                    {{experience?.from_year}} - <span\\n                      *ngIf=\\\"experience?.is_current === 1\\\">{{ 'PROFILE.EXPERIENCE_CURRENT'| translate }}</span>\\n                  </p>\\n                  <ng-template #elseBlock>{{experience?.from_year}} - {{experience?.to_year}}</ng-template>\\n                  <p>{{experience?.position?.details[0].name}}</p>\\n                  <p>{{experience?.summery}}</p>\\n\\n\\n                </li>\\n\\n                <li *ngIf=\\\"allExperiences.length == 0\\\">\\n                  <span>\\n                    {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                  </span>\\n                </li>\\n              </ul>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab *ngIf=\\\"display.certificate\\\" (click)=\\\"certificateDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"certificateDetails()\\\"><i class=\\\"fa fa-graduation-cap\\\"\\n                  aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.CERTIFICATE' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n              <div *ngIf=\\\"loader.certificate\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></div>\\n              <ul class=\\\"list-group\\\">\\n\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let certificate of allCertificates\\\">\\n                  <h5>{{certificate.certificate_name}}</h5>\\n                  <p>From Year : {{certificate.from_year}} - {{certificate.to_year}}</p>\\n                  <p>{{certificate.summery}}</p>\\n                  <p *ngIf=\\\"certificate.picture\\\"><img [src]=\\\"( certificate.picture)| picturepath:'certificate'\\\" alt=\\\"\\\">\\n                  </p>\\n                </li>\\n\\n                <li *ngIf=\\\"allCertificates.length == 0\\\">\\n                  <span>\\n                    {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                  </span>\\n                </li>\\n              </ul>\\n            </ng-template>\\n          </ngb-tab>\\n          <ngb-tab *ngIf=\\\"display.project\\\" (click)=\\\"projectDetails()\\\">\\n            <ng-template ngbTabTitle><span (click)=\\\"projectDetails()\\\"><i class=\\\"fa fa-graduation-cap\\\"\\n                  aria-hidden=\\\"true\\\"></i> {{ 'PROFILE.PROJECT' | translate }}</span></ng-template>\\n            <ng-template ngbTabContent>\\n              <p *ngIf=\\\"loader.project\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\"></i></p>\\n              <ul class=\\\"list-group\\\">\\n\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let project of allProjects\\\">\\n                  <h5>{{project.name}}</h5>\\n                  <p>{{project.company.company_name}}</p>\\n                  <p>{{project.from_date|date}} - {{project.to_date|date}}</p>\\n\\n                </li>\\n\\n                <li *ngIf=\\\"allProjects?.length == 0\\\">\\n                  <span>\\n                    {{ \\\"PROFILEEDIT.NO_RECORD_FOUND\\\" |translate }}\\n                  </span>\\n                </li>\\n              </ul>\\n            </ng-template>\\n          </ngb-tab>\\n        </ngb-tabset>\\n      </div>\\n\\n\\n      <div class=\\\"testimonialCarousal\\\">\\n        <div class=\\\"profileMainBox\\\">\\n          <h2>{{ 'PROFILE.TESTIMONIALS' | translate }} :</h2> <span class=\\\"addTestiBtn\\\"\\n            (click)=\\\"openTestimonialForm()\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"testiCollapse\\\"><i\\n              class=\\\"fa fa-reply\\\" aria-hidden=\\\"true\\\"></i> {{'TESTIMONIALS.ADD_TESTIMONY' | translate }}</span>\\n          <form [formGroup]=\\\"testimonialForm\\\" novalidate (submit)=\\\"testimonialAction()\\\">\\n            <div style=\\\"margin-top:25px;\\\" class=\\\"msg-wrp\\\">\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n              <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">{{successMessage}}</div>\\n            </div>\\n            <div id=\\\"testiCollapse\\\" class=\\\"testiCollapse\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\n              <div class=\\\"testiClose\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"></div>\\n              <textarea name=\\\"message\\\" placeholder=\\\"Lorem ipsum dolor\\\" formControlName=\\\"message\\\"></textarea>\\n              <div\\n                *ngIf=\\\"testimonialForm.controls['message'].invalid && (testimonialForm.controls['message'].dirty || testimonialForm.controls['message'].touched)\\\"\\n                class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"testimonialForm.controls['message'].errors.required\\\">\\n                  {{ 'TESTIMONIALS.ADD_ERROR'| translate}}</div>\\n              </div>\\n              <div class=\\\"testiCollapseFooter\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-6\\\">\\n                    <span class=\\\"tooltipYellow\\\" placement=\\\"left\\\"\\n                      ngbTooltip=\\\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy \\\"><i\\n                        class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i></span>\\n                    <label class=\\\"customCheck\\\"> {{'TESTIMONIALS.ANONYMOUS' | translate }}\\n                      <input checked=\\\"checked\\\" type=\\\"checkbox\\\" name=\\\"anonymous\\\" id=\\\"anonymous\\\" value=\\\"1\\\"\\n                        formControlName=\\\"anonymous\\\"><span class=\\\"checkmark\\\"></span>\\n                    </label>\\n                  </div>\\n                  <div class=\\\"col-6\\\">\\n                    <div class=\\\"text-right\\\">\\n\\n                      <button type=\\\"submit\\\"\\n                        [disabled]=\\\"testimonialForm.pristine || testimonialForm.invalid || (testimonialForm.valid && testimonailFormSubmitStatus)\\\">{{'TESTIMONIALS.SEND' | translate }}\\n                        <i class=\\\"fa fa-paper-plane\\\" aria-hidden=\\\"true\\\"></i> </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n          <div *ngIf=\\\"allTestimonials?.length > 0 \\\">\\n            <owl-carousel [options]=\\\"testimonialCaro\\\" [items]=\\\"allTestimonials\\\"\\n              [carouselClasses]=\\\"['owl-theme', 'sliding']\\\">\\n\\n              <div class=\\\"item\\\" *ngFor=\\\"let testimonial of allTestimonials\\\">\\n                <div class=\\\"testimonialHead\\\">\\n                  <div class=\\\"testimonialHeadLeft\\\" >\\n                      <img *ngIf=\\\"testimonial.is_anonymous != 1 && testimonial.fromuser.profile_pic\\\"\\n                      [src]=\\\"testimonial.fromuser.profile_pic| picturepath:'users'\\\" alt=\\\"\\\">\\n                    <img class=\\\"no-pro-pic\\\" *ngIf=\\\"testimonial.is_anonymous != 1 && !testimonial.fromuser.profile_pic && testimonial.fromuser.gender=='F'\\\" src=\\\"assets/images/female.jpg\\\" alt=\\\"\\\">\\n                    <img class=\\\"no-pro-pic\\\" *ngIf=\\\"testimonial.is_anonymous != 1 && !testimonial.fromuser.profile_pic && testimonial.fromuser.gender=='M'\\\" src=\\\"assets/images/male.jpg\\\" alt=\\\"\\\">\\n                    <img class=\\\"no-pro-pic\\\" *ngIf=\\\"testimonial.is_anonymous == 1\\\" src=\\\"assets/images/testimonial_no_img.jpg\\\" alt=\\\"\\\">\\n\\n                  </div>\\n                  \\n                  <div class=\\\"testimonialHeadRight\\\">\\n                    <div *ngIf=\\\"testimonial.is_anonymous == 0\\\">\\n                      <h3>{{(testimonial.fromuser.first_name+' '+testimonial.fromuser.last_name)}}</h3>\\n                      <h4 *ngIf=\\\"testimonial.fromuser.position\\\">{{testimonial.fromuser.position.details[0].name}}</h4>\\n                    </div>\\n                    <div *ngIf=\\\"testimonial.is_anonymous == 1\\\">\\n                      <h3>{{ 'TESTIMONIALS.ANONYMOUS'|translate }}</h3>\\n                    </div>\\n                  </div>\\n                </div>\\n                <p>{{testimonial.message}}</p>\\n              </div>\\n\\n            </owl-carousel>\\n          </div>\\n\\n          <div *ngIf=\\\"allTestimonials?.length == 0\\\" style=\\\"margin-top:25px;\\\">\\n            <span>\\n              {{ \\\"TESTIMONIALS.NO_RECORD_FOUND\\\" |translate }}\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"managerLink alt\\\">\\n        <div class=\\\"profileMainBox\\\" *ngIf=\\\"activeUserId\\\">\\n          <h2 class=\\\"rowDiv\\\">\\n          <span class=\\\"manager-text\\\">{{ 'PROFILE.CAREERY_MANAGER' |translate }} </span>\\n          <span (click)=\\\"openCareeryManagerModal()\\\" class=\\\"icon\\\"></span>\\n          </h2>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-blocksmodal></app-blocksmodal>\\n<!-- USER POINT MODAL -->\\n<ng-template #pointsModal let-modal id=\\\"modalPopup\\\">\\n  <h2><span>{{ 'PROFILE.POINTS' |translate }}</span></h2>\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body\\\">\\n    <div id=\\\"pointContents\\\" class=\\\"graphModal\\\">\\n      <div class=\\\"user-details\\\">\\n        <ul>\\n          <li><small>{{ 'PROFILE.NAME' |translate }}</small>\\n            <span>{{ (userData.first_name+' '+userData.last_name) }}</span></li>\\n          <li><small>{{ 'PROFILE.CPP' |translate }}</small> <span>{{ (userData.cpp) }}</span></li>\\n        </ul>\\n      </div>\\n      <canvas *ngIf=\\\"pieChartData.length > 0\\\" baseChart id=\\\"pointCanvas\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [colors]=\\\"pieChartColors\\\"\\n        [chartType]=\\\"pieChartType\\\" [options]=\\\"pieOptions\\\"></canvas>\\n        <div class=\\\"no-record-msg\\\" *ngIf=\\\"pieChartData.length == 0\\\">{{ 'COMMON.NO_USER_POINTS' | translate }}</div>\\n    </div>\\n    <div class=\\\"chart-actions\\\" *ngIf=\\\"pieChartData.length > 0\\\">\\n      <ul ngbDropdown>\\n        <li><a (click)=\\\"downloadCanvas($event)\\\" id=\\\"downloadChartLink\\\"><i class=\\\"fa fa-floppy-o\\\"></i></a></li>\\n        <li><a (click)=\\\"printChart()\\\"><i class=\\\"fa fa-print\\\"></i></a></li>\\n        <li id=\\\"dropdownBasic3\\\" ngbDropdownToggle><a><i class=\\\"fa fa-share-alt\\\" aria-hidden=\\\"true\\\"></i></a></li>\\n        <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic3\\\">\\n          <ul>\\n            <li>\\n              <share-button button=\\\"facebook\\\" [url]=\\\"baseOrigin+'/user/chart/'+userData.cpp\\\"></share-button> <span>Facebook</span>\\n            </li>\\n            <li>\\n              <share-button button=\\\"twitter\\\" [url]=\\\"baseOrigin+'/user/chart/'+userData.cpp\\\"></share-button> <span>Twitter</span>\\n            </li>\\n            <li>\\n              <share-button button=\\\"whatsapp\\\" [url]=\\\"baseOrigin+'/user/chart/'+ userData.cpp\\\"></share-button> <span>WhatsApp</span>\\n            </li>\\n            <!-- <li><a href=\\\"#\\\"><i class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></i></a> <span>Copy Link</span></li> -->\\n          </ul>\\n        </div>\\n      </ul>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<!-- send message modal-->\\n<ng-template #messageSendModal let-modal id=\\\"messageModalPopup\\\">\\n  <h2><span>{{ 'PROFILE.SEND_MESSAGE' |translate }}</span></h2>\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"messageSuccessMsg\\\">{{ messageSuccessMsg }}</div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"messageErrorMsg\\\">{{ messageErrorMsg }}</div>\\n    <div class=\\\"proEdit\\\">\\n      <div class=\\\"formWrap alt\\\">\\n        <textarea class=\\\"inpField fullWidth\\\" [(ngModel)]=\\\"messageForm.message\\\"\\n          placeholder=\\\"{{ 'PROFILE.MESSAGE' |translate }}\\\"></textarea>\\n      </div>\\n      <div class=\\\"buttonGr\\\">\\n        <div class=\\\"text-center\\\">\\n          <button type=\\\"button\\\" class=\\\"btnOrange\\\" name=\\\"button\\\" (click)=submitSendMessageFrom()>\\n            <i class=\\\"fa fa-cog fa-spin\\\" *ngIf=\\\"loader.messageSend\\\"></i> {{ 'PROFILE.SEND' | translate }}\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n\\n\\n<ng-template #careeryPathModal let-modal id=\\\"careeryPathModal\\\">\\n  <!-- <h2><span>{{ 'PROFILE.POINTS' |translate }}</span></h2> -->\\n  <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n  <div class=\\\"modal-body noPad\\\">\\n    <div style=\\\"\\\" class=\\\"profileDesc\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 col-xs-12\\\"><a class=\\\"modBtn\\\" [routerLink]=\\\"['/cv/build']\\\">{{ 'PROFILE.CV_BUILDER_LINK' | translate }}</a></div>\\n        <div class=\\\"col-md-6 col-xs-12\\\"><a class=\\\"modBtn\\\" [routerLink]=\\\"['/card/build']\\\">{{ 'PROFILE.CARD_BUILDER_LINK' | translate }}</a></div>\\n        <div class=\\\"col-md-6 col-xs-12\\\"><a class=\\\"modBtn\\\" [routerLink]=\\\"['/profile/edit']\\\">{{ 'PROFILE.EDIT_PROF_LINK' | translate }}</a></div>\\n      </div>\\n      \\n      \\n      \\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #careeryMyVideoModal let-modal id=\\\"careeryPathModal\\\">\\n    <!-- <h2><span>{{ 'PROFILE.POINTS' |translate }}</span></h2> -->\\n    <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n    <div class=\\\"modal-body noPad text-center\\\">\\n        <iframe *ngIf=\\\"profile_video_link\\\" width=\\\"560\\\" height=\\\"315\\\" [src]=\\\"profile_video_link\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n    </div>\\n  </ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHVibGljcHJvZmlsZS9wdWJsaWNwcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 04-02-2019\n# Module                : PublicprofileComponent                     \n# Object name           : PublicprofileComponent    \n# Functionality         : public user profile details\n# Purpose               : constructor, ngOnInit, checkDisplayMode, testimonialAction, educationDetails, skillDetails, experienceDetails, certificateDetails\n*******************************************************/\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport * as global from '../../globalConfig';\nimport { TestimonialService } from '../../services/testimonial.service';\nimport { UsersService } from '../../services/users.service';\nimport { CommonService } from '../../services/common.service';\nimport { CvcardService } from '../../services/cvcard.service';\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\nimport { BlocksmodalComponent } from '../../global/blocksmodal/blocksmodal.component';\nimport { PicturepathPipe } from \"../../global/picturepath.pipe\";\nimport * as CryptoJS from 'crypto-js';\nimport swal from 'sweetalert';\nimport { LoaderService } from '../../loader/loader.service';\nimport { OwlCarousel } from 'ngx-owl-carousel';\n@Component({\n\tselector: 'app-publicprofile',\n\ttemplateUrl: './publicprofile.component.html',\n\tstyleUrls: ['./publicprofile.component.scss'],\n\tproviders: [PicturepathPipe]\n})\nexport class PublicprofileComponent implements OnInit {\n\t@ViewChild(BlocksmodalComponent) blockModal: BlocksmodalComponent; // block component obj\n\t@ViewChild('pointsModal') pointsModal; // point modal reference\n\t@ViewChild('careeryPathModal') careeryPathModal; // careery path reference\n\t@ViewChild('careeryMyVideoModal') careeryMyVideoModal; // careery path reference\n\t@ViewChild('cardOwl') cardOwl: OwlCarousel;\n\tpieChartLabels: Array<any> = [];\n\tpieChartData: Array<any> = [];\n\tpieChartColors: Array<any> = [];\n\tpieOptions: any = null;\n\tpieChartType: string = 'pie'; // points chart type\n\ttestimonialForm: FormGroup; // set testimonial form\n\ttestimonailFormSubmitStatus: boolean = false;\n\terrorMessage: string = \"\"; //set error message\n\tsuccessMessage: string; // set success message\n\tcurrentDate: any = new Date(); // set current date\n\tactiveUserId: string = ''; // set active user id\n\tuserId: any = null; // set user id\n\tuserCPP: string; // set user cpp\n\tuserData: any = {}; // set user data\n\tprofilePic: string = ''; // set profile pic\n\tconnection_count: any = null; // connection count\n\tpoints: any = null; // user points \n\trank: any = null; // get user rank\n\trecommendations: any = null; // user recommendations count\n\tuserPrivicySettings: Array<any> = []; // set user privicy settings\n\tallEducations: Array<any> = []; // all user education data\n\tallSkills: Array<any> = []; // all user skills data\n\tallExperiences: Array<any> = []; // all user experience data\n\tallCertificates: Array<any> = []; // all user certificate data\n\tallProjects: Array<any> = []; // all projects data\n\timagePath = global.s3URL + 'userspic/'; // set image path\n\n\terrorMsg: string = \"\"; // set error message \n\tsuccessMsg: string; // set success message\n\n\tanonymous: boolean; // set anouymous  data\n\tis_anonymous: any = null; // check anouymous\n\tcurrentDay: any = new Date(); // set current date\n\n\tallTestimonials: any[]; // get all testimonials \n\timages: any = null;  // set images\n\tsiteSettings: any = null;\n\tpublic profile_video_link:any = ''; \n\tdisplay: any = { // display settings\n\t\t\"block\": true,\n\t\t\"personalInfo\": true,\n\t\t\"education\": true,\n\t\t\"skill\": true,\n\t\t\"experience\": true,\n\t\t\"certificate\": true,\n\t\t\"project\": true,\n\t\t\"cv\": true,\n\t\t\"card\": true\n\t}\n\tloader: any = { // set loaders\n\t\t'personal': false,\n\t\t'education': false,\n\t\t'skills': false,\n\t\t'experience': false,\n\t\t'certificate': false,\n\t\t\"stat\": false,\n\t\t\"messageSend\": false,\n\t\t\"card\": false\n\t};\n\n\tmessageForm: any = {\n\t\t\"id\": null,\n\t\t\"message\": \"\"\n\t}\n\tmessageErrorMsg: string = \"\";\n\tmessageSuccessMsg: string = \"\";\n\tuserCardList: Array<any> = [];\n\tmySlideOptions = { items: 1, dots: false, nav: true }; // slider settings\n\ttestimonialCaro = { items: 1, dots: true, nav: true }; // set testimonial slider settings \n\tpublic isCollapsed = true; // check is collapsed\n\tbaseOrigin: any = null;\n\tqrCodeUrl:any = document.location.origin ;\n\t/* Function Name : constructor\n\t  * Author : \n\t  * Created Date : 04-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to define the all helpful objects and define the languages data\n\t  * PARAMS : route, authService, fb, testimonialService, usersService, translate, cService\n\t  */\n\tconstructor(\n\t\tprivate route: Router,\n\t\tprivate activeRoute: ActivatedRoute,\n\t\tprivate fb: FormBuilder,\n\t\tpublic testimonialService: TestimonialService,\n\t\tpublic usersService: UsersService,\n\t\tprivate translate: TranslateService,\n\t\tprivate cService: CommonService,\n\t\tprivate modalService: NgbModal,\n\t\tprivate filePathPipe: PicturepathPipe,\n\t\tprivate cvCardService: CvcardService,\n\t\tprivate sanitizer: DomSanitizer,\n\t\tprivate loderService: LoaderService\n\t) {\n\n\n\t\tthis.cService.activelang.subscribe((lang) => {\n\n\t\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\t\ttranslate.setDefaultLang(lang);\n\n\t\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\t\ttranslate.use(lang);\n\t\t});\n\n\t\tthis.createTestimonialForm();\n\t\tlet loggedUserData = this.cService.getLoggedUserData();\n\t\tif (loggedUserData) {\n\t\t\tthis.activeUserId = loggedUserData._i;\n\t\t}\n\n\n\t}\n\t/* Function Name : checkDisplayMode\n\t  * Author : \n\t  * Created Date : 04-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to check block privacy \n\t  * PARAMS : blockName\n\t  */\n\tcheckDisplayMode(blockName) {\n\t\tlet loggedInUser = this.cService.getLoggedUserData();\n\t\tlet option = this.userPrivicySettings.find((e) => {\n\t\t\treturn e.option == blockName;\n\t\t});\n\t\tif (option === undefined) {\n\t\t\treturn true;\n\t\t}\n\t\tif (option && option.option === 'view-my-profile' && option.show_status == 0) {\n\t\t\tthis.route.navigate([\"access-deny\"]);\n\t\t}\n\t\tif (!loggedInUser && option && option.option === 'guest-view-my-profile' && option.show_status == 0) {\n\t\t\tthis.route.navigate([\"access-deny\"]);\n\t\t}\n\t\tif (option && (option.settings === 'public' || option.settings === '')) {\n\t\t\treturn true;\n\t\t}\n\t\tif (option && option.settings === 'only-for-me' && loggedInUser && loggedInUser._i == this.userData.id) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (option && option.settings === 'my-connections' && loggedInUser && this.userData.connectionExist == 1) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (option && option.settings === 'specific' && loggedInUser) {\n\t\t\tlet specificUser = option.specific_users;\n\t\t\tif (specificUser) {\n\t\t\t\tlet specificUsers = JSON.parse(specificUser);\n\t\t\t\tlet checkUser = specificUsers.find((item) => {\n\t\t\t\t\treturn item.id == loggedInUser._i;\n\t\t\t\t});\n\t\t\t\tif (checkUser) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\t/* Function Name : ngOnInit\n\t  * Author : \n\t  * Created Date : 04-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to get data after html load\n\t  * PARAMS : \n\t  */\n\tngOnInit() {\n\t\tthis.baseOrigin = window.location.origin;\n\t\tlocalStorage.setItem('_sp', 'profile_user');\n\t\tthis.loader.personal = true;\n\t\tthis.activeRoute.params.subscribe((params) => {\n\t\t\tthis.usersService.userDetailsByCPP(params.userCPP).subscribe((response: any) => {\n\t\t\t\tthis.userCPP = params.userCPP;\n\t\t\t\tif (response.statustext == 'success') {\n\t\t\t\t\tthis.userData = response.data;\n\t\t\t\t\tif (response['data'].video_link) {\n\t\t\t\t\tlet videoUrl = this.cService.getYoutubeEmbedUrl(response['data'].video_link);\n\t\t\t\t\tthis.profile_video_link = (response['data'].video_link)? this.sanitizer.bypassSecurityTrustResourceUrl(videoUrl): '';\n\t\t\t\t\t}\n\t\t\t\t\tif (this.userData.id) {\n\t\t\t\t\t\tthis.userPrivicySettings = this.userData.settings;\n\t\t\t\t\t\tthis.siteSettings =  this.userData.site_settings.user_point_tooltip_text;\n\t\t\t\t\t\t// console.log(this.userPrivicySettings);\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t//*****///\n\n\t\t\t\t\t\tthis.display.personalInfo = this.checkDisplayMode('see-personal-info-tab');\n\t\t\t\t\t\tthis.display.education = this.checkDisplayMode('see-education-tab');\n\t\t\t\t\t\tthis.display.skill = this.checkDisplayMode('see-skill-tab');\n\t\t\t\t\t\tthis.display.experience = this.checkDisplayMode('see-experience-tab');\n\t\t\t\t\t\tthis.display.certificate = this.checkDisplayMode('see-certificates-tab');\n\t\t\t\t\t\tthis.display.project = this.checkDisplayMode('see-project-tab');\n\t\t\t\t\t\tthis.display.cv = this.checkDisplayMode('download-cv');\n\t\t\t\t\t\tthis.display.card = this.checkDisplayMode('download-business-card');\n\t\t\t\t\t\tif (this.display.education) {\n\t\t\t\t\t\t\tthis.educationDetails();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.display.experience) {\n\t\t\t\t\t\t\tthis.experienceDetails();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.display.skill) {\n\t\t\t\t\t\t\tthis.skillDetails();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.display.certificate) {\n\t\t\t\t\t\t\tthis.certificateDetails();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.display.project) {\n\t\t\t\t\t\t\tthis.projectDetails();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.getTestimonials();\n\t\t\t\t\t\tthis.statDetails();\n\n\t\t\t\t\t\tif (this.userData.profile_pic) {\n\t\t\t\t\t\t\tthis.profilePic = global.s3URL + 'userspic/' + this.userData.profile_pic;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.usersService.updateProfileViewer({\n\t\t\t\t\t\t\t\"_ru\": btoa(this.userData.id)\n\t\t\t\t\t\t}).subscribe((response) => { });\n\n\t\t\t\t\t\tif (localStorage.getItem(\"_user\")) { // get loggedin user details\n\t\t\t\t\t\t\tthis.getLoggedUserDetails();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.route.navigate([\"access-deny\"]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.route.navigate([\"access-deny\"]);\n\t\t\t\t}\n\t\t\t\tthis.loader.personal = false;\n\t\t\t\tthis.getUserCardList();\n\t\t\t\tif (localStorage.getItem(\"_user\")) { // is loggedin\n\t\t\t\t\tthis.cService.emitNotification(this.userData.cpp, 'PS');\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\n\n\t\tthis.blockModal.closeBlock.subscribe((res) => {\n\t\t\tif (res == 'unblock') {\n\t\t\t\tthis.display.block = true;\n\t\t\t}\n\t\t\tthis.getLoggedUserDetails();\n\t\t});\n\n\t}\n\n\t/* Function Name : statDetails\n\t  * Author : \n\t  * Created Date : 05-03-2019 \n\t  * Modified Date : *\n\t  * Purpose : to get user  stat details\n\t  * PARAMS : \n\t  */\n\tstatDetails() {\n\t\tthis.loader.stat = true;\n\t\tlet postData = {\n\t\t\tid: btoa(this.userData.id)\n\t\t}\n\t\tthis.usersService.userStatDetails(postData).subscribe((response: any) => {\n\t\t\tthis.loader.stat = false;\n\t\t\tif (response.statustext == 'success') {\n\t\t\t\tthis.connection_count = response.data.connection_count;\n\t\t\t\tthis.points = response.data.points;\n\t\t\t\tthis.recommendations = response.data.recommendations;\n\t\t\t\tthis.rank = response.data.rank;\n\t\t\t}\n\t\t})\n\t}\n\n\n\t/* Function Name : getLoggedUserDetails\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get the loggedin user data\n\t* PARAMS :  \n\t*/\n\tgetLoggedUserDetails() {\n\t\tthis.usersService.userDetails().subscribe((response: any) => {\n\t\t\tlet blockUsers = response.data.blocksIds;\n\t\t\tif (blockUsers.blocks_ids) {\n\t\t\t\tlet blockIds = blockUsers.blocks_ids.split(\",\");\n\t\t\t\tif (blockIds.indexOf(this.userData.id.toString()) > -1) {\n\t\t\t\t\tthis.display.block = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.display.block = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\t/* Function Name : createTestimonialForm\n\t  * Author : \n\t  * Created Date : 04-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to create the testimonial form\n\t  * PARAMS : \n\t  */\n\tcreateTestimonialForm() {\n\t\tthis.testimonialForm = this.fb.group({\n\t\t\tid: [],\n\t\t\tmessage: ['', [Validators.required]],\n\t\t\tanonymous: ['']\n\t\t});\n\t}\n\n\n\t/* Function Name : testimonialAction\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to submit testimonial formm\n\t* PARAMS :\n\t*/\n\ttestimonialAction() {\n\t\t\n\t\tlet formPostData = {\n\t\t\t\"to_user_id\": this.userData.id,\n\t\t\t\"message\": this.testimonialForm.value.message,\n\t\t\t\"is_anonymous\": Number(this.testimonialForm.value.anonymous),\n\t\t\t\"post_on\": this.currentDate\n\n\t\t};\n\t\tthis.testimonailFormSubmitStatus = true;\n\t\tthis.testimonialService.addTestimonial(formPostData).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success') && (response['status'] == 200)) {\n\t\t\t\tthis.cService.emitNotification(this.userData.cpp, 'T');\n\t\t\t\tthis.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n\t\t\t\t\tswal({\n\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\ttext: response['message'],\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tthis.translate.get('COMMON.ERROR').subscribe((tData) => {\n\t\t\t\t\tswal({\n\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\ttext: response['message'],\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.testimonailFormSubmitStatus = false;\n\t\t\tthis.testimonialForm.reset();\n\t\t\tthis.isCollapsed = true;\n\t\t});\n\t}\n\n\t/* Function Name : educationDetails\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get education details\n\t* PARAMS : \n\t*/\n\teducationDetails() {\n\t\tthis.loader.education = true;\n\t\tlet type = 'education';\n\t\tlet cpp = this.userData.cpp;\n\t\tthis.usersService.userDetailsByCppType(cpp, type).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tlet count = response['data']['degree'].length;\n\t\t\t\tif (count >= 1) {\n\t\t\t\t\tthis.allEducations = response['data']['degree'];\n\t\t\t\t} else {\n\t\t\t\t\tthis.allEducations = [];\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis.loader.education = false;\n\t\t});\n\t}\n\n\t/* Function Name : skillDetails\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get skill details\n\t* PARAMS : \n\t*/\n\tskillDetails() {\n\t\tthis.loader.skills = true;\n\t\tlet type = 'skills';\n\t\tlet cpp = this.userData.cpp;\n\t\tthis.usersService.userDetailsByCppType(cpp, type).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tlet count = response['data']['skills'].length;\n\t\t\t\tif (count >= 1) {\n\t\t\t\t\tthis.allSkills = response['data']['skills'];\n\t\t\t\t} else {\n\t\t\t\t\tthis.allSkills = [];\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis.loader.skills = false;\n\t\t});\n\t}\n\n\t/* Function Name : experienceDetails\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get experience details\n\t* PARAMS :  \n\t*/\n\texperienceDetails() {\n\t\tthis.loader.experience = true;\n\t\tlet type = 'experience';\n\t\tlet cpp = this.userData.cpp;\n\t\tthis.usersService.userDetailsByCppType(cpp, type).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tlet count = response['data']['experience'].length;\n\t\t\t\tif (count >= 1) {\n\t\t\t\t\tthis.allExperiences = response['data']['experience'];\n\t\t\t\t} else {\n\t\t\t\t\tthis.allExperiences = [];\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis.loader.experience = false;\n\t\t});\n\t}\n\n\t/* Function Name : certificateDetails\n\t* Author : \n\t* Created Date : 05-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get certificate details\n\t* PARAMS : \n\t*/\n\tcertificateDetails() {\n\t\tthis.loader.certificate = true;\n\t\tlet type = 'certificate';\n\t\tlet cpp = this.userData.cpp;\n\t\tthis.usersService.userDetailsByCppType(cpp, type).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tthis.allCertificates = response['data']['certificates'];\n\t\t\t}\n\t\t\tthis.loader.certificate = false;\n\t\t});\n\t}\n\n\t/* Function Name : projectDetails\n  * Author : \n  * Created Date : 14-03-2019 \n  * Modified Date : *\n  * Purpose : to get user project detaills\n  * PARAMS : \n  */\n\tprojectDetails() {\n\t\tlet type = 'project';\n\t\tthis.loader.project = true;\n\t\tlet cpp = this.userData.cpp;\n\t\tthis.usersService.userDetailsByCppType(cpp, type).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tthis.allProjects = response['data']['projects'];\n\t\t\t} else {\n\t\t\t\tconsole.log('error in certificate details');\n\t\t\t}\n\t\t\tthis.loader.project = false;\n\t\t});\n\t}\n\n\t/* Function Name : openBlock\n\t  * Author : \n\t  * Created Date : 04-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : open block modal\n\t  * PARAMS : \n\t  */\n\topenBlock() {\n\t\tthis.blockModal.openBlockReasonModal(this.userData.id);\n\t}\n\t/* Function Name : unblock\n\t  * Author : \n\t  * Created Date : 04-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to unblock a user\n\t  * PARAMS : \n\t  */\n\tunblock() {\n\t\tthis.blockModal.unblockUser(this.userData.id);\n\t}\n\n\t/* Function Name : getTestimonials\n\t* Author : \n\t* Created Date : 25-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get user specfic testimonial details\n\t* PARAMS : \n\t*/\n\tgetTestimonials() {\n\n\t\tlet formPostData = {\n\t\t\t\"id\": btoa(this.userData.id)\n\t\t};\n\t\t// console.log(formPostData);\n\t\tthis.testimonialService.publicTestimonial(formPostData).subscribe((response: any) => {\n\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\tthis.allTestimonials = response.data;\n\t\t\t}\n\n\t\t});\n\n\t}\n\n\n\t/* Function Name : recommendationSend\n\t* Author : \n\t* Created Date : 27-02-2019 \n\t* Modified Date : *\n\t* Purpose : to send recommendation\n\t* PARAMS : id, userData, formPostData\n\t*/\n\n\trecommendationSend() {\n\t\tif (btoa(this.userData.id) != localStorage.getItem('_u')) {\n\t\t\tlet formPostData = {\n\t\t\t\t\"id\": btoa(this.userData.id)\n\t\t\t};\n\t\t\tthis.usersService.recommendationSends(formPostData).subscribe((response: any) => {\n\t\t\t\tif ((response['statustext'] === 'success')) {\n\t\t\t\t\tthis.cService.emitNotification(this.userData.cpp, 'R');\n\t\t\t\t\tthis.successMsg = response.message;\n\t\t\t\t\tthis.userData.recommendations += 1;\n\t\t\t\t\tthis.statDetails();\n\t\t\t\t\tthis.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\t\ttext: response['message'],\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.translate.get('COMMON.ERROR').subscribe((tData) => {\n\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\t\ttext: response['message'],\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t}\n\n\t/* Function Name : openPointModal\n\t  * Author : \n\t  * Created Date : 26-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to open points modal \n\t  * PARAMS : \n\t  */\n\topenPointModal(pointModal: any) {\n\t\tthis.pieChartLabels = [];\n\t\tthis.pieChartData = [];\n\t\tthis.pieChartColors = [\n\t\t\t{\n\t\t\t\tbackgroundColor: ['#26bfb5', '#5bc78c', '#fc9772', '#ff4a5f', '#adc72a'],\n\t\t\t}\n\t\t];\n\t\tthis.usersService.getUserPoints(btoa(this.userData.id))\n\t\t\t.subscribe((responseData: any) => {\n\t\t\t\tif (responseData.data) {\n\t\t\t\t\tthis.pieOptions = {\n\t\t\t\t\t\tpieceLabel: {\n\t\t\t\t\t\t\trender: function (args) {\n\t\t\t\t\t\t\t\tconst label = args.label,\n\t\t\t\t\t\t\t\t\tvalue = args.value;\n\t\t\t\t\t\t\t\treturn value + ' points';\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfontColor: '#FFFFFF',\n\t\t\t\t\t\t\tfontSize: 13,\n\t\t\t\t\t\t\tfontStyle: 'bold'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlegend: { position: 'right' },\n\t\t\t\t\t\telements: {\n\t\t\t\t\t\t\tarc: {\n\t\t\t\t\t\t\t\tborderWidth: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tresponseData.data.forEach(element => {\n\t\t\t\t\t\tthis.pieChartLabels.push(element.point_name);\n\t\t\t\t\t\tthis.pieChartData.push(element.total_point);\n\n\t\t\t\t\t});\n\t\t\t\t\tthis.modalService.open(pointModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\t/* Function Name : printChart\n\t  * Author : \n\t  * Created Date : 26-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to print point chart\n\t  * PARAMS : \n\t  */\n\tprintChart() {\n\t\twindow.print();\n\t}\n\t/* Function Name : downloadCanvas\n\t  * Author : \n\t  * Created Date : 26-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to download teh chart image\n\t  * PARAMS : \n\t  */\n\tdownloadCanvas(event) {\n\n\t\tvar anchor = document.getElementById('downloadChartLink');\n\t\tlet canvas:any = document.getElementById('pointCanvas');\n\t\tvar img = new Image();\n\t\timg.src = canvas.toDataURL();\n\t\tvar context = canvas.getContext('2d');\n\t\tcontext.drawImage(img, 0, 0, 200, 200);\n\t\tvar dataUrl = canvas.toDataURL('image/jpeg', 1);\n\t\tanchor['href'] = dataUrl;\n\t\tanchor['download'] = \"chart.jpg\";\n\t}\n\n\t/* Function Name : connectionSend\n\t* Author : \n\t* Created Date : 05-03-2019 \n\t* Modified Date : *\n\t* Purpose : to send connection request\n\t* PARAMS :\n\t*/\n\tconnectionSend(toId) {\n\t\tthis.loader.mayContact = true;\n\t\tthis.usersService.connectionRequestSend(toId)\n\t\t\t.subscribe((responseData: any) => {\n\t\t\t\tthis.loader.mayContact = false;\n\t\t\t\tif (responseData.statustext == 'success') {\n\t\t\t\t\tthis.cService.emitNotification(this.userData.cpp, 'CS');\n\t\t\t\t\tthis.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\t\ttext: responseData['message'],\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else if (responseData.statustext == 'error') {\n\t\t\t\t\tthis.translate.get('COMMON.ERROR').subscribe((tData) => {\n\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\t\ttext: responseData['message'],\n\t\t\t\t\t\t\ticon: 'error'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/* Function Name : openSendMessageModal\n\t* Author : \n\t* Created Date : 13-03-2019 \n\t* Modified Date : *\n\t* Purpose : to open send message modal\n\t* PARAMS :\n\t*/\n\topenSendMessageModal(modal) {\n\t\tthis.modalService.open(modal, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n\t}\n\n\t/* Function Name : submitSendMessageFrom\n\t* Author : \n\t* Created Date : 13-03-2019 \n\t* Modified Date : *\n\t* Purpose : to send message  to a user\n\t* PARAMS :\n\t*/\n\tsubmitSendMessageFrom() {\n\t\tif (this.messageForm.message) {\n\t\t\tthis.loader.messageSend = true;\n\t\t\tthis.messageForm.id = btoa(this.userData.id);\n\t\t\tthis.usersService.sendMessage(this.messageForm)\n\t\t\t\t.subscribe((responsData: any) => {\n\t\t\t\t\tif (responsData.statustext === 'success') {\n\t\t\t\t\t\tthis.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n\t\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\t\ttitle: tData,\n\t\t\t\t\t\t\t\ttext: responsData['message'],\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t}).then(()=>{\n\t\t\t\t\t\t\t\tthis.modalService.dismissAll();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.loader.messageSend = false;\n\t\t\t\t\t\tthis.messageForm.id = null;\n\t\t\t\t\t\tthis.messageForm.message = null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t});\n\n\t\t} else {\n\t\t\tthis.translate.get('PROFILE.MESSAGE_REQUIRED').subscribe((tData) => {\n\t\t\t\tthis.messageErrorMsg = tData;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.messageErrorMsg = '';\n\t\t\t\t}, 3000)\n\t\t\t});\n\t\t}\n\t}\n\t/* Function Name : openCareeryManagerModal\n\t* Author : \n\t* Created Date : 03-04-2019 \n\t* Modified Date : *\n\t* Purpose : to open career path modal\n\t* PARAMS :\n\t*/\n\topenCareeryManagerModal() {\n\t\tthis.modalService.open(this.careeryPathModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' })\n\n\t}\n\n\n\n\tgotToCard(card) {\n\t\tlet loggedInUser = this.cService.getLoggedUserData();\n\t\tif (loggedInUser && card.user_id != loggedInUser._i) {\n\t\t\tthis.usersService.sendNotification({\n\t\t\t\t\"id\": btoa(card.user_id),\n\t\t\t\t\"type\": \"DCA\"\n\t\t\t}).subscribe((responseData) => { });\n\t\t}\n\n\t\tlet cardPath = this.filePathPipe.transform(card.file, 'card');\n\t\tvar win = window.open(cardPath, '_blank');\n\t\twin.focus();\n\t}\n\n\tgetUserCardList() {\n\t\tthis.loader.card = true;\n\t\tthis.cvCardService.getCardList({\n\t\t\tid: btoa(this.userData.id),\n\t\t\t\"only_default\":1\n\t\t}).subscribe((responseData: any) => {\n\t\t\tif (responseData.statustext == 'success') {\n\t\t\t\tlet cardList = responseData.data.list;\n\t\t\t\tthis.userCardList = [];\n\t\t\t\tif (cardList.length > 0) {\n\t\t\t\t\tthis.userCardList = cardList.map((item) => {\n\t\t\t\t\t\tlet details = null;\n\t\t\t\t\t\tif (item.card_details) {\n\t\t\t\t\t\t\tdetails = JSON.parse(item.card_details);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\t\tuser_id: item.user_id,\n\t\t\t\t\t\t\tdetails: details,\n\t\t\t\t\t\t\tfile: item.card_file\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis.cardOwl.reInit();\n\t\t\t\tthis.loader.card = false;\n\t\t\t}\n\t\t});\n\t}\n\n\topenTestimonialForm() {\n\t\tif (localStorage.getItem(\"_user\")) {\n\t\t\tthis.isCollapsed = (this.isCollapsed)?false:true; \n\t\t\tif (this.isCollapsed == false) {\n\t\t\t\tthis.testimonailFormSubmitStatus = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.translate.get(['COMMON.ERROR', 'COMMON.TESTIMONIAL_AUTH_ERROR']).subscribe((tData) => {\n\t\t\t\tswal({\n\t\t\t\t\ttitle: tData['COMMON.ERROR'],\n\t\t\t\t\ttext: tData['COMMON.TESTIMONIAL_AUTH_ERROR'],\n\t\t\t\t\ticon: 'error'\n\t\t\t\t}).then(()=>{\n\t\t\t\t\tthis.route.navigate(['/']);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t/* Function Name : copyLink\n\t* Author : \n\t* Created Date : 23-07-2019 \n\t* Modified Date : *\n\t* Purpose : to copy profile link\n\t* PARAMS : \n\t*/\n\tcopyLink () {\n\t\tlet copyText = document.createElement('input');\n\t\tcopyText.value = window.location.href;\n\t\tdocument.body.appendChild(copyText);\n\t\tcopyText.select();\n\t\tdocument.execCommand('copy');\n\t\tdocument.body.removeChild(copyText);\n\t\tthis.translate.get(['COMMON.SUCCESS', 'COMMON.LINK_COPY']).subscribe((tData) => {\n\t\t\tswal({\n\t\t\t\ttitle: tData['COMMON.SUCCESS'],\n\t\t\t\ttext: tData['COMMON.LINK_COPY'],\n\t\t\t\ticon: 'success'\n\t\t\t});\n\t\t});\n\t}\n\n\topenVideoModal() {\n\tthis.modalService.open(this.careeryMyVideoModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' })    \n\t}\n\n\t/* Function Name : gotToCV\n\t* Author : \n\t* Created Date : 30-07-2019 \n\t* Modified Date : *\n\t* Purpose : to redirect to cv\n\t* PARAMS :\n\t*/\n\tgotToCV() {\n    \n    \n\t\tthis.cvCardService.saveDefaultCV({\n\t\t\tuser_id: btoa(this.userData.id)\n\t\t  })\n\t\t  .subscribe((responseData: any) => {\n\t\t\tif (responseData.statustext == 'success') {\n\t\t\t  setTimeout(()=>{\n\t\t\t\tthis.loderService.show();\n\t\t\t  },100)\n\t\t\t  setTimeout(()=>{\n\t\t\t\tthis.loderService.hide();\n\t\t\t\tlet cvPath = this.filePathPipe.transform('careery-'+this.userData.id+'-cv.pdf', 'cv');\n\t\t\t\tvar win = window.open(cvPath, '_blank');\n\t\t\t\twin.focus();\n\t\t\t  },3000);\n\t\t\t}\n\t\t  });\n\t\t\n\t  } \n\t\t  /* Function Name : downloadDefaultCardFile\n\t\t* Author : \n\t\t* Created Date : 31-07-2019 \n\t\t* Modified Date : *\n\t\t* Purpose : to download default careery card\n\t\t* PARAMS :\n\t\t*/\n\t  downloadDefaultCardFile() {\n\t\tthis.cvCardService.saveDefaultCard({\n\t\t\tuser_id: btoa(this.userData.id)\n\t\t  })\n\t\t.subscribe((responseData)=>{\n\t\t  setTimeout(()=>{\n\t\t\tthis.loderService.show();\n\t\t  },100)\n\t\t  setTimeout(()=>{\n\t\t\tthis.loderService.hide();\n\t\t  let cvPath = this.filePathPipe.transform('careery-'+this.userData.id+'-card.pdf', 'card');\n\t\t  var win = window.open(cvPath, '_blank');\n\t\t  win.focus();\n\t\t},3000);\n\t\t})\n\t  }\n}\n","module.exports = \"<div class=\\\"profileMain\\\">\\n  <h2 class=\\\"withLine withmergin\\\">\\n    <span>{{ 'NOTIFICATIONS.ALL_NOTIFICATION'|translate }}</span>\\n    <small class=\\\"withLine-link\\\"><a [routerLink]=\\\"['/notification-settings']\\\"><i class=\\\"fa fa-cog\\\"></i> {{ 'COMMON.SETTINGS' | translate }}</a></small>\\n  </h2>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9 col-xs-12\\\">\\n        <div class=\\\"notificatiListBlock\\\">\\n\\n\\n            <div *ngFor=\\\"let notificationList of allNotifications | keyvalue\\\">\\n              <p class=\\\"key\\\" *ngIf=\\\"notificationList.value.length > 0\\\"><strong>{{ (notificationList.key == '0')? ('COMMON.TODAY' | translate) : ((notificationList.key == '1')? ('COMMON.YESTERDAY' | translate): ('COMMON.BEFORE' | translate)) }}</strong></p>\\n              <div class=\\\"notification-row alt\\\" *ngFor=\\\"let notification of notificationList.value; let i = index\\\"\\n                >\\n                <div class=\\\"notificationImg\\\" *ngIf=\\\"!notification.testimonial || (notification.testimonial && notification.testimonial.is_anonymous != 1)\\\" [class.boxSinglenoImg]=\\\"!notification?.sender.profile_pic\\\">\\n                  <img\\n                    *ngIf=\\\"notification?.sender.profile_pic\\\" [src]=\\\"(notification?.sender.profile_pic) | picturepath:'users'\\\"\\n                    alt=\\\"\\\">\\n\\n                     <img  *ngIf=\\\"notification?.sender && !notification?.sender.profile_pic && notification?.sender.gender && notification?.sender.experience_level\\\" src=\\\"assets/images/charachter/{{ notification?.sender.gender+'_'+notification?.sender.experience_level }}.png\\\" alt=\\\"\\\">\\n\\n                     <span class=\\\"status\\\" [class.active]=\\\"(currentTime - notification?.sender.last_active_time) < (5*60) \\\"></span>\\n                  </div>\\n                  <div class=\\\"notificationImg\\\" *ngIf=\\\"notification.testimonial && notification.testimonial.is_anonymous == 1 \\\">\\n                      <img   src=\\\"assets/images/testimonial_no_img.jpg\\\" alt=\\\"\\\">\\n                  </div>\\n                <div class=\\\"notificationBody\\\">\\n                  <h3 *ngIf=\\\"notification.testimonial && notification.testimonial.is_anonymous == 1 \\\">{{ 'TESTIMONIALS.ANONYMOUS'|translate }}</h3>\\n                  <h3 *ngIf=\\\"!notification.testimonial || (notification.testimonial && notification.testimonial.is_anonymous != 1)\\\">{{notification.sender.first_name+' '+ notification.sender.last_name}}</h3>\\n\\n                  <p class=\\\"tXt\\\"><i class=\\\"fa fa-bell\\\"></i> {{ 'NOTIFICATIONS.'+notification?.type | translate }}</p>\\n                </div>\\n                <div class=\\\"notificationTime\\\">\\n                  <p class=\\\"time\\\">{{ (notification.posted_on < yesterdayStartTimestamp) ? (notification.posted_on*1000|date:'MMM, dd | hh:mm a'): (notification.posted_on*1000|date:'hh:mm a') }}</p>\\n                </div>\\n              </div>\\n            </div>\\n            <ngx-pager [config]=\\\"paginationConfig\\\" [totalrow]='totalRows' class=\\\"defaultPagination\\\"></ngx-pager>\\n          </div>\\n    </div>\\n    <div class=\\\"col-md-3 col-xs-12\\\">\\n        <app-notifications [nonvisable]=\\\"'notification'\\\"></app-notifications>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvc2VlbW9yZW5vdGlmaWNhdGlvbnMvc2VlbW9yZW5vdGlmaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from \"../../services/common.service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from \"@angular/router\";\nimport * as global from '../../globalConfig';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-seemorenotifications',\n  templateUrl: './seemorenotifications.component.html',\n  styleUrls: ['./seemorenotifications.component.scss']\n})\nexport class SeemorenotificationsComponent implements OnInit {\n  currentTime: any = null;\n  yesterdayStartTimestamp: any = null;\n  allNotifications: any = {}; // all notifications \n  paginationConfig: any = null; // set pagination config\n  totalRows: any = null;\n  totaAllInvitations: any = null;\n  allInvitations: Array<any> = []; // all invitaions\n  successMessage: string = ''; // set success message\n\n  constructor(\n    private cService: CommonService,\n    private translate: TranslateService,\n    private route: Router) {\n    this.cService.activelang.subscribe((lang) => {\n\n      // this language will be used as a fallback when a translation isn't found in the current language\n      translate.setDefaultLang(lang);\n\n      // the lang to use, if the lang isn't available, it will use the current loader to get them\n      translate.use(lang);\n\n    });\n    this.yesterdayStartTimestamp = new Date();\n    this.yesterdayStartTimestamp = this.yesterdayStartTimestamp.setDate(this.yesterdayStartTimestamp.getDate() - 1);\n    this.yesterdayStartTimestamp = new Date(new Date(this.yesterdayStartTimestamp).setHours(0, 0, 0, 0)).getTime() / 1000;\n\n  }\n\n  ngOnInit() {\n\n    this.paginationConfig = {\n      perPage: 10,\n      render: (page) => {\n\n        let formPostData = {\n          \"type\": \"T,TR,PS,DCV,DCA,R,CS,CA,CD\",\n          \"status\": 0,\n          \"page\": page\n        };\n        this.cService.notificationList(formPostData).subscribe((response: any) => {\n          //console.log(\"after\", response);\n          this.currentTime = new Date().getTime() / 1000;\n\n          if ((response['statustext'] === 'success')) {\n            let notificationList = response.data.list;\n            let todayTimeStampGroup = {\n              start : new Date(new Date().setHours(0,0,0,0)).getTime()/1000 ,\n              end : new Date(new Date().setHours(23,59,59,0)).getTime()/1000\n            }\n            let yesterdayTimeStampGroup = {\n              start :todayTimeStampGroup.start - 86400 ,\n              end :  todayTimeStampGroup.end - 86400,\n            }\n            let resultList = {\n              \"0\":[],\n              \"1\":[],\n              \"2\":[]\n            };\n            notificationList.forEach(element => {\n              if (element.posted_on >= todayTimeStampGroup.start && element.posted_on <= todayTimeStampGroup.end) {\n                resultList['0'].push(element);\n              }   \n              else if (element.posted_on >= yesterdayTimeStampGroup.start && element.posted_on <= yesterdayTimeStampGroup.end) {\n                resultList['1'].push(element);\n              } else {\n                resultList['2'].push(element);\n              }\n            });\n           \n            this.allNotifications = resultList;\n            this.totalRows = response.data.pagination.rowCount;\n          }\n\n        });\n\n      }\n    }\n\n    this.connectionInvitations();\n\n\n\n  }\n\n\n  /* Function Name : connectionInvitations\n  * Author : \n  * Created Date : 20-03-2019 \n  * Modified Date : *\n  * Purpose : to get all connection invitations\n  * PARAMS :\n  */\n\n  connectionInvitations() {\n\n    this.cService.connectionInvitationList().subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n        this.allInvitations = response.data.list;\n        this.totaAllInvitations = this.allInvitations.length;\n      }\n\n    });\n  }\n\n  /* Function Name : acceptInvitation\n  * Author : \n  * Created Date : 22-03-2019 \n  * Modified Date : *\n  * Purpose : to accept invitaion\n  * PARAMS : formPostData,friend_id\n  */\n\n  acceptInvitation(friend_id: any) {\n    let formPostData = {\n      \"to_id\": btoa(friend_id),\n      \"status\": 1\n    };\n    this.cService.connectionRequest(formPostData).subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n        this.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n          swal({\n            title: tData,\n            text: response['message'],\n            icon: 'success'\n          });\n        });\n        this.connectionInvitations();\n\n      }\n    });\n  }\n\n  /* Function Name : ignoreInvitation\n  * Author : \n  * Created Date : 22-03-2019 \n  * Modified Date : *\n  * Purpose : to ignore invitaion\n  * PARAMS : friend_id, formPostData\n  */\n\n  ignoreInvitation(friend_id: any) {\n    let formPostData = {\n      \"to_id\": btoa(friend_id),\n      \"status\": 2\n    };\n    this.cService.connectionRequest(formPostData).subscribe((response: any) => {\n      if ((response['statustext'] === 'success')) {\n        this.translate.get('COMMON.SUCCESS').subscribe((tData) => {\n          swal({\n            title: tData,\n            text: response['message'],\n            icon: 'success'\n          });\n        });\n        this.connectionInvitations();\n\n      }\n    });\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"testiWrap\\\">\\n  <div>\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessage\\\">{{ successMessage }}</div>\\n  </div>\\n  <h2 class=\\\"withLine\\\"><span>{{ 'PROFILE.TESTIMONIALS' |translate }}</span></h2>\\n  <div class=\\\"testiTabs\\\">\\n    <ngb-tabset (tabChange)=\\\"changeTabEvent($event)\\\">\\n      <ngb-tab id=\\\"incoming\\\">\\n        <ng-template ngbTabTitle>{{ 'TESTIMONIALS.INCOMING' | translate }}</ng-template>\\n        <ng-template ngbTabContent>\\n\\n            <div class=\\\"text-center\\\"  *ngIf=\\\"loader.testimonial.incoming\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\" ></i> {{ 'PROFILE.PLEASE_WAIT' | translate }}</div>\\n\\n          \\n            <div class=\\\"notification-row\\\" *ngFor=\\\"let testimonial of allTestimonials\\\">\\n              <div class=\\\"notificationImg\\\" *ngIf=\\\"testimonial.is_anonymous == 0\\\">\\n                <img *ngIf=\\\"testimonial?.fromuser?.profile_pic\\\" alt=\\\"\\\" [src]=\\\"(testimonial?.fromuser?.profile_pic)| picturepath:'users'\\\">\\n                \\n                <img  *ngIf=\\\"testimonial.fromuser && !testimonial.fromuser.profile_pic && testimonial.fromuser.gender && testimonial.fromuser.experience_level\\\" src=\\\"assets/images/charachter/{{ testimonial.fromuser.gender+'_'+testimonial.fromuser.experience_level }}.png\\\" alt=\\\"\\\">\\n              </div>\\n              <div class=\\\"notificationImg\\\" *ngIf=\\\"testimonial.is_anonymous == 1\\\">\\n                  <img   src=\\\"assets/images/testimonial_no_img.jpg\\\" alt=\\\"\\\">\\n              </div>\\n              <div class=\\\"notificationBody\\\">\\n                <h3 *ngIf=\\\"testimonial.is_anonymous == 0\\\">{{testimonial.fromuser.first_name}} {{testimonial.fromuser.last_name}}</h3>\\n                <h3 *ngIf=\\\"testimonial.is_anonymous == 1\\\">{{ 'TESTIMONIALS.ANONYMOUS'|translate }}</h3>\\n                <p class=\\\"tXt\\\">{{testimonial.message}}</p>\\n              </div>\\n              <div class=\\\"notificationTime\\\">\\n                  <p class=\\\"time\\\">{{ (testimonial.posted_on < yesterdayStartTimestamp) ? (testimonial.posted_on*1000|date:'MMM, dd | hh:mm a'): (testimonial.posted_on*1000|date:'hh:mm a') }}</p>\\n                  <div class=\\\"settingsSingleButton\\\">\\n                \\n                      <button type=\\\"button\\\" (click)=\\\"acceptRefuseTestimonial(testimonial,1)\\\">{{ 'TESTIMONIALS.ACCEPT' | translate }}</button>\\n                      <button type=\\\"button\\\" (click)=\\\"acceptRefuseTestimonial(testimonial,2)\\\" class=\\\"btnRefuse\\\"><span *ngIf=\\\"loader.testimonial.refuse\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\" ></i></span>{{ 'TESTIMONIALS.REFUSE' | translate }}</button>\\n                    </div>\\n              </div>\\n              \\n            </div>\\n          <div class=\\\"settingsSingle\\\" *ngIf=\\\"!loader.testimonial.incoming && allTestimonials.length == 0\\\">\\n            <p class=\\\"text-center\\\">\\n                 {{ 'TESTIMONIALS.INCOMING_MESSAGE' | translate }}\\n            </p>\\n          </div>\\n          <ngx-pager  [config]=\\\"paginationConfigIncoming\\\"  [totalrow]='totalRows'></ngx-pager>\\n          \\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab id=\\\"accepted\\\">\\n        <ng-template ngbTabTitle >{{ 'TESTIMONIALS.ACCEPTED' | translate }}</ng-template>\\n     \\n        <ng-template ngbTabContent  >\\n            <div class=\\\"text-center\\\"  *ngIf=\\\"loader.testimonial.accepted\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\" ></i> {{ 'PROFILE.PLEASE_WAIT' | translate }}</div>\\n          <div class=\\\"text-right\\\"><span>{{ 'TESTIMONIALS.SHOW_ON_PROFILE_LBL' | translate }}</span></div>\\n          <div class=\\\"notification-row\\\" *ngFor=\\\"let accepted of acceptedTestimonials\\\">\\n\\n            <div class=\\\"notificationImg\\\" *ngIf=\\\"accepted.is_anonymous == 0\\\">\\n              <img *ngIf=\\\"accepted?.fromuser?.profile_pic\\\" alt=\\\"\\\" [src]=\\\"(accepted?.fromuser?.profile_pic)| picturepath:'users'\\\">\\n\\n              <img  *ngIf=\\\"accepted.fromuser && !accepted.fromuser.profile_pic && accepted.fromuser.gender && accepted.fromuser.experience_level\\\" src=\\\"assets/images/charachter/{{ accepted.fromuser.gender+'_'+accepted.fromuser.experience_level }}.png\\\" alt=\\\"\\\">\\n            \\n            </div>\\n            <div class=\\\"notificationImg\\\" *ngIf=\\\"accepted.is_anonymous == 1\\\"><img   src=\\\"assets/images/testimonial_no_img.jpg\\\" alt=\\\"\\\"></div>\\n            <div class=\\\"notificationBody\\\">\\n\\n              <h3 *ngIf=\\\"accepted.is_anonymous == 0\\\">{{accepted.fromuser.first_name}}</h3>\\n              <h3 *ngIf=\\\"accepted.is_anonymous == 1\\\">{{ 'TESTIMONIALS.ANONYMOUS'|translate }}</h3>\\n              <p class=\\\"tXt\\\">{{accepted.message}}</p>\\n            </div>\\n            <div class=\\\"notificationTime\\\">\\n                <p class=\\\"time\\\">{{ (accepted.posted_on < yesterdayStartTimestamp) ? (accepted.posted_on*1000|date:'MMM, dd | hh:mm a'): (accepted.posted_on*1000|date:'hh:mm a') }}</p>\\n            <div class=\\\"settingsSingleButton\\\">\\n                <button type=\\\"button\\\" [disabled]=\\\"accepted.reply.id\\\" (click)=\\\"replyTestimonial(accepted)\\\">{{ 'TESTIMONIALS.REPLY' | translate }}</button>\\n              <button *ngIf='accepted.is_show==1' type=\\\"button\\\" class=\\\"btnRefuse\\\" (click)=\\\"showHideTestimonial(accepted.id,0)\\\" class=\\\"btnRefuse\\\"><i class=\\\"fa fa-eye-slash\\\" aria-hidden=\\\"true\\\"></i> {{ 'TESTIMONIALS.HIDE_ON_PROFILE' | translate }}</button>\\n\\n              <button *ngIf='accepted.is_show==0' type=\\\"button\\\" class=\\\"btnRefuse\\\" (click)=\\\"showHideTestimonial(accepted.id,1)\\\" class=\\\"btnRefuse\\\"><i class=\\\"fa fa-eye-slash\\\" aria-hidden=\\\"true\\\"></i> {{ 'TESTIMONIALS.SHOW_ON_PROFILE' | translate }}</button>\\n              \\n            </div>\\n          </div>\\n          </div>\\n          <div class=\\\"settingsSingle\\\" *ngIf=\\\"!loader.testimonial.accepted && acceptedTestimonials.length == 0\\\">\\n              <p class=\\\"text-center\\\">\\n                  {{ 'TESTIMONIALS.ACCEPTED_MESSAGE' | translate }}\\n              </p>\\n          </div>\\n          <ngx-pager  [config]=\\\"paginationConfigAccepted\\\"  [totalrow]='totalRows'></ngx-pager>\\n\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab id=\\\"own\\\">\\n        <ng-template ngbTabTitle>{{ 'TESTIMONIALS.MY_TESTIMONY' | translate }}</ng-template>\\n        <ng-template ngbTabContent>\\n            <div class=\\\"text-center\\\"  *ngIf=\\\"loader.testimonial.own\\\" class=\\\"loader-p\\\"><i class=\\\"fa fa-cog fa-spin\\\" ></i> {{ 'PROFILE.PLEASE_WAIT' | translate }}</div>\\n              <div class=\\\"notification-row\\\" *ngFor=\\\"let own of ownTestimonials\\\">\\n\\n                <div   *ngIf=\\\"!own.replyParent || (own.replyParent && own.to_user_id != own.replyParent.to_user_id)\\\" class=\\\"notificationImg\\\" [class.inactive]=\\\"(currentTime - own.fromuser.last_active_time) > (5*60) \\\">\\n                  <img *ngIf=\\\"own.fromuser.profile_pic\\\" alt=\\\"\\\" [src]=\\\"(own?.fromuser?.profile_pic)| picturepath:'users'\\\">\\n\\n                  <img  *ngIf=\\\"own.fromuser && !own.fromuser.profile_pic && own.fromuser.gender && own.fromuser.experience_level\\\" src=\\\"assets/images/charachter/{{ own.fromuser.gender+'_'+own.fromuser.experience_level }}.png\\\" alt=\\\"\\\">\\n\\n                </div>\\n\\n                <div *ngIf=\\\"(own.replyParent && own.to_user_id == own.replyParent.to_user_id)\\\"  class=\\\"notificationImg\\\" [class.inactive]=\\\"(currentTime - own.touser.last_active_time) > (5*60) \\\"><img *ngIf=\\\"own.touser.profile_pic\\\" alt=\\\"\\\" [src]=\\\"(own?.touser?.profile_pic)| picturepath:'users'\\\">\\n\\n                  <img  *ngIf=\\\"own.touser && !own.touser.profile_pic && own.touser.gender && own.touser.experience_level\\\" src=\\\"assets/images/charachter/{{ own.touser.gender+'_'+own.touser.experience_level }}.png\\\" alt=\\\"\\\">\\n                </div>\\n\\n                  <div class=\\\"notificationBody\\\">\\n                      <h3  *ngIf=\\\"!own.replyParent || (own.replyParent && own.to_user_id != own.replyParent.to_user_id)\\\" >{{own.fromuser.first_name}} {{own.fromuser.last_name}}</h3>\\n                    <h3 *ngIf=\\\"(own.replyParent && own.to_user_id == own.replyParent.to_user_id)\\\">{{own.touser.first_name}} {{own.touser.last_name}}</h3>\\n\\n                <p  *ngIf=\\\"own.replyParent && own.replyParent.id\\\">\\n                    {{ 'TESTIMONIALS.REPLIED_TO' | translate }}\\n                    <br/>\\n                  {{ own.replyParent.message }}\\n                </p>\\n                <p [class.reply]=\\\"own.replyParent\\\">\\n                  {{own.message}}\\n                  <strong *ngIf=\\\"own.replyParent\\\"> - {{ own.posted_on | date }}</strong>\\n                </p>\\n              </div>\\n              <div class=\\\"notificationTime\\\">\\n                  {{ ((own.replyParent)? own.replyParent.posted_on  : own.posted_on) | date  }}\\n                </div>\\n              </div>\\n        <div class=\\\"settingsSingle\\\" *ngIf=\\\"!loader.testimonial.own && ownTestimonials &&  ownTestimonials.length == 0\\\">\\n            <p class=\\\"text-center\\\">\\n                {{ 'TESTIMONIALS.OWN_MESSAGE' | translate }}\\n            </p>\\n        </div>\\n        <ngx-pager  [config]=\\\"paginationConfigOwn\\\"  [totalrow]='totalRows'></ngx-pager>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </div>\\n</div>\\n\\n<!-- edit testimonial --> \\n  <ng-template #editModal let-modal>\\n    <h2><span>{{ 'TESTIMONIALS.EDIT_TESTIMONIAL' | translate}}:</span></h2>\\n    <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n    <div class=\\\"modal-body\\\">\\n      <div>\\n     \\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{ errorMessage }}</div>\\n      </div>\\n\\n      <div class=\\\"proEdit\\\">\\n\\n        <div class=\\\"formWrap alt\\\">\\n           <textarea class=\\\"inpField fullWidth\\\" [(ngModel)]=\\\"testimonialForm.message\\\" placeholder=\\\"Testimonial message\\\"></textarea>\\n          <div *ngIf=\\\"testimonialForm.submit && (testimonialForm.message==null || testimonialForm.message =='')\\\" class=\\\"alert alert-danger\\\">\\n            {{ 'TESTIMONIALS.REQUIRED' | translate }}\\n          </div>\\n        </div>\\n        <div class=\\\"buttonGr\\\">\\n          <div class=\\\"text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"btnOrange\\\" name=\\\"button\\\" (click)=submitEditTestimonialForm(testimonialForm.id)>{{ 'TESTIMONIALS.BTN_UPDATE' | translate }}</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #replyModal let-modal>\\n      <h2><span>{{ 'TESTIMONIALS.REPLY_TESTIMONIAL' | translate}}:</span></h2>\\n      <span class=\\\"modalClose\\\" (click)=\\\"modal.dismiss('Cross click')\\\"></span>\\n      <div class=\\\"modal-body\\\">\\n        <div>\\n       \\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\">{{ errorMessage }}</div>\\n        </div>\\n  \\n        <div class=\\\"proEdit\\\">\\n  \\n          <div class=\\\"formWrap alt\\\">\\n             <textarea class=\\\"inpField fullWidth\\\" [(ngModel)]=\\\"testimonialReplyForm.message\\\" placeholder=\\\"{{ 'TESTIMONIALS.REPLY_TESTIMONIAL_MESSAGE' | translate}}\\\"></textarea>\\n            <div *ngIf=\\\"testimonialReplyForm.submit && (testimonialReplyForm.message==null || testimonialReplyForm.message =='')\\\" class=\\\"alert alert-danger\\\">\\n              {{ 'TESTIMONIALS.REQUIRED' | translate }}\\n            </div>\\n          </div>\\n          <div class=\\\"buttonGr\\\">\\n            <div class=\\\"text-center\\\">\\n              <button [disabled]=\\\"testimonialReplyForm.submit\\\" type=\\\"button\\\" class=\\\"btnOrange\\\" name=\\\"button\\\" (click)=submitReplyTestimonialForm()>{{ 'TESTIMONIALS.SEND' | translate }}</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvdGVzdGltb25pYWwvdGVzdGltb25pYWwuY29tcG9uZW50LnNjc3MifQ== */\"","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 22-02-2019\n# Module                : TestimonialComponent                     \n# Object name           : TestimonialComponent    \n# Functionality         : user testimonials\n# Purpose               : constructor, ngOnInit, \n*******************************************************/\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TestimonialService } from '../../services/testimonial.service';\nimport { CommonService } from \"../../services/common.service\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from \"@angular/router\";\nimport * as global from '../../globalConfig';\nimport swal from 'sweetalert';\n@Component({\n\tselector: 'app-testimonial',\n\ttemplateUrl: './testimonial.component.html',\n\tstyleUrls: ['./testimonial.component.scss']\n})\nexport class TestimonialComponent implements OnInit {\n\n\t@ViewChild('editModal') editModal; // edit testimonial modal\n\t@ViewChild('replyModal') replyModal; // reply testimonial modal\n\tallTestimonials: any = []; // all testimonials \n\tacceptedTestimonials: any = []; // all accepted testimonials \n\townTestimonials:any = [];// all own posted testimonials \n\timagePath: any = null; // set image path\n\tmessage: any = ''; // set message\n\teditData: any = null; // get edit data of a testimonial\n\tsuccessMessage: string = ''; // set success message\n\n\terrorMessage: string = ''; // set error message\n\tshowMessage: string = ''; // show message\n\thideMessage: string = ''; // hide message\n\tcurrentTime = (new Date()).getTime() / 1000; // set current time\n\tpaginationConfigIncoming: any = null;\n\tpaginationConfigAccepted: any = null;\n\tpaginationConfigOwn: any = null;\n\tactiveTab: any = 'incoming';\n\ttotalRows: any = null;\n\ttestimonialForm: any = { // testimonial form\n\t\t\"id\": null,\n\t\t\"message\": '',\n\t\t\"error\": 0,\n\t\t\"submit\": false\n\t};\n\ttestimonialReplyForm: any = { // testimonial form\n\t\t\"id\": null,\n\t\t\"message\": '',\n\t\t\"error\": 0,\n\t\t\"submit\": false\n\t};\n\n\tloader: any = { // loader data\n\t\t'testimonial': {\n\t\t\t'incoming': false,\n\t\t\t'accepted': false,\n\t\t\t'own': false,\n\t\t\t'accepteorrefuse': false,\n\t\t\t'edit': false,\n\t\t\t'delete': false,\n\t\t\t'reply': false,\n\t\t}\n\t};\n\ttodayTimeStampGroup:any = {};\n\tyesterdayTimeStampGroup:any = {};\n\tyesterdayStartTimestamp: any = null;\n\t/* Function Name : constructor\n\t  * Author : \n\t  * Created Date : 22-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to define the all helpful objects and define the languages data\n\t  * PARAMS : tService, cService, modalService, route, translate\n\t  */\n\tconstructor(\n\t\tpublic tService: TestimonialService,\n\t\tprivate cService: CommonService,\n\t\tprivate modalService: NgbModal,\n\t\tprivate route: Router,\n\t\tprivate translate: TranslateService\n\t) {\n\n\t\tthis.cService.activelang.subscribe((lang) => {\n\n\t\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\t\ttranslate.setDefaultLang(lang);\n\n\t\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\t\ttranslate.use(lang);\n\n\t\t});\n\t\tthis.yesterdayStartTimestamp = new Date();\n\t\tthis.yesterdayStartTimestamp = this.yesterdayStartTimestamp.setDate(this.yesterdayStartTimestamp.getDate() - 1);\n\t\tthis.yesterdayStartTimestamp = new Date(new Date(this.yesterdayStartTimestamp).setHours(0, 0, 0, 0)).getTime() / 1000;\n\n\t\tthis.todayTimeStampGroup = {\n\t\t\tstart : new Date(new Date().setHours(0,0,0,0)).getTime()/1000 ,\n\t\t\tend : new Date(new Date().setHours(23,59,59,0)).getTime()/1000\n\t\t  }\n\t\tthis.yesterdayTimeStampGroup = {\n\t\tstart :this.todayTimeStampGroup.start - 86400 ,\n\t\tend :  this.todayTimeStampGroup.end - 86400,\n\t\t}\n\n\t}\n\t/* Function Name : ngOnInit\n\t  * Author : \n\t  * Created Date : 22-02-2019 \n\t  * Modified Date : *\n\t  * Purpose : to get data after html load\n\t  * PARAMS : \n\t  */\n\tngOnInit() {\n\n\t\t//localStorage.setItem('_sp', 'profile_user');\n\t\tthis.testimonialDetails();\n\n\t\tlocalStorage.setItem('_sp', 'profile_user');\n\t\tthis.paginationConfigIncoming = {\n\t\t\tperPage: 10,\n\t\t\trender: (page) => {\n\t\t\t\tthis.testimonialDetails(page);\n\t\t\t}\n\t\t}\n\t\tthis.paginationConfigAccepted = {\n\t\t\tperPage: 10,\n\t\t\trender: (page) => {\n\t\t\t\tthis.acceptedTestimonial(page);\n\t\t\t}\n\t\t}\n\t\tthis.paginationConfigOwn = {\n\t\t\tperPage: 10,\n\t\t\trender: (page) => {\n\t\t\t\tthis.ownTestimonial(page);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* Function Name : changeTabEvent\n\t* Author : \n\t* Created Date : 22-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get data on tab change\n\t* PARAMS : e\n\t*/\n\tchangeTabEvent(e) {\n\n\t\tthis.activeTab = e.nextId;\n\t\tlocalStorage.removeItem('_nxp');\n\t\t// switch (e.nextId) {\n\t\t// \tcase \"incoming\":\n\t\t// \t\tthis.testimonialDetails();\n\t\t// \t\tbreak;\n\t\t// \tcase \"accepted\":\n\t\t// \t\tthis.acceptedTestimonial();\n\t\t// \t\tbreak;\n\t\t// \tcase \"own\":\n\t\t// \t\tthis.ownTestimonial();\n\t\t// \t\tbreak;\n\n\t\t// }\n\t}\n\n\n\t/* Function Name : testimonialDetails\n\t* Author : \n\t* Created Date : 22-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get all testimonials\n\t* PARAMS : \n\t*/\n\n\ttestimonialDetails(page = 1) {\n\t\tlet formPostData = {\n\t\t\t\"type\": \"pending\",\n\t\t\t\"page\": page\n\t\t};\n\t\tthis.loader.testimonial.incoming = true;\n\t\tthis.tService.listTestimonial(formPostData).subscribe((response: any) => {\n\t\t\tthis.loader.testimonial.incoming = false;\n\t\t\tif ((response['statustext'] === 'success')) {\n\n\t\t\t\tthis.allTestimonials = response.data.list;\n\t\t\t\tthis.totalRows = response.data.pager.rowCount;\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/* Function Name : acceptedTestimonial\n\t* Author : \n\t* Created Date : 22-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get accepted testimonial\n\t* PARAMS :  \n\t*/\n\tacceptedTestimonial(page = 1) {\n\n\t\tlet formPostData = {\n\t\t\t\"type\": \"accepted\",\n\t\t\t\"page\": page\n\t\t};\n\t\tthis.loader.testimonial.accepted = true;\n\t\tthis.tService.listTestimonial(formPostData).subscribe((response: any) => {\n\t\t\tthis.loader.testimonial.accepted = false;\n\t\t\tif ((response['statustext'] === 'success')) {\n\n\t\t\t\tthis.acceptedTestimonials = response.data.list;\n\t\t\t\tthis.totalRows = response.data.pager.rowCount;\n\t\t\t\tthis.imagePath = global.s3URL + 'userspic/';\n\t\t\t\t//this.testimonialDetails();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/* Function Name : ownTestimonial\n\t* Author : \n\t* Created Date : 22-02-2019 \n\t* Modified Date : *\n\t* Purpose : to check own testimonial\n\t* PARAMS : \n\t*/\n\townTestimonial(page = 1) {\n\n\t\tlet formPostData = {\n\t\t\t\"type\": \"own\",\n\t\t\t\"page\": page\n\t\t};\n\t\tthis.loader.testimonial.own = true;\n\t\tthis.tService.listTestimonial(formPostData).subscribe((response: any) => {\n\t\t\tthis.loader.testimonial.own = false;\n\t\t\tif ((response['statustext'] === 'success')) {\n\n\t\t\t\tthis.ownTestimonials = response.data.list;\n\t\t\t\tthis.totalRows = response.data.pager.rowCount;\n\t\t\t\tthis.imagePath = global.s3URL + 'userspic/';\n\t\t\t\t//console.log(this.ownTestimonials);\n\t\t\t}\n\n\t\t});\n\t}\n\n\tclickPager(type, event) {\n\t\tlet page = event;\n\t\tif (type == 'accept') {\n\t\t\tthis.acceptedTestimonial(page);\n\t\t} else if (type == 'pending') {\n\t\t\tthis.testimonialDetails(page);\n\t\t} else if (type == 'own') {\n\t\t\tthis.ownTestimonial(page);\n\t\t}\n\t}\n\n\t/* Function Name : openEditTestimonial\n\t* Author : \n\t* Created Date : 22-02-2019 \n\t* Modified Date : *\n\t* Purpose : open edit testimonial modal\n\t* PARAMS :  editId,content\n\t*/\n\n\topenEditTestimonial(editId, content) {\n\t\t//this.loader.testimonial.edit = true;\n\t\tlet formPostData = {\n\t\t\t\"id\": btoa(editId),\n\t\t\t\"message\": content\n\t\t};\n\n\t\tthis.tService.editTestimonial(formPostData).subscribe((responseData: any) => {\n\t\t\tif (responseData) {\n\t\t\t\tthis.editData = responseData.data;\n\t\t\t\tthis.testimonialForm.message = responseData.data.message;\n\t\t\t\tthis.testimonialForm.id = responseData.data.id;\n\t\t\t\t//console.log(responseData);\n\t\t\t}\n\t\t});\n\n\t\tthis.modalService.open(this.editModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n\n\t}\n\n\t/* Function Name : submitEditTestimonialForm\n\t * Author : \n\t * Created Date : 22-02-2019 \n\t * Modified Date : *\n\t * Purpose : to update testimonial\n\t * PARAMS :  id\n\t */\n\tsubmitEditTestimonialForm(id: any) {\n\t\tthis.loader.testimonial.edit = true;\n\t\tthis.testimonialForm.submit = true;\n\t\tthis.testimonialForm.message = this.testimonialForm.message.trim();\n\n\t\tif (this.testimonialForm.message == '') {\n\t\t\tthis.testimonialForm.error = 1;\n\n\t\t} else {\n\t\t\tthis.testimonialForm.error = 0;\n\t\t\tthis.errorMessage = '';\n\n\t\t}\n\n\t\t//console.log(this.testimonialForm.message); return false;\n\n\t\tif (this.testimonialForm.error == 0) {\n\n\t\t\tlet formPostData = {\n\t\t\t\t\"id\": btoa(id),\n\t\t\t\t\"message\": this.testimonialForm.message\n\t\t\t};\n\t\t\t//console.log(formPostData); return false;\n\t\t\tthis.tService.editTestimonial(formPostData)\n\t\t\t\t.subscribe((response: any) => {\n\t\t\t\t\tif (response.statustext === 'success') {\n\t\t\t\t\t\tthis.modalService.dismissAll();\n\t\t\t\t\t\tthis.errorMessage = '';\n\t\t\t\t\t\tthis.ownTestimonial();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/* Function Name : deleteTestimonial\n\t* Author : \n\t* Created Date : 22-02-2019 \n\t* Modified Date : *\n\t* Purpose : to soft delete testimonial\n\t* PARAMS :  id\n\t*/\n\n\tdeleteTestimonial(id: any) {\n\n\t\tthis.translate.get('Are you sure delete testimonmial').subscribe((tData) => {\n\t\t\tlet c = confirm(tData);\n\t\t\tif (c) {\n\t\t\t\tthis.loader.testimonial.delete = true;\n\t\t\t\tlet formPostData = {\n\t\t\t\t\t\"id\": btoa(id)\n\t\t\t\t};\n\n\t\t\t\tthis.tService.deleteTestimonial(formPostData).subscribe((responseData: any) => {\n\t\t\t\t\tif (responseData.statustext === 'success') {\n\t\t\t\t\t\tthis.translate.get(['COMMON.SUCCESS']).subscribe((tData) => {\n\t\t\n\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\ttitle: tData['COMMON.SUCCESS'],\n\t\t\t\t\t\t\ttext: responseData.message,\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/* Function Name : acceptRefuseTestimonial\n\t* Author : \n\t* Created Date : 22-02-2019 \n\t* Modified Date : *\n\t* Purpose : to accept or refuse a testimonial \n\t* PARAMS :  testimonial, status\n\t*/\n\tacceptRefuseTestimonial(testimonial: any, status: any) {\n\n\t\tlet msg = '';\n\t\tif (status === 1) {\n\t\t\tmsg = 'TESTIMONIALS.ACCEPTED_CONFIRM_MSG';\n\t\t} else {\n\t\t\tmsg = 'TESTIMONIALS.REFUSE_CONFIRM_MSG';\n\t\t}\n\n\t\tthis.translate.get(['COMMON.ARE_YOU_SURE', msg]).subscribe((tData) => {\n\n\t\t\tswal({\n\t\t\t\ttitle: tData['COMMON.ARE_YOU_SURE'],\n\t\t\t\ttext: tData[msg],\n\t\t\t\ticon: 'warning',\n\t\t\t\tbuttons : {\n\t\t\t\t\tcancel: true,\n    \t\t\t\tconfirm: true\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}).then((result) => {\n\t\t\t\t\n\t\t\t\tif (result) {\n\t\t\t\t\tthis.loader.testimonial.accepteorrefuse = true;\n\t\t\t\t\tlet formPostData = {\n\t\t\t\t\t\t\"id\": btoa(testimonial.id),\n\t\t\t\t\t\t\"type\": \"status\",\n\t\t\t\t\t\t\"status\": status\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.tService.acceptTestimonial(formPostData).subscribe((responseData: any) => {\n\t\t\t\t\t\tthis.loader.testimonial.accepteorrefuse = false;\n\t\t\t\t\t\tif (responseData.statustext === 'success') {\n\t\t\t\t\t\t\tthis.translate.get(['COMMON.SUCCESS']).subscribe((tData) => {\n          \n\t\t\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\t\t  title: tData['COMMON.SUCCESS'],\n\t\t\t\t\t\t\t\t  text: responseData.message,\n\t\t\t\t\t\t\t\t  icon: 'success'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t  });\n\t\t\t\t\t\t\tthis.testimonialDetails();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t})\n\t\t});\n\t}\n\n\n\t/* Function Name : showHideTestimonial\n\t* Author : \n\t* Created Date : 25-02-2019 \n\t* Modified Date : *\n\t* Purpose : to show hide testimonial in profile\n\t* PARAMS :  id, is_show\n\t*/\n\n\tshowHideTestimonial(id: any, is_show: number) {\n\n\t\tif (is_show == 1) {\n\n\t\t\tthis.showMessage = 'TESTIMONIALS.SHOW';\n\n\t\t} else {\n\n\t\t\tthis.showMessage = 'TESTIMONIALS.HIDE';\n\t\t}\n\n\t\tthis.translate.get(this.showMessage).subscribe((tData) => {\n\t\t\tswal({\n\t\t\t\ttitle: '',\n\t\t\t\ttext: tData,\n\t\t\t\ticon: \"warning\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tcancel: true,\n\t\t\t\t\tconfirm: true,\n\t\t\t\t},\n\t\t\t}).then((willDelete) => {\n\t\t\t\tif (willDelete) {\n\t\t\t\t\tlet formPostData = {\n\t\t\t\t\t\t\"id\": btoa(id),\n\t\t\t\t\t\t\"type\": \"profile\",\n\t\t\t\t\t\t'status': is_show\n\t\t\t\t\t};\n\t\t\t\t\tthis.tService.acceptTestimonial(formPostData).subscribe((responseData: any) => {\n\t\t\t\t\t\tif (responseData.statustext === 'success') {\n\t\t\t\t\t\t\tthis.translate.get(['COMMON.SUCCESS']).subscribe((tData) => {\n          \n\t\t\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\t\t  title: tData['COMMON.SUCCESS'],\n\t\t\t\t\t\t\t\t  text: responseData.message,\n\t\t\t\t\t\t\t\t  icon: 'success'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t  });\n\t\t\t\t\t\t\tthis.acceptedTestimonial();\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tthis.successMessage = '';\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t\tthis.testimonialDetails();\n\t\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t}\n\t\t\t})\n\n\t\t});\n\t}\n\n\t/* Function Name : replyTestimonial\n\t* Author : \n\t* Created Date : 17-06-2019 \n\t* Modified Date : *\n\t* Purpose : to reply a incoming testimonial\n\t* PARAMS :  testimonial\n\t*/\n\treplyTestimonial(testimonial) {\n\t\tthis.testimonialReplyForm.id = testimonial.id;\n\t\tthis.testimonialReplyForm.submit = false;\n\t\tthis.modalService.open(this.replyModal, { size: 'lg', centered: true, windowClass: 'DefaultModal' });\n\t}\n\t/* Function Name : submitReplyTestimonialForm\n\t* Author : \n\t* Created Date : 17-06-2019 \n\t* Modified Date : *\n\t* Purpose : to submit reply of a incoming testimonial\n\t* PARAMS :  \n\t*/\n\tsubmitReplyTestimonialForm() {\n\t\tthis.loader.testimonial.reply = true;\n\t\t\n\t\tthis.testimonialReplyForm.message = this.testimonialReplyForm.message.trim();\n\n\t\tif (this.testimonialReplyForm.message == '') {\n\t\t\tthis.testimonialReplyForm.error = 1;\n\n\t\t} else {\n\t\t\tthis.testimonialReplyForm.error = 0;\n\t\t\tthis.errorMessage = '';\n\t\t}\n\t\tif (this.testimonialReplyForm.error == 0) {\n\t\t\tthis.testimonialReplyForm.submit = true;\n\t\t\tlet formPostData = {\n\t\t\t\t\"id\": btoa(this.testimonialReplyForm.id),\n\t\t\t\t\"message\": this.testimonialReplyForm.message\n\t\t\t};\n\t\t\t//console.log(formPostData); return false;\n\t\t\tthis.tService.replyTestimonial(formPostData)\n\t\t\t\t.subscribe((response: any) => {\n\t\t\t\t\tthis.testimonialReplyForm.submit = false;\n\t\t\t\t\t\n\t\t\t\t\tif (response.statustext === 'success') {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet selectedTestimonialIndex = this.acceptedTestimonials.findIndex((item)=>{\n\t\t\t\t\t\t\treturn item.id ==  this.testimonialReplyForm.id;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.acceptedTestimonials[selectedTestimonialIndex]['reply']['id'] = this.testimonialReplyForm.id+'-'+selectedTestimonialIndex;\n\n\t\t\t\t\t\tthis.modalService.dismissAll();\n\t\t\t\t\t\tthis.errorMessage = '';\n\t\t\t\t\t\tthis.translate.get(['COMMON.SUCCESS']).subscribe((tData) => {\n          \n\t\t\t\t\t\t\tswal({\n\t\t\t\t\t\t\t  title: tData['COMMON.SUCCESS'],\n\t\t\t\t\t\t\t  text: response.message,\n\t\t\t\t\t\t\t  icon: 'success'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t  });\n\t\t\t\t\t\tthis.testimonialDetails();\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.successMessage = '';\n\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t}\n\t}\n\t//============ End ===========\n}\n","/*****************************************************\n# Company Name          : \n# Author                : \n# Created Date          : 25-02-2019\n# Module                : TestimonialService                     \n# Object name           : TestimonialService    \n# Functionality         : all api calls for testimonials\n# Purpose               : constructor,addTestimonial,listTestimonial,editTestimonial,deleteTestimonial,acceptTestimonial,publicTestimonial\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport * as global from '../globalConfig';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class TestimonialService {\n\n\n\thttpOptions: object;\n\t/* Function Name : constructor\n\t* Author : \n\t* Created Date : 10-01-2019 \n\t* Modified Date : *\n\t* Purpose : to define the all helpful objects and define the languages data\n\t* PARAMS : http\n\t*/\n\tconstructor(\n\t\tprivate http: HttpClient) {\n\n\t}\n\n\t/* Function Name : addTestimonial\n\t* Author : \n\t* Created Date : 25-02-2019 \n\t* Modified Date : *\n\t* Purpose : to add new testimonial\n\t* PARAMS : formData\n\t*/\n\taddTestimonial(formData) {\n\t\treturn this.http.post(global.API_URL + 'testimonial/add', global.APPEND_REQUEST_DATA(formData));\n\t}\n\t/* Function Name : listTestimonial\n\t* Author : \n\t* Created Date : 25-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get list of testimonial\n\t* PARAMS : formData\n\t*/\n\tlistTestimonial(formData) {\n\t\treturn this.http.post(global.API_URL + 'testimonial/list', global.APPEND_REQUEST_DATA(formData));\n\t}\n\t/* Function Name : editTestimonial\n\t* Author : \n\t* Created Date : 25-02-2019 \n\t* Modified Date : *\n\t* Purpose : to edit own testimonial\n\t* PARAMS : formData\n\t*/\n\teditTestimonial(formData) {\n\t\treturn this.http.post(global.API_URL + 'testimonial/edit', global.APPEND_REQUEST_DATA(formData));\n\t}\n\t/* Function Name : deleteTestimonial\n\t* Author : \n\t* Created Date : 25-02-2019 \n\t* Modified Date : *\n\t* Purpose : to delete a testimonial\n\t* PARAMS : formData\n\t*/\n\tdeleteTestimonial(formData) {\n\t\treturn this.http.post(global.API_URL + 'testimonial/delete', global.APPEND_REQUEST_DATA(formData));\n\t}\n\t/* Function Name : acceptTestimonial\n\t* Author : \n\t* Created Date : 25-02-2019 \n\t* Modified Date : *\n\t* Purpose : to accept testimonial\n\t* PARAMS : formData\n\t*/\n\tacceptTestimonial(formData) {\n\t\treturn this.http.post(global.API_URL + 'testimonial/status-change', global.APPEND_REQUEST_DATA(formData));\n\t}\n\t/* Function Name : publicTestimonial\n\t* Author : \n\t* Created Date : 25-02-2019 \n\t* Modified Date : *\n\t* Purpose : to get testimonial list\n\t* PARAMS : formData\n\t*/\n\tpublicTestimonial(formData) {\n\t\treturn this.http.post(global.API_URL + 'testimonial/public', global.APPEND_REQUEST_DATA(formData));\n\t}\n\n\t/* Function Name : replyTestimonial\n* Author : \n* Created Date :17-06-2019 \n* Modified Date : *\n* Purpose : to sen reply of  testimonial\n* PARAMS : formData\n*/\n\treplyTestimonial(formData) {\n\t\treturn this.http.post(global.API_URL + 'testimonial/send-reply', global.APPEND_REQUEST_DATA(formData));\n\t}\n\n\n\n\n\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {UsersService} from \"./services/users.service\";\nimport {CommonService} from \"./services/common.service\";\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport * as CryptoJS from 'crypto-js';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetupprofileGuard implements CanActivate {\n\n  constructor(private uService: UsersService, private router: Router, private cService: CommonService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      let user:any = null;\n      if (localStorage.getItem(\"_user\")) {\n        user = this.cService.getLoggedUserData();\n        user = parseInt(user._i);\n        user = CryptoJS.AES.encrypt(JSON.stringify(user), 'careery');\n        user = user.toString();\n      }\n      else if (localStorage.getItem('_tmpu')) {\n        user = localStorage.getItem('_tmpu');\n      } \n      return this.uService.userpreviewCvInfo({cv_user:user})\n      .pipe(map((responseData:any)=>{\n        if (responseData.statustext === 'success') {\n          let userData = responseData.data;\n          if (\n            userData.experience_level &&\n            userData.email &&\n            userData.mobile_no &&\n            userData.country_id &&\n            userData.city_id &&\n            userData.nationality_id &&\n            userData.dream_job_id &&\n            userData.dream_job_location_id &&\n            userData.dream_job_type \n            // &&\n            // userData.degree.length > 0 &&\n            // userData.experience.length > 0 &&\n            // userData.skills.length > 0\n            ) {\n              return true;\n            } else {\n              this.router.navigate['/setup-profile'];\n              return false;\n            }\n        } else {\n          return false;\n        }\n      }));\n\n  }\n}\n"],"sourceRoot":""}